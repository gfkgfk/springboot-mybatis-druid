2022-08-30 08:50:45.436 [main] [INFO ] com.test.springboot.SpringbootApplication - Starting SpringbootApplication using Java 1.8.0_291 on gaofengkai with PID 30416 (D:\BackEnd\workspace\springboot\target\classes started by gaofengkai in D:\BackEnd\workspace\springboot)
2022-08-30 08:50:45.441 [main] [INFO ] com.test.springboot.SpringbootApplication - The following profiles are active: prod
2022-08-30 08:50:45.442 [main] [DEBUG] org.springframework.boot.SpringApplication - Loading source class com.test.springboot.SpringbootApplication
2022-08-30 08:50:45.479 [main] [DEBUG] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66f57048
2022-08-30 08:50:46.577 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-08-30 08:50:46.577 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-08-30 08:50:46.584 [main] [DEBUG] o.s.boot.autoconfigure.AutoConfigurationPackages - @EnableAutoConfiguration was declared on a class in the package 'com.test.springboot'. Automatic @Repository and @Entity scanning is enabled.
2022-08-30 08:50:46.630 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48 ms. Found 1 MongoDB repository interfaces.
2022-08-30 08:50:46.638 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-08-30 08:50:46.639 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-08-30 08:50:46.652 [main] [INFO ] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.test.springboot.mapper.mongodb.MongoUserDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-08-30 08:50:46.652 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2022-08-30 08:50:46.734 [main] [WARN ] org.mybatis.spring.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'mongoUserDao' and 'com.test.springboot.mapper.mongodb.MongoUserDao' mapperInterface. Bean already defined with the same name!
2022-08-30 08:50:47.259 [main] [DEBUG] o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: C:\Users\Administrator\.m2\repository\org\springframework\boot\spring-boot\2.5.7\spring-boot-2.5.7.jar
2022-08-30 08:50:47.259 [main] [DEBUG] o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: C:\Users\Administrator\.m2\repository\org\springframework\boot\spring-boot\2.5.7\spring-boot-2.5.7.jar
2022-08-30 08:50:47.260 [main] [DEBUG] o.s.b.w.e.tomcat.TomcatServletWebServerFactory - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2022-08-30 08:50:47.275 [main] [INFO ] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2022-08-30 08:50:47.281 [main] [INFO ] org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2022-08-30 08:50:47.282 [main] [INFO ] org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-08-30 08:50:47.282 [main] [INFO ] org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.55]
2022-08-30 08:50:47.368 [main] [INFO ] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-08-30 08:50:47.368 [main] [DEBUG] o.s.b.w.s.c.ServletWebServerApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2022-08-30 08:50:47.369 [main] [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1890 ms
2022-08-30 08:50:47.531 [main] [DEBUG] o.s.b.web.servlet.ServletContextInitializerBeans - Mapping filters: filterRegistrationBean urls=[/*] order=-2147483647, filterRegistrationBean urls=[/*] order=2147483647, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, httpTraceFilter urls=[/*] order=2147483637
2022-08-30 08:50:47.532 [main] [DEBUG] o.s.b.web.servlet.ServletContextInitializerBeans - Mapping servlets: dispatcherServlet urls=[/], statViewServlet urls=[/druid/*]
2022-08-30 08:50:47.550 [main] [DEBUG] o.s.b.a.metrics.web.servlet.WebMvcMetricsFilter - Filter 'webMvcMetricsFilter' configured for use
2022-08-30 08:50:47.551 [main] [DEBUG] o.s.b.w.s.filter.OrderedCharacterEncodingFilter - Filter 'characterEncodingFilter' configured for use
2022-08-30 08:50:47.551 [main] [DEBUG] o.s.boot.actuate.web.trace.servlet.HttpTraceFilter - Filter 'httpTraceFilter' configured for use
2022-08-30 08:50:48.157 [main] [INFO ] org.mongodb.driver.cluster - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2022-08-30 08:50:48.198 [cluster-rtt-ClusterId{value='630d5ee8ed580e661f943b97', description='null'}-localhost:27017] [INFO ] org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:64}] to localhost:27017
2022-08-30 08:50:48.198 [cluster-ClusterId{value='630d5ee8ed580e661f943b97', description='null'}-localhost:27017] [INFO ] org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:65}] to localhost:27017
2022-08-30 08:50:48.198 [cluster-ClusterId{value='630d5ee8ed580e661f943b97', description='null'}-localhost:27017] [INFO ] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=14450200}
2022-08-30 08:50:48.316 [main] [DEBUG] o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2022-08-30 08:50:48.751 [main] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2022-08-30 08:50:48.879 [main] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 43 mappings in 'requestMappingHandlerMapping'
2022-08-30 08:50:49.211 [main] [INFO ] o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 16 endpoint(s) beneath base path '/monitor'
2022-08-30 08:50:49.292 [main] [INFO ] s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-08-30 08:50:49.399 [main] [DEBUG] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2022-08-30 08:50:49.943 [main] [INFO ] org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [110.40.220.207:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-test-consumer-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = test-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2022-08-30 08:50:49.992 [main] [INFO ] org.apache.kafka.common.utils.AppInfoParser - Kafka version: 2.7.2
2022-08-30 08:50:49.993 [main] [INFO ] org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: 37a1cc36bf4d76f3
2022-08-30 08:50:49.993 [main] [INFO ] org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1661820649991
2022-08-30 08:50:49.994 [main] [INFO ] org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Subscribed to topic(s): test
2022-08-30 08:50:49.999 [main] [INFO ] org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2022-08-30 08:50:50.008 [main] [INFO ] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2022-08-30 08:50:50.009 [main] [INFO ] s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2022-08-30 08:50:50.021 [main] [INFO ] s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 6 custom documentation plugin(s)
2022-08-30 08:50:50.057 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 08:50:50.171 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: testUsingGET_1
2022-08-30 08:50:50.173 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: test2UsingGET_1
2022-08-30 08:50:50.183 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 08:50:50.185 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: testAopUsingGET_1
2022-08-30 08:50:50.187 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 08:50:50.189 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getCityUsingPOST_1
2022-08-30 08:50:50.191 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getFirstStudentUsingPOST_1
2022-08-30 08:50:50.213 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 08:50:50.215 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonUsingPOST_1
2022-08-30 08:50:50.216 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingGET_1
2022-08-30 08:50:50.216 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingHEAD_1
2022-08-30 08:50:50.217 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingPOST_1
2022-08-30 08:50:50.217 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingPUT_1
2022-08-30 08:50:50.218 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingPATCH_1
2022-08-30 08:50:50.218 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingDELETE_1
2022-08-30 08:50:50.218 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingOPTIONS_1
2022-08-30 08:50:50.219 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingTRACE_1
2022-08-30 08:50:50.219 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingGET_1
2022-08-30 08:50:50.220 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingHEAD_1
2022-08-30 08:50:50.220 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingPOST_1
2022-08-30 08:50:50.220 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingPUT_1
2022-08-30 08:50:50.221 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingPATCH_1
2022-08-30 08:50:50.221 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingDELETE_1
2022-08-30 08:50:50.221 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingOPTIONS_1
2022-08-30 08:50:50.222 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingTRACE_1
2022-08-30 08:50:50.223 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingGET_1
2022-08-30 08:50:50.223 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingHEAD_1
2022-08-30 08:50:50.224 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingPOST_1
2022-08-30 08:50:50.224 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingPUT_1
2022-08-30 08:50:50.225 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingPATCH_1
2022-08-30 08:50:50.225 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingDELETE_1
2022-08-30 08:50:50.225 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingOPTIONS_1
2022-08-30 08:50:50.226 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingTRACE_1
2022-08-30 08:50:50.227 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: serializationUsingPOST_1
2022-08-30 08:50:50.229 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingGET_1
2022-08-30 08:50:50.230 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingHEAD_1
2022-08-30 08:50:50.230 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingPOST_1
2022-08-30 08:50:50.231 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingPUT_1
2022-08-30 08:50:50.231 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingPATCH_1
2022-08-30 08:50:50.231 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingDELETE_1
2022-08-30 08:50:50.232 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingOPTIONS_1
2022-08-30 08:50:50.232 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingTRACE_1
2022-08-30 08:50:50.236 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 08:50:50.238 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: addRedisUsingPOST_1
2022-08-30 08:50:50.239 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: deleteRedisUsingPOST_1
2022-08-30 08:50:50.239 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getRedisUsingPOST_1
2022-08-30 08:50:50.240 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateRedisUsingPOST_1
2022-08-30 08:50:50.246 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 08:50:50.248 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: addJdbcStudentUsingPOST_1
2022-08-30 08:50:50.251 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: queryStudentByIdUsingGET_1
2022-08-30 08:50:50.251 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: queryStudentById2UsingPOST_1
2022-08-30 08:50:50.252 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: queryStudentById3UsingPOST_1
2022-08-30 08:50:50.267 [main] [DEBUG] o.s.b.a.l.ConditionEvaluationReportLoggingListener - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   AuditEventsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.auditevents.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   AutoConfiguration matched:
      - @ConditionalOnProperty (helloworld=true) matched (OnPropertyCondition)

   BeansEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.beans.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration#beansEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.beans.BeansEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CacheMeterBinderProvidersConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.MeterBinder' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.RedisCacheMeterBinderProviderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.cache.RedisCache' (OnClassCondition)

   CacheMetricsAutoConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.cache.CacheManager; SearchStrategy: all) found bean 'cacheManager' (OnBeanCondition)

   CacheMetricsRegistrarConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'simpleMeterRegistry', 'redisCacheMeterBinderProvider' (OnBeanCondition)

   CachesEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint no property management.endpoint.caches.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   CachesEndpointAutoConfiguration#cachesEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CachesEndpointAutoConfiguration#cachesEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) found bean 'cachesEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CompositeMeterRegistryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.composite.CompositeMeterRegistry' (OnClassCondition)

   ConditionsReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.conditions.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ConditionsReportEndpointAutoConfiguration#conditionsReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.configprops.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) found bean 'configurationPropertiesReportEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration#dbHealthContributor matched:
      - @ConditionalOnMissingBean (names: dbHealthIndicator,dbHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'dynamicDataSource', 'simpleMeterRegistry', 'first', 'second' (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration.HikariDataSourceMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DiskSpaceHealthContributorAutoConfiguration matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   DiskSpaceHealthContributorAutoConfiguration#diskSpaceHealthIndicator matched:
      - @ConditionalOnMissingBean (names: diskSpaceHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   DruidDataSourceAutoConfigure matched:
      - @ConditionalOnClass found required class 'com.alibaba.druid.pool.DruidDataSource' (OnClassCondition)

   DruidStatViewServletConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.datasource.druid.stat-view-servlet.enabled=true) matched (OnPropertyCondition)

   DruidWebStatFilterConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.datasource.druid.web-stat-filter.enabled=true) matched (OnPropertyCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   EndpointAutoConfiguration#endpointCachingOperationInvokerAdvisor matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EndpointAutoConfiguration#endpointOperationParameterMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.env.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) found bean 'environmentEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HealthContributorAutoConfiguration#pingHealthContributor matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   HealthEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint found property management.endpoint.health.enabled with value true; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HealthEndpointConfiguration#healthContributorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpointGroups matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointGroups; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthHttpCodeStatusMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HttpCodeStatusMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthStatusAggregator matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.StatusAggregator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration#healthEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HeapDumpWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.heapdump.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HeapDumpWebEndpointAutoConfiguration#heapDumpWebEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.HeapDumpWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpClientMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (management.trace.http.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.trace.http.HttpTraceRepository; SearchStrategy: all) found bean 'buildHttpTraceRepository' (OnBeanCondition)

   HttpTraceAutoConfiguration#httpExchangeTracer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.trace.http.HttpExchangeTracer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceAutoConfiguration.ServletTraceFilterConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   HttpTraceAutoConfiguration.ServletTraceFilterConfiguration#httpTraceFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.httptrace.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HttpTraceEndpointAutoConfiguration#httpTraceEndpoint matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.trace.http.HttpTraceRepository; SearchStrategy: all) found bean 'buildHttpTraceRepository'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.trace.http.HttpTraceEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   InfoContributorAutoConfiguration#envInfoContributor matched:
      - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.info.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   InfoEndpointAutoConfiguration#infoEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.info.InfoEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxEndpointAutoConfiguration#endpointObjectNameFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.EndpointObjectNameFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxAnnotationEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.JmxEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxMBeanExporter matched:
      - @ConditionalOnSingleCandidate (types: javax.management.MBeanServer; SearchStrategy: all) found a primary bean from beans 'mbeanServer' (OnBeanCondition)

   JvmMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   JvmMetricsAutoConfiguration#classLoaderMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmGcMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmGcMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmMemoryMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmThreadMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAnnotationDrivenConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.kafka.annotation.EnableKafka' (OnClassCondition)

   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactoryConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   KafkaAutoConfiguration#kafkaAdmin matched:
      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.KafkaAdmin; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAutoConfiguration#kafkaProducerListener matched:
      - @ConditionalOnMissingBean (types: org.springframework.kafka.support.ProducerListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.kafka.KafkaClientMetrics', 'org.springframework.kafka.core.ProducerFactory' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   KafkaMetricsAutoConfiguration.KafkaStreamsMetricsConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.kafka.KafkaStreamsMetrics', 'org.springframework.kafka.config.StreamsBuilderFactoryBean' (OnClassCondition)

   LettuceConnectionConfiguration matched:
      - @ConditionalOnClass found required class 'io.lettuce.core.RedisClient' (OnClassCondition)
      - @ConditionalOnProperty (spring.redis.client-type=lettuce) matched (OnPropertyCondition)

   LettuceConnectionConfiguration#lettuceClientResources matched:
      - @ConditionalOnMissingBean (types: io.lettuce.core.resource.ClientResources; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration#redisConnectionFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LogFileWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.logfile.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   LogFileWebEndpointAutoConfiguration#logFileWebEndpoint matched:
      - Log File found logging.file.path var/log (LogFileWebEndpointAutoConfiguration.LogFileCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LogFileWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LogbackMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'ch.qos.logback.classic.LoggerContext', 'org.slf4j.LoggerFactory' (OnClassCondition)
      - LogbackLoggingCondition ILoggerFactory is a Logback LoggerContext (LogbackMetricsAutoConfiguration.LogbackLoggingCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   LogbackMetricsAutoConfiguration#logbackMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.logging.LogbackMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoggersEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.loggers.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   LoggersEndpointAutoConfiguration#loggersEndpoint matched:
      - Logging System enabled (LoggersEndpointAutoConfiguration.OnEnabledLoggingSystemCondition)
      - @ConditionalOnBean (types: org.springframework.boot.logging.LoggingSystem; SearchStrategy: all) found bean 'springBootLoggingSystem'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LoggersEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ManagementContextAutoConfiguration.SameManagementContextConfiguration matched:
      - Management Port actual port type (SAME) matched required type (OnManagementPortCondition)

   MappingsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.mappings.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration.SpringMvcConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   MetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)

   MetricsAutoConfiguration#micrometerClock matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MetricsEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint no property management.endpoint.metrics.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   MetricsEndpointAutoConfiguration#metricsEndpoint matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.MetricsEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.mongodb.client.MongoClient' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration#mongo matched:
      - @ConditionalOnMissingBean (types: com.mongodb.client.MongoClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration.MongoClientSettingsConfiguration matched:
      - @ConditionalOnMissingBean (types: com.mongodb.MongoClientSettings; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDataAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'com.mongodb.client.MongoClient', 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)

   MongoDataConfiguration#mongoCustomConversions matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.convert.MongoCustomConversions; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDataConfiguration#mongoMappingContext matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.mapping.MongoMappingContext; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryConfiguration matched:
      - @ConditionalOnSingleCandidate (types: com.mongodb.client.MongoClient; SearchStrategy: all) found a primary bean from beans 'mongo'; @ConditionalOnMissingBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) found bean 'mongoDatabaseFactory' (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#gridFsTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.gridfs.GridFsOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#mappingMongoConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.convert.MongoConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#mongoTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.MongoOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: org.springframework.data.mongodb.core.MongoTemplate; SearchStrategy: all) found bean 'mongoTemplate' (OnBeanCondition)

   MongoHealthContributorAutoConfiguration#mongoHealthContributor matched:
      - @ConditionalOnMissingBean (names: mongoHealthIndicator,mongoHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.mongodb.MongoClientSettings' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoCommandMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener' (OnClassCondition)
      - @ConditionalOnProperty (management.metrics.mongo.command.enabled=true) matched (OnPropertyCondition)

   MongoMetricsAutoConfiguration.MongoCommandMetricsConfiguration#mongoCommandTagsProvider matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoCommandTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoCommandMetricsConfiguration#mongoMetricsCommandListener matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoConnectionPoolMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener' (OnClassCondition)
      - @ConditionalOnProperty (management.metrics.mongo.connectionpool.enabled=true) matched (OnPropertyCondition)

   MongoMetricsAutoConfiguration.MongoConnectionPoolMetricsConfiguration#mongoConnectionPoolTagsProvider matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoConnectionPoolTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoConnectionPoolMetricsConfiguration#mongoMetricsConnectionPoolListener matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'com.mongodb.client.MongoClient', 'org.springframework.data.mongodb.repository.MongoRepository' (OnClassCondition)
      - @ConditionalOnRepositoryType configured type of 'AUTO' matched required type (OnRepositoryTypeCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean,org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisLanguageDriverAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.apache.ibatis.scripting.LanguageDriver' (OnClassCondition)

   NettyAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ReactiveHealthEndpointConfiguration matched:
      - @ConditionalOnClass found required class 'reactor.core.publisher.Flux' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)

   ReactiveHealthEndpointConfiguration#reactiveHealthContributorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisAutoConfiguration#stringRedisTemplate matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a primary bean from beans 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.core.StringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisCacheConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)
      - Cache org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration automatic cache type (CacheCondition)

   RedisHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory' (OnBeanCondition)

   RedisReactiveAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'org.springframework.data.redis.core.ReactiveRedisTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisReactiveAutoConfiguration#reactiveRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveAutoConfiguration#reactiveStringRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveStringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'reactor.core.publisher.Flux' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory' (OnBeanCondition)

   RedisReactiveHealthContributorAutoConfiguration#redisHealthContributor matched:
      - @ConditionalOnMissingBean (names: redisHealthIndicator,redisHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.redis.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.repository.Repository' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#metricsRepositoryMethodInvocationListener matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#repositoryTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)

   RestTemplateMetricsConfiguration#restTemplateExchangeTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.web.client.RestTemplateExchangeTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ScheduledTasksEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.scheduledtasks.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ScheduledTasksEndpointAutoConfiguration#scheduledTasksEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletEndpointManagementContextConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   ServletEndpointManagementContextConfiguration.WebMvcServletEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)

   ServletManagementContextAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.Servlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ShutdownEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint found property management.endpoint.shutdown.enabled with value true; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ShutdownEndpointAutoConfiguration#shutdownEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.ShutdownEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SimpleMetricsExportAutoConfiguration matched:
      - @ConditionalOnEnabledMetricsExport management.metrics.export.defaults.enabled is considered true (OnMetricsExportEnabledCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) found bean 'micrometerClock'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleMetricsExportAutoConfiguration#simpleConfig matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.simple.SimpleConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - matched (SpringBootAdminClientEnabledCondition)

   SpringBootAdminClientAutoConfiguration#registrationListener matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.RegistrationApplicationListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration#registrator matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.ApplicationRegistrator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration#startupDateMetadataContributor matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.metadata.StartupDateMetadataContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration.BlockingRegistrationClientConfig matched:
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration.BlockingRegistrationClientConfig#registrationClient matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.BlockingRegistrationClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration.ServletConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringBootAdminClientAutoConfiguration.ServletConfiguration#applicationFactory matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.ApplicationFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   Swagger2DocumentationConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   SystemMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   SystemMetricsAutoConfiguration#fileDescriptorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.FileDescriptorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#processorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.ProcessorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#uptimeMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.UptimeMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThreadDumpEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.threaddump.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ThreadDumpEndpointAutoConfiguration#dumpEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.ThreadDumpEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.thymeleaf.templatemode.TemplateMode', 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   ThymeleafAutoConfiguration.DefaultTemplateResolverConfiguration matched:
      - @ConditionalOnMissingBean (names: defaultTemplateResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafDefaultConfiguration#templateEngine matched:
      - @ConditionalOnMissingBean (types: org.thymeleaf.spring5.ISpringTemplateEngine; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafJava8TimeDialect matched:
      - @ConditionalOnClass found required class 'org.thymeleaf.extras.java8time.dialect.Java8TimeDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafJava8TimeDialect#java8TimeDialect matched:
      - @ConditionalOnMissingBean (types: org.thymeleaf.extras.java8time.dialect.Java8TimeDialect; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.thymeleaf.enabled) matched (OnPropertyCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration.ThymeleafViewResolverConfiguration#thymeleafViewResolver matched:
      - @ConditionalOnMissingBean (names: thymeleafViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TomcatMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.tomcat.TomcatMetrics', 'org.apache.catalina.Manager' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   TomcatMetricsAutoConfiguration#tomcatMetricsBinder matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.tomcat.TomcatMetrics,org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'firstTransactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a primary bean from beans 'firstTransactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration#controllerEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#endpointMediaTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#pathMappedEndpoints matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#webEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration#servletEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) found beans 'webEndpointDiscoverer', 'dispatcherServlet' (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#controllerEndpointHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#webEndpointServletHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   WebMvcMetricsAutoConfiguration#webMvcTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AppOpticsMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.appoptics.AppOpticsMeterRegistry' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AtlasMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.atlas.AtlasMeterRegistry' (OnClassCondition)

   AuditAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnProperty (management.auditevents.enabled) matched (OnPropertyCondition)

   AuditEventsEndpointAutoConfiguration#auditEventsEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)

   AvailabilityHealthContributorAutoConfiguration#livenessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.livenessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityHealthContributorAutoConfiguration#readinessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.readinessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityProbesAutoConfiguration:
      Did not match:
         - Probes availability not running on a supported cloud platform (AvailabilityProbesAutoConfiguration.ProbesCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: cacheResolver types: org.springframework.cache.CacheManager; SearchStrategy: all) found beans of type 'org.springframework.cache.CacheManager' cacheManager (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CacheMeterBinderProvidersConfiguration.CaffeineCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Cache' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.EhCache2CacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Ehcache' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.HazelcastCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'com.hazelcast.spring.cache.HazelcastCache', 'com.hazelcast.core.Hazelcast' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.JCacheCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.CacheManager' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (management.cloudfoundry.enabled) matched (OnPropertyCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CompositeMeterRegistryConfiguration:
      Did not match:
         - NoneNestedConditions 1 matched 1 did not; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.SingleInjectableMeterRegistry @ConditionalOnSingleCandidate (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found a primary bean from beans 'simpleMeterRegistry'; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.NoMeterRegistryCondition @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition)

   ConnectionFactoryHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   ConnectionPoolMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.pool.ConnectionPool' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceInitializationConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) did not find a primary bean from beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)

   DataSourcePoolMetricsAutoConfiguration.DataSourcePoolMetadataMetricsConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider (OnBeanCondition)

   DatadogMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.datadog.DatadogMeterRegistry' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   DruidDataSourceAutoConfigure#dataSource:
      Did not match:
         - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) found beans of type 'javax.sql.DataSource' first, second, dynamicDataSource (OnBeanCondition)

   DruidFilterConfiguration#commonsLogFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.commons-log.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#configFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.config.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#encodingConvertFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.encoding.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#log4j2Filter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.log4j2.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#log4jFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.log4j.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#slf4jLogFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.slf4j.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#statFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.stat.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#wallConfig:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.wall.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#wallFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.wall.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidSpringAopConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.aop-patterns) did not find property 'spring.datasource.druid.aop-patterns' (OnPropertyCondition)

   DynatraceMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.dynatrace.DynatraceMeterRegistry' (OnClassCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.elastic.ElasticMeterRegistry' (OnClassCondition)

   ElasticSearchReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ElasticSearchRestHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestHighLevelClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestHighLevelClient' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'de.flapdoodle.embed.mongo.MongodStarter' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FlywayEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GangliaMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.ganglia.GangliaMeterRegistry' (OnClassCondition)

   GraphiteMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.graphite.GraphiteMeterRegistry' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.WebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HealthEndpointReactiveWebExtensionConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManager' (OnClassCondition)

   HibernateMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManagerFactory' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HttpTraceAutoConfiguration.ReactiveTraceFilterConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   HumioMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.humio.HumioMeterRegistry' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxDbHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.influx.InfluxMeterRegistry' (OnClassCondition)

   InfoContributorAutoConfiguration#buildInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.BuildProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#gitInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.GitProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   IntegrationGraphEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.graph.IntegrationGraphServer' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JdbcTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) did not find a primary bean from beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)

   JedisConnectionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.apache.commons.pool2.impl.GenericObjectPool', 'redis.clients.jedis.Jedis' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JerseySameManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JerseyServerMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.jersey2.server.MetricsApplicationEventListener' (OnClassCondition)

   JerseyWebEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JettyMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.server.Server' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmsHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   JmxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.jmx.JmxMeterRegistry' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JolokiaEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jolokia.http.AgentServlet' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.Transaction' (OnClassCondition)

   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactory:
      Did not match:
         - @ConditionalOnMissingBean (names: kafkaListenerContainerFactory; SearchStrategy: all) found beans named kafkaListenerContainerFactory (OnBeanCondition)

   KafkaAnnotationDrivenConfiguration.EnableKafkaConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: org.springframework.kafka.config.internalKafkaListenerAnnotationProcessor; SearchStrategy: all) found beans named org.springframework.kafka.config.internalKafkaListenerAnnotationProcessor (OnBeanCondition)

   KafkaAutoConfiguration#kafkaConsumerFactory:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.kafka.core.ConsumerFactory; SearchStrategy: all) found beans of type 'org.springframework.kafka.core.ConsumerFactory' consumerFactory (OnBeanCondition)

   KafkaAutoConfiguration#kafkaJaasInitializer:
      Did not match:
         - @ConditionalOnProperty (spring.kafka.jaas.enabled) did not find property 'spring.kafka.jaas.enabled' (OnPropertyCondition)

   KafkaAutoConfiguration#kafkaProducerFactory:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.kafka.core.ProducerFactory; SearchStrategy: all) found beans of type 'org.springframework.kafka.core.ProducerFactory' producerFactory (OnBeanCondition)

   KafkaAutoConfiguration#kafkaTemplate:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.kafka.core.KafkaTemplate; SearchStrategy: all) found beans of type 'org.springframework.kafka.core.KafkaTemplate' kafkaTemplate (OnBeanCondition)

   KafkaAutoConfiguration#kafkaTransactionManager:
      Did not match:
         - @ConditionalOnProperty (spring.kafka.producer.transaction-id-prefix) did not find property 'spring.kafka.producer.transaction-id-prefix' (OnPropertyCondition)

   KafkaStreamsAnnotationDrivenConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.kafka.streams.StreamsBuilder' (OnClassCondition)

   KairosMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.kairos.KairosMeterRegistry' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.LdapOperations' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   LiquibaseEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.integration.spring.SpringLiquibase' (OnClassCondition)

   Log4J2MetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.logging.log4j.core.LoggerContext' (OnClassCondition)

   MailHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.mail.javamail.JavaMailSenderImpl; SearchStrategy: all) did not find any beans of type org.springframework.mail.javamail.JavaMailSenderImpl (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnClassCondition)
         - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.JndiNameProperty @ConditionalOnProperty (spring.mail.jndi-name) did not find property 'jndi-name'; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.HostProperty @ConditionalOnProperty (spring.mail.host) did not find property 'host' (MailSenderAutoConfiguration.MailSenderCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.mail.internet.MimeMessage', 'javax.activation.MimeType', 'org.springframework.mail.MailSender' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   ManagementContextAutoConfiguration.DifferentManagementContextConfiguration:
      Did not match:
         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)

   ManagementWebSecurityAutoConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter,org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) did not find any beans; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass did not find required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ReactiveWebConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.data.mongodb.core.ReactiveMongoTemplate; SearchStrategy: all) did not find any beans of type org.springframework.data.mongodb.core.ReactiveMongoTemplate (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'org.springframework.data.mongodb.core.ReactiveMongoTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)
         - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   MybatisAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) did not find a primary bean from beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.FreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver', 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriverConfig' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.LegacyFreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.LegacyVelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.velocity.Driver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.ThymeleafConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.thymeleaf.ThymeleafLanguageDriver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.VelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.velocity.VelocityLanguageDriver', 'org.mybatis.scripting.velocity.VelocityLanguageDriverConfig' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NewRelicMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.newrelic.NewRelicMeterRegistry' (OnClassCondition)

   NoOpMeterRegistryConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (OnBeanCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PrometheusMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.prometheus.PrometheusMeterRegistry' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   QuartzEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   RabbitHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.amqp.rabbit.core.RabbitTemplate' (OnClassCondition)

   RabbitMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.ConnectionFactory' (OnClassCondition)

   ReactiveCloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveManagementContextAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveManagementWebSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration#redisTemplate:
      Did not match:
         - @ConditionalOnMissingBean (names: redisTemplate; SearchStrategy: all) found beans named redisTemplate (OnBeanCondition)

   RedisHealthContributorAutoConfiguration#redisHealthContributor:
      Did not match:
         - @ConditionalOnMissingBean (names: redisHealthIndicator,redisHealthContributor; SearchStrategy: all) found beans named redisHealthContributor (OnBeanCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SecurityRequestMatchersManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.web.util.matcher.RequestMatcher' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletEndpointManagementContextConfiguration.JerseyServletEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   ServletManagementContextAutoConfiguration.ApplicationContextFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (management.server.add-application-context-header=true) did not find property 'add-application-context-header' (OnPropertyCondition)

   ServletWebServerFactoryAutoConfiguration#forwardedHeaderFilter:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SessionsEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.FindByIndexNameSessionRepository' (OnClassCondition)

   SignalFxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.signalfx.SignalFxMeterRegistry' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SolrHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.SolrClient' (OnClassCondition)

   SpringBootAdminClientAutoConfiguration.ReactiveConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   SpringBootAdminClientAutoConfiguration.ReactiveRegistrationClientConfig:
      Did not match:
         - @ConditionalOnBean did not find required type 'org.springframework.web.reactive.function.client.WebClient$Builder' (OnBeanCondition)
         - @ConditionalOnBean (types: org.springframework.web.reactive.function.client.WebClient$Builder; SearchStrategy: all) did not find any beans of type org.springframework.web.reactive.function.client.WebClient$Builder (OnBeanCondition)

   SpringBootAdminClientCloudFoundryAutoConfiguration:
      Did not match:
         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)
      Matched:
         - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
         - matched (SpringBootAdminClientEnabledCondition)

   StackdriverMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.stackdriver.StackdriverMeterRegistry' (OnClassCondition)

   StartupEndpointAutoConfiguration:
      Did not match:
         - ApplicationStartup configured applicationStartup is of type class org.springframework.core.metrics.DefaultApplicationStartup, expected BufferingApplicationStartup. (StartupEndpointAutoConfiguration.ApplicationStartupCondition)

   StatsdMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.statsd.StatsdMeterRegistry' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor:
      Did not match:
         - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) found beans of type 'java.util.concurrent.Executor' asyncThreadPoolTaskExecutor (OnBeanCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration.DataAttributeDialectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.mxab.thymeleaf.extras.dataattribute.dialect.DataAttributeDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafReactiveConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ThymeleafAutoConfiguration.ThymeleafSecurityDialectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.extras.springsecurity5.dialect.SpringSecurityDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebFluxConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ThymeleafAutoConfiguration.ThymeleafWebLayoutConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'nz.net.ultraq.thymeleaf.LayoutDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration#resourceUrlEncodingFilter:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)

   WavefrontMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebClientMetricsConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebFluxEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   WebFluxMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport' org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)
         - Ancestor org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.client.core.WebServiceTemplate' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

    org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration



2022-08-30 08:50:50.276 [main] [DEBUG] o.s.b.c.p.s.ConfigurationPropertySourcesPropertyResolver$DefaultResolver - Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
2022-08-30 08:50:50.277 [main] [INFO ] com.test.springboot.SpringbootApplication - Started SpringbootApplication in 5.225 seconds (JVM running for 6.029)
2022-08-30 08:50:50.281 [main] [DEBUG] o.s.boot.availability.ApplicationAvailabilityBean - Application availability state LivenessState changed to CORRECT
2022-08-30 08:50:50.282 [main] [DEBUG] o.s.boot.availability.ApplicationAvailabilityBean - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2022-08-30 08:50:50.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:50:50.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:50:50.312 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:50:50.320 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Cluster ID: N_qWYp0DR-CyFe0Vu-kqrw
2022-08-30 08:50:50.322 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 08:50:50.324 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 08:50:50.358 [RMI TCP Connection(3)-192.168.9.100] [INFO ] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-08-30 08:50:50.358 [RMI TCP Connection(3)-192.168.9.100] [INFO ] org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-08-30 08:50:50.358 [RMI TCP Connection(3)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2022-08-30 08:50:50.359 [RMI TCP Connection(3)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2022-08-30 08:50:50.359 [RMI TCP Connection(3)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2022-08-30 08:50:50.360 [RMI TCP Connection(3)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@696d379a
2022-08-30 08:50:50.360 [RMI TCP Connection(3)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@4799c6d0
2022-08-30 08:50:50.360 [RMI TCP Connection(3)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2022-08-30 08:50:50.361 [RMI TCP Connection(3)-192.168.9.100] [INFO ] org.springframework.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2022-08-30 08:50:50.389 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 08:50:50.414 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully joined group with generation Generation{generationId=84, memberId='consumer-test-consumer-1-35dae723-337d-4551-83f1-2c03516d6067', protocol='range'}
2022-08-30 08:50:50.416 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Finished assignment for group at generation 84: {consumer-test-consumer-1-35dae723-337d-4551-83f1-2c03516d6067=Assignment(partitions=[test-0])}
2022-08-30 08:50:50.443 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully synced group in generation Generation{generationId=84, memberId='consumer-test-consumer-1-35dae723-337d-4551-83f1-2c03516d6067', protocol='range'}
2022-08-30 08:50:50.444 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Notifying assignor about the new Assignment(partitions=[test-0])
2022-08-30 08:50:50.447 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Adding newly assigned partitions: test-0
2022-08-30 08:50:50.500 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Setting offset for partition test-0 to the committed offset FetchPosition{offset=73, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[110.40.220.207:9092 (id: 1 rack: null)], epoch=0}}
2022-08-30 08:50:50.501 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions assigned: [test-0]
2022-08-30 08:50:50.614 [RMI TCP Connection(5)-192.168.9.100] [INFO ] com.alibaba.druid.pool.DruidDataSource - {dataSource-1,mybatis} inited
2022-08-30 08:50:51.039 [RMI TCP Connection(5)-192.168.9.100] [INFO ] com.alibaba.druid.pool.DruidDataSource - {dataSource-2,springbootdb} inited
2022-08-30 08:50:51.408 [RMI TCP Connection(5)-192.168.9.100] [INFO ] org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:66}] to localhost:27017
2022-08-30 08:50:52.375 [registrationTask1] [WARN ] d.c.b.a.client.registration.ApplicationRegistrator - Failed to register application as Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/) at spring-boot-admin ([http://localhost:9002/instances]): I/O error on POST request for "http://localhost:9002/instances": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect. Further attempts are logged on DEBUG level
2022-08-30 08:51:00.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:51:00.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:51:00.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:51:10.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:51:10.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:51:10.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:51:15.928 [http-nio-8081-exec-2] [DEBUG] org.springframework.web.servlet.DispatcherServlet - PUT "/mongouser/630c85aa4afab752d5a4792e", parameters={}
2022-08-30 08:51:15.933 [http-nio-8081-exec-2] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#updateUser(String, MongoUser)
2022-08-30 08:51:16.019 [http-nio-8081-exec-2] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 08:51:16.019 [http-nio-8081-exec-2] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Nothing to write: null body
2022-08-30 08:51:16.020 [http-nio-8081-exec-2] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 08:51:20.290 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:51:20.291 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:51:20.291 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:51:30.289 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:51:30.290 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:51:30.290 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:51:33.067 [http-nio-8081-exec-3] [DEBUG] org.springframework.web.servlet.DispatcherServlet - PUT "/mongouser/630c85aa4afab752d5a4792e", parameters={multipart}
2022-08-30 08:51:33.085 [http-nio-8081-exec-3] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#updateUser(String, MongoUser)
2022-08-30 08:51:33.090 [http-nio-8081-exec-3] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 08:51:33.091 [http-nio-8081-exec-3] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Nothing to write: null body
2022-08-30 08:51:33.091 [http-nio-8081-exec-3] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 08:51:40.286 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:51:40.286 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:51:40.286 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:51:50.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:51:50.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:51:50.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:52:00.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:52:00.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:52:00.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:52:10.286 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:52:10.286 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:52:10.286 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:52:20.285 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:52:20.286 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:52:20.286 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:52:30.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:52:30.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:52:30.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:52:40.287 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:52:40.287 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:52:40.287 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:52:50.284 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:52:50.284 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:52:50.284 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:53:00.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:53:00.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:53:00.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:53:10.285 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:53:10.286 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:53:10.286 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:53:20.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:53:20.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:53:20.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:53:30.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:53:30.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:53:30.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:53:31.607 [http-nio-8081-exec-6] [DEBUG] org.springframework.web.servlet.DispatcherServlet - PUT "/mongouser/630c85aa4afab752d5a4792e", parameters={}
2022-08-30 08:53:31.607 [http-nio-8081-exec-6] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#updateUser(String, MongoUser)
2022-08-30 08:53:31.613 [http-nio-8081-exec-6] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 08:53:31.613 [http-nio-8081-exec-6] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Nothing to write: null body
2022-08-30 08:53:31.613 [http-nio-8081-exec-6] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 08:53:40.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:53:40.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:53:40.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:53:50.290 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:53:50.291 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:53:50.291 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:54:00.289 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:54:00.290 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:54:00.290 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:54:10.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:54:10.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:54:10.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:54:20.291 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:54:20.292 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:54:20.292 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:54:30.284 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:54:30.285 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:54:30.285 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:54:40.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:54:40.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:54:40.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:54:50.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:54:50.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:54:50.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:55:00.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:55:00.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:55:00.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:55:06.535 [http-nio-8081-exec-9] [DEBUG] org.springframework.web.servlet.DispatcherServlet - PUT "/mongouser/630c85aa4afab752d5a4792e", parameters={}
2022-08-30 08:55:06.536 [http-nio-8081-exec-9] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#updateUser(String, MongoUser)
2022-08-30 08:55:06.539 [http-nio-8081-exec-9] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 08:55:06.540 [http-nio-8081-exec-9] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Nothing to write: null body
2022-08-30 08:55:06.540 [http-nio-8081-exec-9] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 08:55:10.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:55:10.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:55:10.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:55:20.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:55:20.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:55:20.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:55:30.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:55:30.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:55:30.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:55:40.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:55:40.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:55:40.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:55:50.288 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:55:50.288 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:55:50.289 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:56:00.284 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:56:00.284 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:56:00.284 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:56:10.285 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:56:10.286 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:56:10.286 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:56:20.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:56:20.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:56:20.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:56:30.290 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:56:30.290 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:56:30.291 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:56:40.288 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:56:40.289 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:56:40.289 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:56:50.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:56:50.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:56:50.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:56:57.892 [main] [INFO ] com.test.springboot.SpringbootApplication - Starting SpringbootApplication using Java 1.8.0_291 on gaofengkai with PID 21240 (D:\BackEnd\workspace\springboot\target\classes started by gaofengkai in D:\BackEnd\workspace\springboot)
2022-08-30 08:56:57.895 [main] [INFO ] com.test.springboot.SpringbootApplication - The following profiles are active: prod
2022-08-30 08:56:57.895 [main] [DEBUG] org.springframework.boot.SpringApplication - Loading source class com.test.springboot.SpringbootApplication
2022-08-30 08:56:57.922 [main] [DEBUG] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66f57048
2022-08-30 08:56:58.756 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-08-30 08:56:58.757 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-08-30 08:56:58.762 [main] [DEBUG] o.s.boot.autoconfigure.AutoConfigurationPackages - @EnableAutoConfiguration was declared on a class in the package 'com.test.springboot'. Automatic @Repository and @Entity scanning is enabled.
2022-08-30 08:56:58.804 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 45 ms. Found 1 MongoDB repository interfaces.
2022-08-30 08:56:58.811 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-08-30 08:56:58.812 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-08-30 08:56:58.824 [main] [INFO ] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.test.springboot.mapper.mongodb.MongoUserDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-08-30 08:56:58.825 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2022-08-30 08:56:58.904 [main] [WARN ] org.mybatis.spring.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'mongoUserDao' and 'com.test.springboot.mapper.mongodb.MongoUserDao' mapperInterface. Bean already defined with the same name!
2022-08-30 08:56:59.408 [main] [DEBUG] o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: C:\Users\Administrator\.m2\repository\org\springframework\boot\spring-boot\2.5.7\spring-boot-2.5.7.jar
2022-08-30 08:56:59.408 [main] [DEBUG] o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: C:\Users\Administrator\.m2\repository\org\springframework\boot\spring-boot\2.5.7\spring-boot-2.5.7.jar
2022-08-30 08:56:59.409 [main] [DEBUG] o.s.b.w.e.tomcat.TomcatServletWebServerFactory - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2022-08-30 08:56:59.422 [main] [INFO ] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2022-08-30 08:56:59.428 [main] [INFO ] org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2022-08-30 08:56:59.429 [main] [INFO ] org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-08-30 08:56:59.429 [main] [INFO ] org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.55]
2022-08-30 08:56:59.506 [main] [INFO ] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-08-30 08:56:59.507 [main] [DEBUG] o.s.b.w.s.c.ServletWebServerApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2022-08-30 08:56:59.507 [main] [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1585 ms
2022-08-30 08:56:59.652 [main] [DEBUG] o.s.b.web.servlet.ServletContextInitializerBeans - Mapping filters: filterRegistrationBean urls=[/*] order=-2147483647, filterRegistrationBean urls=[/*] order=2147483647, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, httpTraceFilter urls=[/*] order=2147483637
2022-08-30 08:56:59.653 [main] [DEBUG] o.s.b.web.servlet.ServletContextInitializerBeans - Mapping servlets: dispatcherServlet urls=[/], statViewServlet urls=[/druid/*]
2022-08-30 08:56:59.671 [main] [DEBUG] o.s.b.a.metrics.web.servlet.WebMvcMetricsFilter - Filter 'webMvcMetricsFilter' configured for use
2022-08-30 08:56:59.672 [main] [DEBUG] o.s.b.w.s.filter.OrderedCharacterEncodingFilter - Filter 'characterEncodingFilter' configured for use
2022-08-30 08:56:59.672 [main] [DEBUG] o.s.boot.actuate.web.trace.servlet.HttpTraceFilter - Filter 'httpTraceFilter' configured for use
2022-08-30 08:57:00.164 [main] [INFO ] org.mongodb.driver.cluster - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2022-08-30 08:57:00.203 [cluster-ClusterId{value='630d605cb356916749f4a88c', description='null'}-localhost:27017] [INFO ] org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:69}] to localhost:27017
2022-08-30 08:57:00.203 [cluster-rtt-ClusterId{value='630d605cb356916749f4a88c', description='null'}-localhost:27017] [INFO ] org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:70}] to localhost:27017
2022-08-30 08:57:00.203 [cluster-ClusterId{value='630d605cb356916749f4a88c', description='null'}-localhost:27017] [INFO ] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=11113400}
2022-08-30 08:57:00.308 [main] [DEBUG] o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2022-08-30 08:57:00.708 [main] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2022-08-30 08:57:00.845 [main] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 43 mappings in 'requestMappingHandlerMapping'
2022-08-30 08:57:01.175 [main] [INFO ] o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 16 endpoint(s) beneath base path '/monitor'
2022-08-30 08:57:01.257 [main] [INFO ] s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-08-30 08:57:01.382 [main] [DEBUG] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2022-08-30 08:57:01.937 [main] [INFO ] org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [110.40.220.207:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-test-consumer-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = test-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2022-08-30 08:57:01.985 [main] [INFO ] org.apache.kafka.common.utils.AppInfoParser - Kafka version: 2.7.2
2022-08-30 08:57:01.985 [main] [INFO ] org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: 37a1cc36bf4d76f3
2022-08-30 08:57:01.985 [main] [INFO ] org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1661821021983
2022-08-30 08:57:01.987 [main] [INFO ] org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Subscribed to topic(s): test
2022-08-30 08:57:01.992 [main] [INFO ] org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2022-08-30 08:57:02.001 [main] [INFO ] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2022-08-30 08:57:02.002 [main] [INFO ] s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2022-08-30 08:57:02.014 [main] [INFO ] s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 6 custom documentation plugin(s)
2022-08-30 08:57:02.055 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 08:57:02.171 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: testUsingGET_1
2022-08-30 08:57:02.173 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: test2UsingGET_1
2022-08-30 08:57:02.182 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 08:57:02.184 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: testAopUsingGET_1
2022-08-30 08:57:02.188 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 08:57:02.190 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getCityUsingPOST_1
2022-08-30 08:57:02.191 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getFirstStudentUsingPOST_1
2022-08-30 08:57:02.194 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 08:57:02.196 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonUsingPOST_1
2022-08-30 08:57:02.198 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingGET_1
2022-08-30 08:57:02.198 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingHEAD_1
2022-08-30 08:57:02.199 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingPOST_1
2022-08-30 08:57:02.199 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingPUT_1
2022-08-30 08:57:02.199 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingPATCH_1
2022-08-30 08:57:02.200 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingDELETE_1
2022-08-30 08:57:02.200 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingOPTIONS_1
2022-08-30 08:57:02.201 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingTRACE_1
2022-08-30 08:57:02.202 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingGET_1
2022-08-30 08:57:02.202 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingHEAD_1
2022-08-30 08:57:02.203 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingPOST_1
2022-08-30 08:57:02.203 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingPUT_1
2022-08-30 08:57:02.203 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingPATCH_1
2022-08-30 08:57:02.204 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingDELETE_1
2022-08-30 08:57:02.204 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingOPTIONS_1
2022-08-30 08:57:02.204 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingTRACE_1
2022-08-30 08:57:02.205 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingGET_1
2022-08-30 08:57:02.205 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingHEAD_1
2022-08-30 08:57:02.205 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingPOST_1
2022-08-30 08:57:02.206 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingPUT_1
2022-08-30 08:57:02.206 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingPATCH_1
2022-08-30 08:57:02.206 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingDELETE_1
2022-08-30 08:57:02.207 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingOPTIONS_1
2022-08-30 08:57:02.207 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingTRACE_1
2022-08-30 08:57:02.208 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: serializationUsingPOST_1
2022-08-30 08:57:02.209 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingGET_1
2022-08-30 08:57:02.210 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingHEAD_1
2022-08-30 08:57:02.210 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingPOST_1
2022-08-30 08:57:02.211 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingPUT_1
2022-08-30 08:57:02.211 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingPATCH_1
2022-08-30 08:57:02.212 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingDELETE_1
2022-08-30 08:57:02.212 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingOPTIONS_1
2022-08-30 08:57:02.212 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingTRACE_1
2022-08-30 08:57:02.215 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 08:57:02.218 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: addRedisUsingPOST_1
2022-08-30 08:57:02.219 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: deleteRedisUsingPOST_1
2022-08-30 08:57:02.219 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getRedisUsingPOST_1
2022-08-30 08:57:02.220 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateRedisUsingPOST_1
2022-08-30 08:57:02.223 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 08:57:02.225 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: addJdbcStudentUsingPOST_1
2022-08-30 08:57:02.226 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: queryStudentByIdUsingGET_1
2022-08-30 08:57:02.227 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: queryStudentById2UsingPOST_1
2022-08-30 08:57:02.228 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: queryStudentById3UsingPOST_1
2022-08-30 08:57:02.243 [main] [DEBUG] o.s.b.a.l.ConditionEvaluationReportLoggingListener - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   AuditEventsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.auditevents.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   AutoConfiguration matched:
      - @ConditionalOnProperty (helloworld=true) matched (OnPropertyCondition)

   BeansEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.beans.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration#beansEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.beans.BeansEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CacheMeterBinderProvidersConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.MeterBinder' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.RedisCacheMeterBinderProviderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.cache.RedisCache' (OnClassCondition)

   CacheMetricsAutoConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.cache.CacheManager; SearchStrategy: all) found bean 'cacheManager' (OnBeanCondition)

   CacheMetricsRegistrarConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'simpleMeterRegistry', 'redisCacheMeterBinderProvider' (OnBeanCondition)

   CachesEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint no property management.endpoint.caches.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   CachesEndpointAutoConfiguration#cachesEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CachesEndpointAutoConfiguration#cachesEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) found bean 'cachesEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CompositeMeterRegistryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.composite.CompositeMeterRegistry' (OnClassCondition)

   ConditionsReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.conditions.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ConditionsReportEndpointAutoConfiguration#conditionsReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.configprops.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) found bean 'configurationPropertiesReportEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration#dbHealthContributor matched:
      - @ConditionalOnMissingBean (names: dbHealthIndicator,dbHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'dynamicDataSource', 'simpleMeterRegistry', 'first', 'second' (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration.HikariDataSourceMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DiskSpaceHealthContributorAutoConfiguration matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   DiskSpaceHealthContributorAutoConfiguration#diskSpaceHealthIndicator matched:
      - @ConditionalOnMissingBean (names: diskSpaceHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   DruidDataSourceAutoConfigure matched:
      - @ConditionalOnClass found required class 'com.alibaba.druid.pool.DruidDataSource' (OnClassCondition)

   DruidStatViewServletConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.datasource.druid.stat-view-servlet.enabled=true) matched (OnPropertyCondition)

   DruidWebStatFilterConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.datasource.druid.web-stat-filter.enabled=true) matched (OnPropertyCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   EndpointAutoConfiguration#endpointCachingOperationInvokerAdvisor matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EndpointAutoConfiguration#endpointOperationParameterMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.env.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) found bean 'environmentEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HealthContributorAutoConfiguration#pingHealthContributor matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   HealthEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint found property management.endpoint.health.enabled with value true; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HealthEndpointConfiguration#healthContributorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpointGroups matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointGroups; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthHttpCodeStatusMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HttpCodeStatusMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthStatusAggregator matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.StatusAggregator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration#healthEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HeapDumpWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.heapdump.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HeapDumpWebEndpointAutoConfiguration#heapDumpWebEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.HeapDumpWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpClientMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (management.trace.http.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.trace.http.HttpTraceRepository; SearchStrategy: all) found bean 'buildHttpTraceRepository' (OnBeanCondition)

   HttpTraceAutoConfiguration#httpExchangeTracer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.trace.http.HttpExchangeTracer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceAutoConfiguration.ServletTraceFilterConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   HttpTraceAutoConfiguration.ServletTraceFilterConfiguration#httpTraceFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.httptrace.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HttpTraceEndpointAutoConfiguration#httpTraceEndpoint matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.trace.http.HttpTraceRepository; SearchStrategy: all) found bean 'buildHttpTraceRepository'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.trace.http.HttpTraceEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   InfoContributorAutoConfiguration#envInfoContributor matched:
      - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.info.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   InfoEndpointAutoConfiguration#infoEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.info.InfoEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxEndpointAutoConfiguration#endpointObjectNameFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.EndpointObjectNameFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxAnnotationEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.JmxEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxMBeanExporter matched:
      - @ConditionalOnSingleCandidate (types: javax.management.MBeanServer; SearchStrategy: all) found a primary bean from beans 'mbeanServer' (OnBeanCondition)

   JvmMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   JvmMetricsAutoConfiguration#classLoaderMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmGcMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmGcMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmMemoryMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmThreadMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAnnotationDrivenConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.kafka.annotation.EnableKafka' (OnClassCondition)

   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactoryConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   KafkaAutoConfiguration#kafkaAdmin matched:
      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.KafkaAdmin; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAutoConfiguration#kafkaProducerListener matched:
      - @ConditionalOnMissingBean (types: org.springframework.kafka.support.ProducerListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.kafka.KafkaClientMetrics', 'org.springframework.kafka.core.ProducerFactory' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   KafkaMetricsAutoConfiguration.KafkaStreamsMetricsConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.kafka.KafkaStreamsMetrics', 'org.springframework.kafka.config.StreamsBuilderFactoryBean' (OnClassCondition)

   LettuceConnectionConfiguration matched:
      - @ConditionalOnClass found required class 'io.lettuce.core.RedisClient' (OnClassCondition)
      - @ConditionalOnProperty (spring.redis.client-type=lettuce) matched (OnPropertyCondition)

   LettuceConnectionConfiguration#lettuceClientResources matched:
      - @ConditionalOnMissingBean (types: io.lettuce.core.resource.ClientResources; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration#redisConnectionFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LogFileWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.logfile.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   LogFileWebEndpointAutoConfiguration#logFileWebEndpoint matched:
      - Log File found logging.file.path var/log (LogFileWebEndpointAutoConfiguration.LogFileCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LogFileWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LogbackMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'ch.qos.logback.classic.LoggerContext', 'org.slf4j.LoggerFactory' (OnClassCondition)
      - LogbackLoggingCondition ILoggerFactory is a Logback LoggerContext (LogbackMetricsAutoConfiguration.LogbackLoggingCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   LogbackMetricsAutoConfiguration#logbackMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.logging.LogbackMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoggersEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.loggers.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   LoggersEndpointAutoConfiguration#loggersEndpoint matched:
      - Logging System enabled (LoggersEndpointAutoConfiguration.OnEnabledLoggingSystemCondition)
      - @ConditionalOnBean (types: org.springframework.boot.logging.LoggingSystem; SearchStrategy: all) found bean 'springBootLoggingSystem'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LoggersEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ManagementContextAutoConfiguration.SameManagementContextConfiguration matched:
      - Management Port actual port type (SAME) matched required type (OnManagementPortCondition)

   MappingsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.mappings.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration.SpringMvcConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   MetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)

   MetricsAutoConfiguration#micrometerClock matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MetricsEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint no property management.endpoint.metrics.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   MetricsEndpointAutoConfiguration#metricsEndpoint matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.MetricsEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.mongodb.client.MongoClient' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration#mongo matched:
      - @ConditionalOnMissingBean (types: com.mongodb.client.MongoClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration.MongoClientSettingsConfiguration matched:
      - @ConditionalOnMissingBean (types: com.mongodb.MongoClientSettings; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDataAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'com.mongodb.client.MongoClient', 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)

   MongoDataConfiguration#mongoCustomConversions matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.convert.MongoCustomConversions; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDataConfiguration#mongoMappingContext matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.mapping.MongoMappingContext; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryConfiguration matched:
      - @ConditionalOnSingleCandidate (types: com.mongodb.client.MongoClient; SearchStrategy: all) found a primary bean from beans 'mongo'; @ConditionalOnMissingBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) found bean 'mongoDatabaseFactory' (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#gridFsTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.gridfs.GridFsOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#mappingMongoConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.convert.MongoConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#mongoTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.MongoOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: org.springframework.data.mongodb.core.MongoTemplate; SearchStrategy: all) found bean 'mongoTemplate' (OnBeanCondition)

   MongoHealthContributorAutoConfiguration#mongoHealthContributor matched:
      - @ConditionalOnMissingBean (names: mongoHealthIndicator,mongoHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.mongodb.MongoClientSettings' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoCommandMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener' (OnClassCondition)
      - @ConditionalOnProperty (management.metrics.mongo.command.enabled=true) matched (OnPropertyCondition)

   MongoMetricsAutoConfiguration.MongoCommandMetricsConfiguration#mongoCommandTagsProvider matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoCommandTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoCommandMetricsConfiguration#mongoMetricsCommandListener matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoConnectionPoolMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener' (OnClassCondition)
      - @ConditionalOnProperty (management.metrics.mongo.connectionpool.enabled=true) matched (OnPropertyCondition)

   MongoMetricsAutoConfiguration.MongoConnectionPoolMetricsConfiguration#mongoConnectionPoolTagsProvider matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoConnectionPoolTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoConnectionPoolMetricsConfiguration#mongoMetricsConnectionPoolListener matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'com.mongodb.client.MongoClient', 'org.springframework.data.mongodb.repository.MongoRepository' (OnClassCondition)
      - @ConditionalOnRepositoryType configured type of 'AUTO' matched required type (OnRepositoryTypeCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean,org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisLanguageDriverAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.apache.ibatis.scripting.LanguageDriver' (OnClassCondition)

   NettyAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ReactiveHealthEndpointConfiguration matched:
      - @ConditionalOnClass found required class 'reactor.core.publisher.Flux' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)

   ReactiveHealthEndpointConfiguration#reactiveHealthContributorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisAutoConfiguration#stringRedisTemplate matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a primary bean from beans 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.core.StringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisCacheConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)
      - Cache org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration automatic cache type (CacheCondition)

   RedisHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory' (OnBeanCondition)

   RedisReactiveAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'org.springframework.data.redis.core.ReactiveRedisTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisReactiveAutoConfiguration#reactiveRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveAutoConfiguration#reactiveStringRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveStringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'reactor.core.publisher.Flux' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory' (OnBeanCondition)

   RedisReactiveHealthContributorAutoConfiguration#redisHealthContributor matched:
      - @ConditionalOnMissingBean (names: redisHealthIndicator,redisHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.redis.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.repository.Repository' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#metricsRepositoryMethodInvocationListener matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#repositoryTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)

   RestTemplateMetricsConfiguration#restTemplateExchangeTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.web.client.RestTemplateExchangeTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ScheduledTasksEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.scheduledtasks.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ScheduledTasksEndpointAutoConfiguration#scheduledTasksEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletEndpointManagementContextConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   ServletEndpointManagementContextConfiguration.WebMvcServletEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)

   ServletManagementContextAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.Servlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ShutdownEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint found property management.endpoint.shutdown.enabled with value true; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ShutdownEndpointAutoConfiguration#shutdownEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.ShutdownEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SimpleMetricsExportAutoConfiguration matched:
      - @ConditionalOnEnabledMetricsExport management.metrics.export.defaults.enabled is considered true (OnMetricsExportEnabledCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) found bean 'micrometerClock'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleMetricsExportAutoConfiguration#simpleConfig matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.simple.SimpleConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - matched (SpringBootAdminClientEnabledCondition)

   SpringBootAdminClientAutoConfiguration#registrationListener matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.RegistrationApplicationListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration#registrator matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.ApplicationRegistrator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration#startupDateMetadataContributor matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.metadata.StartupDateMetadataContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration.BlockingRegistrationClientConfig matched:
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration.BlockingRegistrationClientConfig#registrationClient matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.BlockingRegistrationClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration.ServletConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringBootAdminClientAutoConfiguration.ServletConfiguration#applicationFactory matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.ApplicationFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   Swagger2DocumentationConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   SystemMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   SystemMetricsAutoConfiguration#fileDescriptorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.FileDescriptorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#processorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.ProcessorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#uptimeMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.UptimeMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThreadDumpEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.threaddump.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ThreadDumpEndpointAutoConfiguration#dumpEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.ThreadDumpEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.thymeleaf.templatemode.TemplateMode', 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   ThymeleafAutoConfiguration.DefaultTemplateResolverConfiguration matched:
      - @ConditionalOnMissingBean (names: defaultTemplateResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafDefaultConfiguration#templateEngine matched:
      - @ConditionalOnMissingBean (types: org.thymeleaf.spring5.ISpringTemplateEngine; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafJava8TimeDialect matched:
      - @ConditionalOnClass found required class 'org.thymeleaf.extras.java8time.dialect.Java8TimeDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafJava8TimeDialect#java8TimeDialect matched:
      - @ConditionalOnMissingBean (types: org.thymeleaf.extras.java8time.dialect.Java8TimeDialect; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.thymeleaf.enabled) matched (OnPropertyCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration.ThymeleafViewResolverConfiguration#thymeleafViewResolver matched:
      - @ConditionalOnMissingBean (names: thymeleafViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TomcatMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.tomcat.TomcatMetrics', 'org.apache.catalina.Manager' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   TomcatMetricsAutoConfiguration#tomcatMetricsBinder matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.tomcat.TomcatMetrics,org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'firstTransactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a primary bean from beans 'firstTransactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration#controllerEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#endpointMediaTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#pathMappedEndpoints matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#webEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration#servletEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) found beans 'webEndpointDiscoverer', 'dispatcherServlet' (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#controllerEndpointHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#webEndpointServletHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   WebMvcMetricsAutoConfiguration#webMvcTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AppOpticsMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.appoptics.AppOpticsMeterRegistry' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AtlasMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.atlas.AtlasMeterRegistry' (OnClassCondition)

   AuditAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnProperty (management.auditevents.enabled) matched (OnPropertyCondition)

   AuditEventsEndpointAutoConfiguration#auditEventsEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)

   AvailabilityHealthContributorAutoConfiguration#livenessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.livenessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityHealthContributorAutoConfiguration#readinessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.readinessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityProbesAutoConfiguration:
      Did not match:
         - Probes availability not running on a supported cloud platform (AvailabilityProbesAutoConfiguration.ProbesCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: cacheResolver types: org.springframework.cache.CacheManager; SearchStrategy: all) found beans of type 'org.springframework.cache.CacheManager' cacheManager (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CacheMeterBinderProvidersConfiguration.CaffeineCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Cache' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.EhCache2CacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Ehcache' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.HazelcastCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'com.hazelcast.spring.cache.HazelcastCache', 'com.hazelcast.core.Hazelcast' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.JCacheCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.CacheManager' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (management.cloudfoundry.enabled) matched (OnPropertyCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CompositeMeterRegistryConfiguration:
      Did not match:
         - NoneNestedConditions 1 matched 1 did not; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.SingleInjectableMeterRegistry @ConditionalOnSingleCandidate (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found a primary bean from beans 'simpleMeterRegistry'; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.NoMeterRegistryCondition @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition)

   ConnectionFactoryHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   ConnectionPoolMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.pool.ConnectionPool' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceInitializationConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) did not find a primary bean from beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)

   DataSourcePoolMetricsAutoConfiguration.DataSourcePoolMetadataMetricsConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider (OnBeanCondition)

   DatadogMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.datadog.DatadogMeterRegistry' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   DruidDataSourceAutoConfigure#dataSource:
      Did not match:
         - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) found beans of type 'javax.sql.DataSource' first, second, dynamicDataSource (OnBeanCondition)

   DruidFilterConfiguration#commonsLogFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.commons-log.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#configFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.config.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#encodingConvertFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.encoding.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#log4j2Filter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.log4j2.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#log4jFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.log4j.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#slf4jLogFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.slf4j.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#statFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.stat.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#wallConfig:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.wall.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#wallFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.wall.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidSpringAopConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.aop-patterns) did not find property 'spring.datasource.druid.aop-patterns' (OnPropertyCondition)

   DynatraceMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.dynatrace.DynatraceMeterRegistry' (OnClassCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.elastic.ElasticMeterRegistry' (OnClassCondition)

   ElasticSearchReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ElasticSearchRestHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestHighLevelClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestHighLevelClient' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'de.flapdoodle.embed.mongo.MongodStarter' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FlywayEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GangliaMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.ganglia.GangliaMeterRegistry' (OnClassCondition)

   GraphiteMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.graphite.GraphiteMeterRegistry' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.WebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HealthEndpointReactiveWebExtensionConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManager' (OnClassCondition)

   HibernateMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManagerFactory' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HttpTraceAutoConfiguration.ReactiveTraceFilterConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   HumioMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.humio.HumioMeterRegistry' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxDbHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.influx.InfluxMeterRegistry' (OnClassCondition)

   InfoContributorAutoConfiguration#buildInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.BuildProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#gitInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.GitProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   IntegrationGraphEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.graph.IntegrationGraphServer' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JdbcTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) did not find a primary bean from beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)

   JedisConnectionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.apache.commons.pool2.impl.GenericObjectPool', 'redis.clients.jedis.Jedis' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JerseySameManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JerseyServerMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.jersey2.server.MetricsApplicationEventListener' (OnClassCondition)

   JerseyWebEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JettyMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.server.Server' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmsHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   JmxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.jmx.JmxMeterRegistry' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JolokiaEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jolokia.http.AgentServlet' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.Transaction' (OnClassCondition)

   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactory:
      Did not match:
         - @ConditionalOnMissingBean (names: kafkaListenerContainerFactory; SearchStrategy: all) found beans named kafkaListenerContainerFactory (OnBeanCondition)

   KafkaAnnotationDrivenConfiguration.EnableKafkaConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: org.springframework.kafka.config.internalKafkaListenerAnnotationProcessor; SearchStrategy: all) found beans named org.springframework.kafka.config.internalKafkaListenerAnnotationProcessor (OnBeanCondition)

   KafkaAutoConfiguration#kafkaConsumerFactory:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.kafka.core.ConsumerFactory; SearchStrategy: all) found beans of type 'org.springframework.kafka.core.ConsumerFactory' consumerFactory (OnBeanCondition)

   KafkaAutoConfiguration#kafkaJaasInitializer:
      Did not match:
         - @ConditionalOnProperty (spring.kafka.jaas.enabled) did not find property 'spring.kafka.jaas.enabled' (OnPropertyCondition)

   KafkaAutoConfiguration#kafkaProducerFactory:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.kafka.core.ProducerFactory; SearchStrategy: all) found beans of type 'org.springframework.kafka.core.ProducerFactory' producerFactory (OnBeanCondition)

   KafkaAutoConfiguration#kafkaTemplate:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.kafka.core.KafkaTemplate; SearchStrategy: all) found beans of type 'org.springframework.kafka.core.KafkaTemplate' kafkaTemplate (OnBeanCondition)

   KafkaAutoConfiguration#kafkaTransactionManager:
      Did not match:
         - @ConditionalOnProperty (spring.kafka.producer.transaction-id-prefix) did not find property 'spring.kafka.producer.transaction-id-prefix' (OnPropertyCondition)

   KafkaStreamsAnnotationDrivenConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.kafka.streams.StreamsBuilder' (OnClassCondition)

   KairosMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.kairos.KairosMeterRegistry' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.LdapOperations' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   LiquibaseEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.integration.spring.SpringLiquibase' (OnClassCondition)

   Log4J2MetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.logging.log4j.core.LoggerContext' (OnClassCondition)

   MailHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.mail.javamail.JavaMailSenderImpl; SearchStrategy: all) did not find any beans of type org.springframework.mail.javamail.JavaMailSenderImpl (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnClassCondition)
         - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.JndiNameProperty @ConditionalOnProperty (spring.mail.jndi-name) did not find property 'jndi-name'; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.HostProperty @ConditionalOnProperty (spring.mail.host) did not find property 'host' (MailSenderAutoConfiguration.MailSenderCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.mail.internet.MimeMessage', 'javax.activation.MimeType', 'org.springframework.mail.MailSender' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   ManagementContextAutoConfiguration.DifferentManagementContextConfiguration:
      Did not match:
         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)

   ManagementWebSecurityAutoConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter,org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) did not find any beans; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass did not find required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ReactiveWebConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.data.mongodb.core.ReactiveMongoTemplate; SearchStrategy: all) did not find any beans of type org.springframework.data.mongodb.core.ReactiveMongoTemplate (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'org.springframework.data.mongodb.core.ReactiveMongoTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)
         - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   MybatisAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) did not find a primary bean from beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.FreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver', 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriverConfig' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.LegacyFreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.LegacyVelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.velocity.Driver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.ThymeleafConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.thymeleaf.ThymeleafLanguageDriver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.VelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.velocity.VelocityLanguageDriver', 'org.mybatis.scripting.velocity.VelocityLanguageDriverConfig' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NewRelicMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.newrelic.NewRelicMeterRegistry' (OnClassCondition)

   NoOpMeterRegistryConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (OnBeanCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PrometheusMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.prometheus.PrometheusMeterRegistry' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   QuartzEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   RabbitHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.amqp.rabbit.core.RabbitTemplate' (OnClassCondition)

   RabbitMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.ConnectionFactory' (OnClassCondition)

   ReactiveCloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveManagementContextAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveManagementWebSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration#redisTemplate:
      Did not match:
         - @ConditionalOnMissingBean (names: redisTemplate; SearchStrategy: all) found beans named redisTemplate (OnBeanCondition)

   RedisHealthContributorAutoConfiguration#redisHealthContributor:
      Did not match:
         - @ConditionalOnMissingBean (names: redisHealthIndicator,redisHealthContributor; SearchStrategy: all) found beans named redisHealthContributor (OnBeanCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SecurityRequestMatchersManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.web.util.matcher.RequestMatcher' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletEndpointManagementContextConfiguration.JerseyServletEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   ServletManagementContextAutoConfiguration.ApplicationContextFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (management.server.add-application-context-header=true) did not find property 'add-application-context-header' (OnPropertyCondition)

   ServletWebServerFactoryAutoConfiguration#forwardedHeaderFilter:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SessionsEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.FindByIndexNameSessionRepository' (OnClassCondition)

   SignalFxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.signalfx.SignalFxMeterRegistry' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SolrHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.SolrClient' (OnClassCondition)

   SpringBootAdminClientAutoConfiguration.ReactiveConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   SpringBootAdminClientAutoConfiguration.ReactiveRegistrationClientConfig:
      Did not match:
         - @ConditionalOnBean did not find required type 'org.springframework.web.reactive.function.client.WebClient$Builder' (OnBeanCondition)
         - @ConditionalOnBean (types: org.springframework.web.reactive.function.client.WebClient$Builder; SearchStrategy: all) did not find any beans of type org.springframework.web.reactive.function.client.WebClient$Builder (OnBeanCondition)

   SpringBootAdminClientCloudFoundryAutoConfiguration:
      Did not match:
         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)
      Matched:
         - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
         - matched (SpringBootAdminClientEnabledCondition)

   StackdriverMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.stackdriver.StackdriverMeterRegistry' (OnClassCondition)

   StartupEndpointAutoConfiguration:
      Did not match:
         - ApplicationStartup configured applicationStartup is of type class org.springframework.core.metrics.DefaultApplicationStartup, expected BufferingApplicationStartup. (StartupEndpointAutoConfiguration.ApplicationStartupCondition)

   StatsdMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.statsd.StatsdMeterRegistry' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor:
      Did not match:
         - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) found beans of type 'java.util.concurrent.Executor' asyncThreadPoolTaskExecutor (OnBeanCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration.DataAttributeDialectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.mxab.thymeleaf.extras.dataattribute.dialect.DataAttributeDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafReactiveConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ThymeleafAutoConfiguration.ThymeleafSecurityDialectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.extras.springsecurity5.dialect.SpringSecurityDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebFluxConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ThymeleafAutoConfiguration.ThymeleafWebLayoutConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'nz.net.ultraq.thymeleaf.LayoutDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration#resourceUrlEncodingFilter:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)

   WavefrontMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebClientMetricsConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebFluxEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   WebFluxMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport' org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)
         - Ancestor org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.client.core.WebServiceTemplate' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

    org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration



2022-08-30 08:57:02.248 [main] [DEBUG] o.s.b.c.p.s.ConfigurationPropertySourcesPropertyResolver$DefaultResolver - Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
2022-08-30 08:57:02.249 [main] [INFO ] com.test.springboot.SpringbootApplication - Started SpringbootApplication in 4.705 seconds (JVM running for 5.361)
2022-08-30 08:57:02.250 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Cluster ID: N_qWYp0DR-CyFe0Vu-kqrw
2022-08-30 08:57:02.252 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 08:57:02.254 [main] [DEBUG] o.s.boot.availability.ApplicationAvailabilityBean - Application availability state LivenessState changed to CORRECT
2022-08-30 08:57:02.254 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 08:57:02.256 [main] [DEBUG] o.s.boot.availability.ApplicationAvailabilityBean - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2022-08-30 08:57:02.270 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:57:02.272 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:57:02.281 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:57:02.321 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 08:57:02.439 [RMI TCP Connection(1)-192.168.9.100] [INFO ] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-08-30 08:57:02.439 [RMI TCP Connection(1)-192.168.9.100] [INFO ] org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-08-30 08:57:02.439 [RMI TCP Connection(1)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2022-08-30 08:57:02.439 [RMI TCP Connection(1)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2022-08-30 08:57:02.439 [RMI TCP Connection(1)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2022-08-30 08:57:02.440 [RMI TCP Connection(1)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@2e78160d
2022-08-30 08:57:02.441 [RMI TCP Connection(1)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@b039cef
2022-08-30 08:57:02.441 [RMI TCP Connection(1)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2022-08-30 08:57:02.441 [RMI TCP Connection(1)-192.168.9.100] [INFO ] org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2022-08-30 08:57:02.461 [RMI TCP Connection(2)-192.168.9.100] [INFO ] com.alibaba.druid.pool.DruidDataSource - {dataSource-1,mybatis} inited
2022-08-30 08:57:02.872 [RMI TCP Connection(2)-192.168.9.100] [INFO ] com.alibaba.druid.pool.DruidDataSource - {dataSource-2,springbootdb} inited
2022-08-30 08:57:03.181 [RMI TCP Connection(2)-192.168.9.100] [INFO ] org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:71}] to localhost:27017
2022-08-30 08:57:04.305 [registrationTask1] [WARN ] d.c.b.a.client.registration.ApplicationRegistrator - Failed to register application as Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/) at spring-boot-admin ([http://localhost:9002/instances]): I/O error on POST request for "http://localhost:9002/instances": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect. Further attempts are logged on DEBUG level
2022-08-30 08:57:04.335 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully joined group with generation Generation{generationId=85, memberId='consumer-test-consumer-1-567757a3-477e-4a12-8490-44cd023b561a', protocol='range'}
2022-08-30 08:57:04.337 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Finished assignment for group at generation 85: {consumer-test-consumer-1-567757a3-477e-4a12-8490-44cd023b561a=Assignment(partitions=[test-0])}
2022-08-30 08:57:04.367 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully synced group in generation Generation{generationId=85, memberId='consumer-test-consumer-1-567757a3-477e-4a12-8490-44cd023b561a', protocol='range'}
2022-08-30 08:57:04.368 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Notifying assignor about the new Assignment(partitions=[test-0])
2022-08-30 08:57:04.370 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Adding newly assigned partitions: test-0
2022-08-30 08:57:04.419 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Setting offset for partition test-0 to the committed offset FetchPosition{offset=73, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[110.40.220.207:9092 (id: 1 rack: null)], epoch=0}}
2022-08-30 08:57:04.420 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions assigned: [test-0]
2022-08-30 08:57:11.388 [http-nio-8081-exec-2] [DEBUG] org.springframework.web.servlet.DispatcherServlet - PUT "/mongouser/630c85aa4afab752d5a4792e", parameters={}
2022-08-30 08:57:11.393 [http-nio-8081-exec-2] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#updateUser(String, MongoUser)
2022-08-30 08:57:11.474 [http-nio-8081-exec-2] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 08:57:11.475 [http-nio-8081-exec-2] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Nothing to write: null body
2022-08-30 08:57:11.476 [http-nio-8081-exec-2] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 08:57:12.270 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:57:12.271 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:57:12.271 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:57:22.261 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:57:22.262 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:57:22.262 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:57:32.260 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:57:32.260 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:57:32.261 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:57:38.073 [main] [INFO ] com.test.springboot.SpringbootApplication - Starting SpringbootApplication using Java 1.8.0_291 on gaofengkai with PID 27132 (D:\BackEnd\workspace\springboot\target\classes started by gaofengkai in D:\BackEnd\workspace\springboot)
2022-08-30 08:57:38.075 [main] [INFO ] com.test.springboot.SpringbootApplication - The following profiles are active: prod
2022-08-30 08:57:38.075 [main] [DEBUG] org.springframework.boot.SpringApplication - Loading source class com.test.springboot.SpringbootApplication
2022-08-30 08:57:38.104 [main] [DEBUG] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66f57048
2022-08-30 08:57:38.897 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-08-30 08:57:38.898 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-08-30 08:57:38.903 [main] [DEBUG] o.s.boot.autoconfigure.AutoConfigurationPackages - @EnableAutoConfiguration was declared on a class in the package 'com.test.springboot'. Automatic @Repository and @Entity scanning is enabled.
2022-08-30 08:57:38.945 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 1 MongoDB repository interfaces.
2022-08-30 08:57:38.954 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-08-30 08:57:38.955 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-08-30 08:57:38.967 [main] [INFO ] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.test.springboot.mapper.mongodb.MongoUserDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-08-30 08:57:38.967 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2022-08-30 08:57:39.045 [main] [WARN ] org.mybatis.spring.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'mongoUserDao' and 'com.test.springboot.mapper.mongodb.MongoUserDao' mapperInterface. Bean already defined with the same name!
2022-08-30 08:57:39.516 [main] [DEBUG] o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: C:\Users\Administrator\.m2\repository\org\springframework\boot\spring-boot\2.5.7\spring-boot-2.5.7.jar
2022-08-30 08:57:39.517 [main] [DEBUG] o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: C:\Users\Administrator\.m2\repository\org\springframework\boot\spring-boot\2.5.7\spring-boot-2.5.7.jar
2022-08-30 08:57:39.517 [main] [DEBUG] o.s.b.w.e.tomcat.TomcatServletWebServerFactory - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2022-08-30 08:57:39.532 [main] [INFO ] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2022-08-30 08:57:39.537 [main] [INFO ] org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2022-08-30 08:57:39.538 [main] [INFO ] org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-08-30 08:57:39.538 [main] [INFO ] org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.55]
2022-08-30 08:57:39.612 [main] [INFO ] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-08-30 08:57:39.612 [main] [DEBUG] o.s.b.w.s.c.ServletWebServerApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2022-08-30 08:57:39.612 [main] [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1508 ms
2022-08-30 08:57:39.808 [main] [DEBUG] o.s.b.web.servlet.ServletContextInitializerBeans - Mapping filters: filterRegistrationBean urls=[/*] order=-2147483647, filterRegistrationBean urls=[/*] order=2147483647, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, httpTraceFilter urls=[/*] order=2147483637
2022-08-30 08:57:39.809 [main] [DEBUG] o.s.b.web.servlet.ServletContextInitializerBeans - Mapping servlets: dispatcherServlet urls=[/], statViewServlet urls=[/druid/*]
2022-08-30 08:57:39.824 [main] [DEBUG] o.s.b.a.metrics.web.servlet.WebMvcMetricsFilter - Filter 'webMvcMetricsFilter' configured for use
2022-08-30 08:57:39.825 [main] [DEBUG] o.s.b.w.s.filter.OrderedCharacterEncodingFilter - Filter 'characterEncodingFilter' configured for use
2022-08-30 08:57:39.826 [main] [DEBUG] o.s.boot.actuate.web.trace.servlet.HttpTraceFilter - Filter 'httpTraceFilter' configured for use
2022-08-30 08:57:40.339 [main] [INFO ] org.mongodb.driver.cluster - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2022-08-30 08:57:40.382 [cluster-rtt-ClusterId{value='630d60844c7a1d0b66c5b66f', description='null'}-localhost:27017] [INFO ] org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:72}] to localhost:27017
2022-08-30 08:57:40.383 [cluster-ClusterId{value='630d60844c7a1d0b66c5b66f', description='null'}-localhost:27017] [INFO ] org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:73}] to localhost:27017
2022-08-30 08:57:40.383 [cluster-ClusterId{value='630d60844c7a1d0b66c5b66f', description='null'}-localhost:27017] [INFO ] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=13195300}
2022-08-30 08:57:40.506 [main] [DEBUG] o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2022-08-30 08:57:40.920 [main] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2022-08-30 08:57:41.078 [main] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 43 mappings in 'requestMappingHandlerMapping'
2022-08-30 08:57:41.408 [main] [INFO ] o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 16 endpoint(s) beneath base path '/monitor'
2022-08-30 08:57:41.483 [main] [INFO ] s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-08-30 08:57:41.584 [main] [DEBUG] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2022-08-30 08:57:42.127 [main] [INFO ] org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [110.40.220.207:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-test-consumer-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = test-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2022-08-30 08:57:42.169 [main] [INFO ] org.apache.kafka.common.utils.AppInfoParser - Kafka version: 2.7.2
2022-08-30 08:57:42.170 [main] [INFO ] org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: 37a1cc36bf4d76f3
2022-08-30 08:57:42.170 [main] [INFO ] org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1661821062169
2022-08-30 08:57:42.172 [main] [INFO ] org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Subscribed to topic(s): test
2022-08-30 08:57:42.176 [main] [INFO ] org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2022-08-30 08:57:42.183 [main] [INFO ] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2022-08-30 08:57:42.184 [main] [INFO ] s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2022-08-30 08:57:42.196 [main] [INFO ] s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 6 custom documentation plugin(s)
2022-08-30 08:57:42.228 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 08:57:42.343 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: testUsingGET_1
2022-08-30 08:57:42.345 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: test2UsingGET_1
2022-08-30 08:57:42.354 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 08:57:42.356 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: testAopUsingGET_1
2022-08-30 08:57:42.359 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 08:57:42.362 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getCityUsingPOST_1
2022-08-30 08:57:42.364 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getFirstStudentUsingPOST_1
2022-08-30 08:57:42.367 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 08:57:42.369 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonUsingPOST_1
2022-08-30 08:57:42.370 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingGET_1
2022-08-30 08:57:42.370 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingHEAD_1
2022-08-30 08:57:42.370 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingPOST_1
2022-08-30 08:57:42.371 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingPUT_1
2022-08-30 08:57:42.372 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingPATCH_1
2022-08-30 08:57:42.372 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingDELETE_1
2022-08-30 08:57:42.373 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingOPTIONS_1
2022-08-30 08:57:42.373 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingTRACE_1
2022-08-30 08:57:42.374 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingGET_1
2022-08-30 08:57:42.374 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingHEAD_1
2022-08-30 08:57:42.375 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingPOST_1
2022-08-30 08:57:42.375 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingPUT_1
2022-08-30 08:57:42.376 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingPATCH_1
2022-08-30 08:57:42.376 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingDELETE_1
2022-08-30 08:57:42.376 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingOPTIONS_1
2022-08-30 08:57:42.377 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingTRACE_1
2022-08-30 08:57:42.377 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingGET_1
2022-08-30 08:57:42.378 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingHEAD_1
2022-08-30 08:57:42.378 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingPOST_1
2022-08-30 08:57:42.379 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingPUT_1
2022-08-30 08:57:42.379 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingPATCH_1
2022-08-30 08:57:42.379 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingDELETE_1
2022-08-30 08:57:42.379 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingOPTIONS_1
2022-08-30 08:57:42.380 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingTRACE_1
2022-08-30 08:57:42.380 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: serializationUsingPOST_1
2022-08-30 08:57:42.382 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingGET_1
2022-08-30 08:57:42.383 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingHEAD_1
2022-08-30 08:57:42.383 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingPOST_1
2022-08-30 08:57:42.384 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingPUT_1
2022-08-30 08:57:42.384 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingPATCH_1
2022-08-30 08:57:42.384 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingDELETE_1
2022-08-30 08:57:42.385 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingOPTIONS_1
2022-08-30 08:57:42.385 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingTRACE_1
2022-08-30 08:57:42.389 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 08:57:42.392 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: addRedisUsingPOST_1
2022-08-30 08:57:42.393 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: deleteRedisUsingPOST_1
2022-08-30 08:57:42.394 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getRedisUsingPOST_1
2022-08-30 08:57:42.394 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateRedisUsingPOST_1
2022-08-30 08:57:42.397 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 08:57:42.398 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: addJdbcStudentUsingPOST_1
2022-08-30 08:57:42.400 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: queryStudentByIdUsingGET_1
2022-08-30 08:57:42.400 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: queryStudentById2UsingPOST_1
2022-08-30 08:57:42.401 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: queryStudentById3UsingPOST_1
2022-08-30 08:57:42.415 [main] [DEBUG] o.s.b.a.l.ConditionEvaluationReportLoggingListener - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   AuditEventsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.auditevents.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   AutoConfiguration matched:
      - @ConditionalOnProperty (helloworld=true) matched (OnPropertyCondition)

   BeansEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.beans.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration#beansEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.beans.BeansEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CacheMeterBinderProvidersConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.MeterBinder' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.RedisCacheMeterBinderProviderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.cache.RedisCache' (OnClassCondition)

   CacheMetricsAutoConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.cache.CacheManager; SearchStrategy: all) found bean 'cacheManager' (OnBeanCondition)

   CacheMetricsRegistrarConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'simpleMeterRegistry', 'redisCacheMeterBinderProvider' (OnBeanCondition)

   CachesEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint no property management.endpoint.caches.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   CachesEndpointAutoConfiguration#cachesEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CachesEndpointAutoConfiguration#cachesEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) found bean 'cachesEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CompositeMeterRegistryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.composite.CompositeMeterRegistry' (OnClassCondition)

   ConditionsReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.conditions.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ConditionsReportEndpointAutoConfiguration#conditionsReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.configprops.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) found bean 'configurationPropertiesReportEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration#dbHealthContributor matched:
      - @ConditionalOnMissingBean (names: dbHealthIndicator,dbHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'dynamicDataSource', 'simpleMeterRegistry', 'first', 'second' (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration.HikariDataSourceMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DiskSpaceHealthContributorAutoConfiguration matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   DiskSpaceHealthContributorAutoConfiguration#diskSpaceHealthIndicator matched:
      - @ConditionalOnMissingBean (names: diskSpaceHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   DruidDataSourceAutoConfigure matched:
      - @ConditionalOnClass found required class 'com.alibaba.druid.pool.DruidDataSource' (OnClassCondition)

   DruidStatViewServletConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.datasource.druid.stat-view-servlet.enabled=true) matched (OnPropertyCondition)

   DruidWebStatFilterConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.datasource.druid.web-stat-filter.enabled=true) matched (OnPropertyCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   EndpointAutoConfiguration#endpointCachingOperationInvokerAdvisor matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EndpointAutoConfiguration#endpointOperationParameterMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.env.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) found bean 'environmentEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HealthContributorAutoConfiguration#pingHealthContributor matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   HealthEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint found property management.endpoint.health.enabled with value true; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HealthEndpointConfiguration#healthContributorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpointGroups matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointGroups; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthHttpCodeStatusMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HttpCodeStatusMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthStatusAggregator matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.StatusAggregator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration#healthEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HeapDumpWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.heapdump.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HeapDumpWebEndpointAutoConfiguration#heapDumpWebEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.HeapDumpWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpClientMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (management.trace.http.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.trace.http.HttpTraceRepository; SearchStrategy: all) found bean 'buildHttpTraceRepository' (OnBeanCondition)

   HttpTraceAutoConfiguration#httpExchangeTracer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.trace.http.HttpExchangeTracer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceAutoConfiguration.ServletTraceFilterConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   HttpTraceAutoConfiguration.ServletTraceFilterConfiguration#httpTraceFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.httptrace.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HttpTraceEndpointAutoConfiguration#httpTraceEndpoint matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.trace.http.HttpTraceRepository; SearchStrategy: all) found bean 'buildHttpTraceRepository'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.trace.http.HttpTraceEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   InfoContributorAutoConfiguration#envInfoContributor matched:
      - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.info.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   InfoEndpointAutoConfiguration#infoEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.info.InfoEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxEndpointAutoConfiguration#endpointObjectNameFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.EndpointObjectNameFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxAnnotationEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.JmxEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxMBeanExporter matched:
      - @ConditionalOnSingleCandidate (types: javax.management.MBeanServer; SearchStrategy: all) found a primary bean from beans 'mbeanServer' (OnBeanCondition)

   JvmMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   JvmMetricsAutoConfiguration#classLoaderMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmGcMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmGcMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmMemoryMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmThreadMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAnnotationDrivenConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.kafka.annotation.EnableKafka' (OnClassCondition)

   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactoryConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   KafkaAutoConfiguration#kafkaAdmin matched:
      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.KafkaAdmin; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAutoConfiguration#kafkaProducerListener matched:
      - @ConditionalOnMissingBean (types: org.springframework.kafka.support.ProducerListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.kafka.KafkaClientMetrics', 'org.springframework.kafka.core.ProducerFactory' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   KafkaMetricsAutoConfiguration.KafkaStreamsMetricsConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.kafka.KafkaStreamsMetrics', 'org.springframework.kafka.config.StreamsBuilderFactoryBean' (OnClassCondition)

   LettuceConnectionConfiguration matched:
      - @ConditionalOnClass found required class 'io.lettuce.core.RedisClient' (OnClassCondition)
      - @ConditionalOnProperty (spring.redis.client-type=lettuce) matched (OnPropertyCondition)

   LettuceConnectionConfiguration#lettuceClientResources matched:
      - @ConditionalOnMissingBean (types: io.lettuce.core.resource.ClientResources; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration#redisConnectionFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LogFileWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.logfile.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   LogFileWebEndpointAutoConfiguration#logFileWebEndpoint matched:
      - Log File found logging.file.path var/log (LogFileWebEndpointAutoConfiguration.LogFileCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LogFileWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LogbackMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'ch.qos.logback.classic.LoggerContext', 'org.slf4j.LoggerFactory' (OnClassCondition)
      - LogbackLoggingCondition ILoggerFactory is a Logback LoggerContext (LogbackMetricsAutoConfiguration.LogbackLoggingCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   LogbackMetricsAutoConfiguration#logbackMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.logging.LogbackMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoggersEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.loggers.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   LoggersEndpointAutoConfiguration#loggersEndpoint matched:
      - Logging System enabled (LoggersEndpointAutoConfiguration.OnEnabledLoggingSystemCondition)
      - @ConditionalOnBean (types: org.springframework.boot.logging.LoggingSystem; SearchStrategy: all) found bean 'springBootLoggingSystem'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LoggersEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ManagementContextAutoConfiguration.SameManagementContextConfiguration matched:
      - Management Port actual port type (SAME) matched required type (OnManagementPortCondition)

   MappingsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.mappings.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration.SpringMvcConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   MetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)

   MetricsAutoConfiguration#micrometerClock matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MetricsEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint no property management.endpoint.metrics.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   MetricsEndpointAutoConfiguration#metricsEndpoint matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.MetricsEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.mongodb.client.MongoClient' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration#mongo matched:
      - @ConditionalOnMissingBean (types: com.mongodb.client.MongoClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration.MongoClientSettingsConfiguration matched:
      - @ConditionalOnMissingBean (types: com.mongodb.MongoClientSettings; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDataAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'com.mongodb.client.MongoClient', 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)

   MongoDataConfiguration#mongoCustomConversions matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.convert.MongoCustomConversions; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDataConfiguration#mongoMappingContext matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.mapping.MongoMappingContext; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryConfiguration matched:
      - @ConditionalOnSingleCandidate (types: com.mongodb.client.MongoClient; SearchStrategy: all) found a primary bean from beans 'mongo'; @ConditionalOnMissingBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) found bean 'mongoDatabaseFactory' (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#gridFsTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.gridfs.GridFsOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#mappingMongoConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.convert.MongoConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#mongoTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.MongoOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: org.springframework.data.mongodb.core.MongoTemplate; SearchStrategy: all) found bean 'mongoTemplate' (OnBeanCondition)

   MongoHealthContributorAutoConfiguration#mongoHealthContributor matched:
      - @ConditionalOnMissingBean (names: mongoHealthIndicator,mongoHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.mongodb.MongoClientSettings' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoCommandMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener' (OnClassCondition)
      - @ConditionalOnProperty (management.metrics.mongo.command.enabled=true) matched (OnPropertyCondition)

   MongoMetricsAutoConfiguration.MongoCommandMetricsConfiguration#mongoCommandTagsProvider matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoCommandTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoCommandMetricsConfiguration#mongoMetricsCommandListener matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoConnectionPoolMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener' (OnClassCondition)
      - @ConditionalOnProperty (management.metrics.mongo.connectionpool.enabled=true) matched (OnPropertyCondition)

   MongoMetricsAutoConfiguration.MongoConnectionPoolMetricsConfiguration#mongoConnectionPoolTagsProvider matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoConnectionPoolTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoConnectionPoolMetricsConfiguration#mongoMetricsConnectionPoolListener matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'com.mongodb.client.MongoClient', 'org.springframework.data.mongodb.repository.MongoRepository' (OnClassCondition)
      - @ConditionalOnRepositoryType configured type of 'AUTO' matched required type (OnRepositoryTypeCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean,org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisLanguageDriverAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.apache.ibatis.scripting.LanguageDriver' (OnClassCondition)

   NettyAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ReactiveHealthEndpointConfiguration matched:
      - @ConditionalOnClass found required class 'reactor.core.publisher.Flux' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)

   ReactiveHealthEndpointConfiguration#reactiveHealthContributorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisAutoConfiguration#stringRedisTemplate matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a primary bean from beans 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.core.StringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisCacheConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)
      - Cache org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration automatic cache type (CacheCondition)

   RedisHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory' (OnBeanCondition)

   RedisReactiveAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'org.springframework.data.redis.core.ReactiveRedisTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisReactiveAutoConfiguration#reactiveRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveAutoConfiguration#reactiveStringRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveStringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'reactor.core.publisher.Flux' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory' (OnBeanCondition)

   RedisReactiveHealthContributorAutoConfiguration#redisHealthContributor matched:
      - @ConditionalOnMissingBean (names: redisHealthIndicator,redisHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.redis.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.repository.Repository' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#metricsRepositoryMethodInvocationListener matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#repositoryTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)

   RestTemplateMetricsConfiguration#restTemplateExchangeTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.web.client.RestTemplateExchangeTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ScheduledTasksEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.scheduledtasks.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ScheduledTasksEndpointAutoConfiguration#scheduledTasksEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletEndpointManagementContextConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   ServletEndpointManagementContextConfiguration.WebMvcServletEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)

   ServletManagementContextAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.Servlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ShutdownEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint found property management.endpoint.shutdown.enabled with value true; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ShutdownEndpointAutoConfiguration#shutdownEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.ShutdownEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SimpleMetricsExportAutoConfiguration matched:
      - @ConditionalOnEnabledMetricsExport management.metrics.export.defaults.enabled is considered true (OnMetricsExportEnabledCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) found bean 'micrometerClock'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleMetricsExportAutoConfiguration#simpleConfig matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.simple.SimpleConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - matched (SpringBootAdminClientEnabledCondition)

   SpringBootAdminClientAutoConfiguration#registrationListener matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.RegistrationApplicationListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration#registrator matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.ApplicationRegistrator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration#startupDateMetadataContributor matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.metadata.StartupDateMetadataContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration.BlockingRegistrationClientConfig matched:
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration.BlockingRegistrationClientConfig#registrationClient matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.BlockingRegistrationClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration.ServletConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringBootAdminClientAutoConfiguration.ServletConfiguration#applicationFactory matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.ApplicationFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   Swagger2DocumentationConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   SystemMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   SystemMetricsAutoConfiguration#fileDescriptorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.FileDescriptorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#processorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.ProcessorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#uptimeMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.UptimeMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThreadDumpEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.threaddump.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ThreadDumpEndpointAutoConfiguration#dumpEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.ThreadDumpEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.thymeleaf.templatemode.TemplateMode', 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   ThymeleafAutoConfiguration.DefaultTemplateResolverConfiguration matched:
      - @ConditionalOnMissingBean (names: defaultTemplateResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafDefaultConfiguration#templateEngine matched:
      - @ConditionalOnMissingBean (types: org.thymeleaf.spring5.ISpringTemplateEngine; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafJava8TimeDialect matched:
      - @ConditionalOnClass found required class 'org.thymeleaf.extras.java8time.dialect.Java8TimeDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafJava8TimeDialect#java8TimeDialect matched:
      - @ConditionalOnMissingBean (types: org.thymeleaf.extras.java8time.dialect.Java8TimeDialect; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.thymeleaf.enabled) matched (OnPropertyCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration.ThymeleafViewResolverConfiguration#thymeleafViewResolver matched:
      - @ConditionalOnMissingBean (names: thymeleafViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TomcatMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.tomcat.TomcatMetrics', 'org.apache.catalina.Manager' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   TomcatMetricsAutoConfiguration#tomcatMetricsBinder matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.tomcat.TomcatMetrics,org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'firstTransactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a primary bean from beans 'firstTransactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration#controllerEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#endpointMediaTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#pathMappedEndpoints matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#webEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration#servletEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) found beans 'webEndpointDiscoverer', 'dispatcherServlet' (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#controllerEndpointHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#webEndpointServletHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   WebMvcMetricsAutoConfiguration#webMvcTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AppOpticsMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.appoptics.AppOpticsMeterRegistry' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AtlasMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.atlas.AtlasMeterRegistry' (OnClassCondition)

   AuditAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnProperty (management.auditevents.enabled) matched (OnPropertyCondition)

   AuditEventsEndpointAutoConfiguration#auditEventsEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)

   AvailabilityHealthContributorAutoConfiguration#livenessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.livenessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityHealthContributorAutoConfiguration#readinessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.readinessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityProbesAutoConfiguration:
      Did not match:
         - Probes availability not running on a supported cloud platform (AvailabilityProbesAutoConfiguration.ProbesCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: cacheResolver types: org.springframework.cache.CacheManager; SearchStrategy: all) found beans of type 'org.springframework.cache.CacheManager' cacheManager (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CacheMeterBinderProvidersConfiguration.CaffeineCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Cache' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.EhCache2CacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Ehcache' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.HazelcastCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'com.hazelcast.spring.cache.HazelcastCache', 'com.hazelcast.core.Hazelcast' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.JCacheCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.CacheManager' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (management.cloudfoundry.enabled) matched (OnPropertyCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CompositeMeterRegistryConfiguration:
      Did not match:
         - NoneNestedConditions 1 matched 1 did not; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.SingleInjectableMeterRegistry @ConditionalOnSingleCandidate (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found a primary bean from beans 'simpleMeterRegistry'; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.NoMeterRegistryCondition @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition)

   ConnectionFactoryHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   ConnectionPoolMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.pool.ConnectionPool' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceInitializationConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) did not find a primary bean from beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)

   DataSourcePoolMetricsAutoConfiguration.DataSourcePoolMetadataMetricsConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider (OnBeanCondition)

   DatadogMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.datadog.DatadogMeterRegistry' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   DruidDataSourceAutoConfigure#dataSource:
      Did not match:
         - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) found beans of type 'javax.sql.DataSource' first, second, dynamicDataSource (OnBeanCondition)

   DruidFilterConfiguration#commonsLogFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.commons-log.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#configFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.config.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#encodingConvertFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.encoding.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#log4j2Filter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.log4j2.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#log4jFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.log4j.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#slf4jLogFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.slf4j.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#statFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.stat.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#wallConfig:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.wall.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#wallFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.wall.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidSpringAopConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.aop-patterns) did not find property 'spring.datasource.druid.aop-patterns' (OnPropertyCondition)

   DynatraceMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.dynatrace.DynatraceMeterRegistry' (OnClassCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.elastic.ElasticMeterRegistry' (OnClassCondition)

   ElasticSearchReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ElasticSearchRestHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestHighLevelClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestHighLevelClient' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'de.flapdoodle.embed.mongo.MongodStarter' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FlywayEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GangliaMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.ganglia.GangliaMeterRegistry' (OnClassCondition)

   GraphiteMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.graphite.GraphiteMeterRegistry' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.WebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HealthEndpointReactiveWebExtensionConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManager' (OnClassCondition)

   HibernateMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManagerFactory' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HttpTraceAutoConfiguration.ReactiveTraceFilterConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   HumioMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.humio.HumioMeterRegistry' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxDbHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.influx.InfluxMeterRegistry' (OnClassCondition)

   InfoContributorAutoConfiguration#buildInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.BuildProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#gitInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.GitProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   IntegrationGraphEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.graph.IntegrationGraphServer' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JdbcTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) did not find a primary bean from beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)

   JedisConnectionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.apache.commons.pool2.impl.GenericObjectPool', 'redis.clients.jedis.Jedis' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JerseySameManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JerseyServerMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.jersey2.server.MetricsApplicationEventListener' (OnClassCondition)

   JerseyWebEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JettyMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.server.Server' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmsHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   JmxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.jmx.JmxMeterRegistry' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JolokiaEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jolokia.http.AgentServlet' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.Transaction' (OnClassCondition)

   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactory:
      Did not match:
         - @ConditionalOnMissingBean (names: kafkaListenerContainerFactory; SearchStrategy: all) found beans named kafkaListenerContainerFactory (OnBeanCondition)

   KafkaAnnotationDrivenConfiguration.EnableKafkaConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: org.springframework.kafka.config.internalKafkaListenerAnnotationProcessor; SearchStrategy: all) found beans named org.springframework.kafka.config.internalKafkaListenerAnnotationProcessor (OnBeanCondition)

   KafkaAutoConfiguration#kafkaConsumerFactory:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.kafka.core.ConsumerFactory; SearchStrategy: all) found beans of type 'org.springframework.kafka.core.ConsumerFactory' consumerFactory (OnBeanCondition)

   KafkaAutoConfiguration#kafkaJaasInitializer:
      Did not match:
         - @ConditionalOnProperty (spring.kafka.jaas.enabled) did not find property 'spring.kafka.jaas.enabled' (OnPropertyCondition)

   KafkaAutoConfiguration#kafkaProducerFactory:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.kafka.core.ProducerFactory; SearchStrategy: all) found beans of type 'org.springframework.kafka.core.ProducerFactory' producerFactory (OnBeanCondition)

   KafkaAutoConfiguration#kafkaTemplate:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.kafka.core.KafkaTemplate; SearchStrategy: all) found beans of type 'org.springframework.kafka.core.KafkaTemplate' kafkaTemplate (OnBeanCondition)

   KafkaAutoConfiguration#kafkaTransactionManager:
      Did not match:
         - @ConditionalOnProperty (spring.kafka.producer.transaction-id-prefix) did not find property 'spring.kafka.producer.transaction-id-prefix' (OnPropertyCondition)

   KafkaStreamsAnnotationDrivenConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.kafka.streams.StreamsBuilder' (OnClassCondition)

   KairosMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.kairos.KairosMeterRegistry' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.LdapOperations' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   LiquibaseEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.integration.spring.SpringLiquibase' (OnClassCondition)

   Log4J2MetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.logging.log4j.core.LoggerContext' (OnClassCondition)

   MailHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.mail.javamail.JavaMailSenderImpl; SearchStrategy: all) did not find any beans of type org.springframework.mail.javamail.JavaMailSenderImpl (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnClassCondition)
         - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.JndiNameProperty @ConditionalOnProperty (spring.mail.jndi-name) did not find property 'jndi-name'; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.HostProperty @ConditionalOnProperty (spring.mail.host) did not find property 'host' (MailSenderAutoConfiguration.MailSenderCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.mail.internet.MimeMessage', 'javax.activation.MimeType', 'org.springframework.mail.MailSender' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   ManagementContextAutoConfiguration.DifferentManagementContextConfiguration:
      Did not match:
         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)

   ManagementWebSecurityAutoConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter,org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) did not find any beans; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass did not find required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ReactiveWebConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.data.mongodb.core.ReactiveMongoTemplate; SearchStrategy: all) did not find any beans of type org.springframework.data.mongodb.core.ReactiveMongoTemplate (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'org.springframework.data.mongodb.core.ReactiveMongoTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)
         - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   MybatisAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) did not find a primary bean from beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.FreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver', 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriverConfig' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.LegacyFreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.LegacyVelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.velocity.Driver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.ThymeleafConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.thymeleaf.ThymeleafLanguageDriver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.VelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.velocity.VelocityLanguageDriver', 'org.mybatis.scripting.velocity.VelocityLanguageDriverConfig' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NewRelicMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.newrelic.NewRelicMeterRegistry' (OnClassCondition)

   NoOpMeterRegistryConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (OnBeanCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PrometheusMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.prometheus.PrometheusMeterRegistry' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   QuartzEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   RabbitHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.amqp.rabbit.core.RabbitTemplate' (OnClassCondition)

   RabbitMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.ConnectionFactory' (OnClassCondition)

   ReactiveCloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveManagementContextAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveManagementWebSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration#redisTemplate:
      Did not match:
         - @ConditionalOnMissingBean (names: redisTemplate; SearchStrategy: all) found beans named redisTemplate (OnBeanCondition)

   RedisHealthContributorAutoConfiguration#redisHealthContributor:
      Did not match:
         - @ConditionalOnMissingBean (names: redisHealthIndicator,redisHealthContributor; SearchStrategy: all) found beans named redisHealthContributor (OnBeanCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SecurityRequestMatchersManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.web.util.matcher.RequestMatcher' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletEndpointManagementContextConfiguration.JerseyServletEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   ServletManagementContextAutoConfiguration.ApplicationContextFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (management.server.add-application-context-header=true) did not find property 'add-application-context-header' (OnPropertyCondition)

   ServletWebServerFactoryAutoConfiguration#forwardedHeaderFilter:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SessionsEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.FindByIndexNameSessionRepository' (OnClassCondition)

   SignalFxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.signalfx.SignalFxMeterRegistry' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SolrHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.SolrClient' (OnClassCondition)

   SpringBootAdminClientAutoConfiguration.ReactiveConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   SpringBootAdminClientAutoConfiguration.ReactiveRegistrationClientConfig:
      Did not match:
         - @ConditionalOnBean did not find required type 'org.springframework.web.reactive.function.client.WebClient$Builder' (OnBeanCondition)
         - @ConditionalOnBean (types: org.springframework.web.reactive.function.client.WebClient$Builder; SearchStrategy: all) did not find any beans of type org.springframework.web.reactive.function.client.WebClient$Builder (OnBeanCondition)

   SpringBootAdminClientCloudFoundryAutoConfiguration:
      Did not match:
         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)
      Matched:
         - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
         - matched (SpringBootAdminClientEnabledCondition)

   StackdriverMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.stackdriver.StackdriverMeterRegistry' (OnClassCondition)

   StartupEndpointAutoConfiguration:
      Did not match:
         - ApplicationStartup configured applicationStartup is of type class org.springframework.core.metrics.DefaultApplicationStartup, expected BufferingApplicationStartup. (StartupEndpointAutoConfiguration.ApplicationStartupCondition)

   StatsdMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.statsd.StatsdMeterRegistry' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor:
      Did not match:
         - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) found beans of type 'java.util.concurrent.Executor' asyncThreadPoolTaskExecutor (OnBeanCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration.DataAttributeDialectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.mxab.thymeleaf.extras.dataattribute.dialect.DataAttributeDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafReactiveConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ThymeleafAutoConfiguration.ThymeleafSecurityDialectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.extras.springsecurity5.dialect.SpringSecurityDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebFluxConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ThymeleafAutoConfiguration.ThymeleafWebLayoutConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'nz.net.ultraq.thymeleaf.LayoutDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration#resourceUrlEncodingFilter:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)

   WavefrontMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebClientMetricsConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebFluxEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   WebFluxMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport' org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)
         - Ancestor org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.client.core.WebServiceTemplate' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

    org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration



2022-08-30 08:57:42.420 [main] [DEBUG] o.s.b.c.p.s.ConfigurationPropertySourcesPropertyResolver$DefaultResolver - Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
2022-08-30 08:57:42.421 [main] [INFO ] com.test.springboot.SpringbootApplication - Started SpringbootApplication in 4.682 seconds (JVM running for 5.44)
2022-08-30 08:57:42.425 [main] [DEBUG] o.s.boot.availability.ApplicationAvailabilityBean - Application availability state LivenessState changed to CORRECT
2022-08-30 08:57:42.427 [main] [DEBUG] o.s.boot.availability.ApplicationAvailabilityBean - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2022-08-30 08:57:42.431 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Cluster ID: N_qWYp0DR-CyFe0Vu-kqrw
2022-08-30 08:57:42.433 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 08:57:42.435 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 08:57:42.440 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:57:42.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:57:42.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:57:42.531 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 08:57:42.861 [RMI TCP Connection(2)-192.168.9.100] [INFO ] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-08-30 08:57:42.861 [RMI TCP Connection(2)-192.168.9.100] [INFO ] org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-08-30 08:57:42.861 [RMI TCP Connection(2)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2022-08-30 08:57:42.861 [RMI TCP Connection(2)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2022-08-30 08:57:42.862 [RMI TCP Connection(2)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2022-08-30 08:57:42.863 [RMI TCP Connection(2)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@54ec2cc4
2022-08-30 08:57:42.863 [RMI TCP Connection(2)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@5ddfcb06
2022-08-30 08:57:42.863 [RMI TCP Connection(2)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2022-08-30 08:57:42.863 [RMI TCP Connection(2)-192.168.9.100] [INFO ] org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2022-08-30 08:57:42.879 [RMI TCP Connection(3)-192.168.9.100] [INFO ] com.alibaba.druid.pool.DruidDataSource - {dataSource-1,mybatis} inited
2022-08-30 08:57:43.321 [RMI TCP Connection(3)-192.168.9.100] [INFO ] com.alibaba.druid.pool.DruidDataSource - {dataSource-2,springbootdb} inited
2022-08-30 08:57:43.630 [RMI TCP Connection(3)-192.168.9.100] [INFO ] org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:74}] to localhost:27017
2022-08-30 08:57:44.432 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully joined group with generation Generation{generationId=86, memberId='consumer-test-consumer-1-68722f6f-d66f-4115-b4e3-e51f16dfd6d9', protocol='range'}
2022-08-30 08:57:44.434 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Finished assignment for group at generation 86: {consumer-test-consumer-1-68722f6f-d66f-4115-b4e3-e51f16dfd6d9=Assignment(partitions=[test-0])}
2022-08-30 08:57:44.470 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully synced group in generation Generation{generationId=86, memberId='consumer-test-consumer-1-68722f6f-d66f-4115-b4e3-e51f16dfd6d9', protocol='range'}
2022-08-30 08:57:44.471 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Notifying assignor about the new Assignment(partitions=[test-0])
2022-08-30 08:57:44.472 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Adding newly assigned partitions: test-0
2022-08-30 08:57:44.479 [registrationTask1] [WARN ] d.c.b.a.client.registration.ApplicationRegistrator - Failed to register application as Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/) at spring-boot-admin ([http://localhost:9002/instances]): I/O error on POST request for "http://localhost:9002/instances": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect. Further attempts are logged on DEBUG level
2022-08-30 08:57:44.540 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Setting offset for partition test-0 to the committed offset FetchPosition{offset=73, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[110.40.220.207:9092 (id: 1 rack: null)], epoch=0}}
2022-08-30 08:57:44.540 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions assigned: [test-0]
2022-08-30 08:57:50.806 [http-nio-8081-exec-2] [DEBUG] org.springframework.web.servlet.DispatcherServlet - PUT "/mongouser/630c85aa4afab752d5a4792e", parameters={}
2022-08-30 08:57:50.811 [http-nio-8081-exec-2] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#updateUser(String, MongoUser)
2022-08-30 08:57:50.892 [http-nio-8081-exec-2] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 08:57:50.893 [http-nio-8081-exec-2] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Nothing to write: null body
2022-08-30 08:57:50.894 [http-nio-8081-exec-2] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 08:57:52.441 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:57:52.441 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:57:52.442 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:58:02.442 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:58:02.442 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:58:02.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:58:12.437 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:58:12.437 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:58:12.437 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:58:16.357 [http-nio-8081-exec-3] [DEBUG] org.springframework.web.servlet.DispatcherServlet - PUT "/mongouser/630c85aa4afab752d5a4792e", parameters={}
2022-08-30 08:58:16.358 [http-nio-8081-exec-3] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#updateUser(String, MongoUser)
2022-08-30 08:58:16.362 [http-nio-8081-exec-3] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 08:58:16.362 [http-nio-8081-exec-3] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Nothing to write: null body
2022-08-30 08:58:16.362 [http-nio-8081-exec-3] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 08:58:22.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:58:22.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:58:22.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:58:23.069 [http-nio-8081-exec-4] [DEBUG] org.springframework.web.servlet.DispatcherServlet - PUT "/mongouser/630c85aa4afab752d5a4792e", parameters={}
2022-08-30 08:58:23.070 [http-nio-8081-exec-4] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#updateUser(String, MongoUser)
2022-08-30 08:58:23.073 [http-nio-8081-exec-4] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 08:58:23.073 [http-nio-8081-exec-4] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Nothing to write: null body
2022-08-30 08:58:23.073 [http-nio-8081-exec-4] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 08:58:32.435 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:58:32.435 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:58:32.436 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:58:33.813 [http-nio-8081-exec-5] [DEBUG] org.springframework.web.servlet.DispatcherServlet - PUT "/mongouser/630c85aa4afab752d5a4792e", parameters={}
2022-08-30 08:58:33.814 [http-nio-8081-exec-5] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#updateUser(String, MongoUser)
2022-08-30 08:58:33.817 [http-nio-8081-exec-5] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 08:58:33.817 [http-nio-8081-exec-5] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Nothing to write: null body
2022-08-30 08:58:33.817 [http-nio-8081-exec-5] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 08:58:40.126 [http-nio-8081-exec-6] [DEBUG] org.springframework.web.servlet.DispatcherServlet - PUT "/mongouser/630c85aa4afab752d5a4792e", parameters={}
2022-08-30 08:58:40.126 [http-nio-8081-exec-6] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#updateUser(String, MongoUser)
2022-08-30 08:58:40.130 [http-nio-8081-exec-6] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 08:58:40.130 [http-nio-8081-exec-6] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Nothing to write: null body
2022-08-30 08:58:40.131 [http-nio-8081-exec-6] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 08:58:42.444 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:58:42.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:58:42.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:58:47.028 [http-nio-8081-exec-7] [DEBUG] org.springframework.web.servlet.DispatcherServlet - PUT "/mongouser/630c85aa4afab752d5a4792e", parameters={multipart}
2022-08-30 08:58:47.044 [http-nio-8081-exec-7] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#updateUser(String, MongoUser)
2022-08-30 08:58:47.048 [http-nio-8081-exec-7] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 08:58:47.048 [http-nio-8081-exec-7] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Nothing to write: null body
2022-08-30 08:58:47.051 [http-nio-8081-exec-7] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 08:58:52.444 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:58:52.444 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:58:52.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:59:02.436 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:59:02.436 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:59:02.437 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:59:12.439 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:59:12.439 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:59:12.439 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:59:22.437 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:59:22.437 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:59:22.437 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:59:32.438 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:59:32.438 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:59:32.439 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:59:42.444 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:59:42.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:59:42.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 08:59:52.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 08:59:52.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 08:59:52.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:00:02.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:00:02.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:00:02.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:00:12.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:00:12.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:00:12.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:00:22.444 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:00:22.444 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:00:22.444 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:00:32.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:00:32.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:00:32.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:00:42.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:00:42.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:00:42.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:00:52.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:00:52.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:00:52.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:01:02.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:01:02.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:01:02.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:01:12.438 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:01:12.438 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:01:12.438 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:01:22.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:01:22.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:01:22.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:01:29.688 [http-nio-8081-exec-10] [DEBUG] org.springframework.web.servlet.DispatcherServlet - DELETE "/mongouser/630c85aa4afab752d5a4792e", parameters={}
2022-08-30 09:01:29.689 [http-nio-8081-exec-10] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#deleteUser(String)
2022-08-30 09:01:29.704 [http-nio-8081-exec-10] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 09:01:29.705 [http-nio-8081-exec-10] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Nothing to write: null body
2022-08-30 09:01:29.705 [http-nio-8081-exec-10] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 09:01:32.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:01:32.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:01:32.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:01:42.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:01:42.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:01:42.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:01:52.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:01:52.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:01:52.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:02:02.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:02:02.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:02:02.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:02:12.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:02:12.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:02:12.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:02:22.441 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:02:22.441 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:02:22.441 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:02:32.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:02:32.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:02:32.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:02:42.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:02:42.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:02:42.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:02:52.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:02:52.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:02:52.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:03:02.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:03:02.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:03:02.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:03:12.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:03:12.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:03:12.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:03:22.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:03:22.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:03:22.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:03:32.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:03:32.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:03:32.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:03:42.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:03:42.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:03:42.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:03:52.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:03:52.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:03:52.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:04:02.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:04:02.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:04:02.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:04:12.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:04:12.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:04:12.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:04:22.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:04:22.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:04:22.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:04:32.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:04:32.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:04:32.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:04:42.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:04:42.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:04:42.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:04:52.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:04:52.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:04:52.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:05:02.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:05:02.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:05:02.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:05:12.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:05:12.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:05:12.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:05:22.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:05:22.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:05:22.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:05:32.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:05:32.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:05:32.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:05:42.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:05:42.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:05:42.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:05:52.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:05:52.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:05:52.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:06:02.444 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:06:02.444 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:06:02.444 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:06:12.441 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:06:12.441 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:06:12.441 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:06:22.457 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:06:22.458 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:06:22.458 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:06:32.442 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:06:32.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:06:32.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:06:42.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:06:42.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:06:42.444 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:06:52.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:06:52.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:06:52.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:07:02.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:07:02.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:07:02.444 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:07:12.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:07:12.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:07:12.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:07:22.444 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:07:22.444 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:07:22.444 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:07:32.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:07:32.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:07:32.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:07:42.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:07:42.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:07:42.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:07:52.442 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:07:52.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:07:52.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:08:02.444 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:08:02.444 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:08:02.444 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:08:12.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:08:12.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:08:12.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:08:22.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:08:22.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:08:22.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:08:32.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:08:32.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:08:32.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:08:42.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:08:42.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:08:42.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:08:52.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:08:52.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:08:52.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:09:02.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:09:02.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:09:02.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:09:12.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:09:12.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:09:12.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:09:22.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:09:22.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:09:22.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:09:32.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:09:32.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:09:32.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:09:42.442 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:09:42.442 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:09:42.442 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:09:52.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:09:52.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:09:52.444 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:10:02.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:10:02.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:10:02.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:10:12.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:10:12.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:10:12.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:10:22.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:10:22.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:10:22.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:10:32.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:10:32.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:10:32.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:10:42.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:10:42.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:10:42.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:10:52.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:10:52.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:10:52.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:11:02.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:11:02.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:11:02.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:11:12.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:11:12.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:11:12.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:11:22.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:11:22.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:11:22.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:11:32.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:11:32.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:11:32.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:11:42.442 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:11:42.442 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:11:42.442 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:11:52.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:11:52.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:11:52.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:12:02.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:12:02.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:12:02.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:12:12.441 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:12:12.441 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:12:12.441 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:12:22.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:12:22.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:12:22.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:12:32.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:12:32.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:12:32.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:12:42.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:12:42.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:12:42.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:12:52.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:12:52.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:12:52.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:13:02.442 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:13:02.442 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:13:02.442 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:13:12.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:13:12.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:13:12.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:13:22.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:13:22.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:13:22.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:13:32.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:13:32.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:13:32.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:13:42.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:13:42.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:13:42.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:13:52.441 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:13:52.441 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:13:52.441 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:14:02.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:14:02.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:14:02.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:14:12.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:14:12.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:14:12.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:14:22.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:14:22.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:14:22.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:14:32.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:14:32.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:14:32.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:14:42.442 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:14:42.442 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:14:42.442 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:14:52.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:14:52.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:14:52.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:15:02.441 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:15:02.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:15:02.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:15:12.444 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:15:12.444 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:15:12.444 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:15:22.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:15:22.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:15:22.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:15:32.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:15:32.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:15:32.456 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:15:42.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:15:42.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:15:42.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:15:52.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:15:52.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:15:52.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:16:02.456 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:16:02.456 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:16:02.456 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:16:12.456 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:16:12.456 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:16:12.456 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:16:22.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:16:22.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:16:22.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:16:32.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:16:32.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:16:32.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:16:42.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:16:42.445 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:16:42.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:16:52.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:16:52.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:16:52.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:17:02.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:17:02.444 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:17:02.444 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:17:12.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:17:12.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:17:12.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:17:22.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:17:22.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:17:22.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:17:32.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:17:32.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:17:32.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:17:42.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:17:42.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:17:42.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:17:52.457 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:17:52.457 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:17:52.457 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:18:02.458 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:18:02.458 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:18:02.458 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:18:12.457 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:18:12.457 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:18:12.457 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:18:22.456 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:18:22.456 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:18:22.456 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:18:32.458 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:18:32.459 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:18:32.459 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:18:42.460 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:18:42.460 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:18:42.460 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:18:52.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:18:52.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:18:52.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:19:02.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:19:02.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:19:02.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:19:12.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:19:12.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:19:12.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:19:22.459 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:19:22.459 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:19:22.460 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:19:32.459 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:19:32.459 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:19:32.459 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:19:42.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:19:42.456 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:19:42.456 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:19:52.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:19:52.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:19:52.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:20:02.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:20:02.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:20:02.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:20:12.457 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:20:12.457 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:20:12.457 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:20:22.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:20:22.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:20:22.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:20:32.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:20:32.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:20:32.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:20:42.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:20:42.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:20:42.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:20:52.457 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:20:52.457 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:20:52.457 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:21:02.456 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:21:02.456 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:21:02.456 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:21:12.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:21:12.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:21:12.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:21:22.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:21:22.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:21:22.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:21:32.459 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:21:32.459 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:21:32.459 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:21:42.460 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:21:42.460 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:21:42.460 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:21:52.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:21:52.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:21:52.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:22:02.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:22:02.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:22:02.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:22:12.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:22:12.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:22:12.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:22:22.460 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:22:22.460 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:22:22.460 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:22:32.457 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:22:32.458 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:22:32.458 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:22:42.459 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:22:42.459 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:22:42.459 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:22:52.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:22:52.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:22:52.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:23:02.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:23:02.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:23:02.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:23:12.458 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:23:12.459 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:23:12.459 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:23:22.458 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:23:22.458 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:23:22.458 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:23:32.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:23:32.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:23:32.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:23:42.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:23:42.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:23:42.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:23:52.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:23:52.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:23:52.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:24:02.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:24:02.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:24:02.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:24:12.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:24:12.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:24:12.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:24:22.457 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:24:22.457 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:24:22.457 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:24:32.461 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:24:32.462 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:24:32.462 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:24:42.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:24:42.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:24:42.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:24:52.461 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:24:52.461 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:24:52.461 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:25:02.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:25:02.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:25:02.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:25:12.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:25:12.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:25:12.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:25:22.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:25:22.456 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:25:22.456 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:25:32.461 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:25:32.461 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:25:32.461 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:25:42.459 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:25:42.459 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:25:42.459 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:25:52.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:25:52.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:25:52.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:26:02.457 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:26:02.457 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:26:02.457 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:26:12.461 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:26:12.462 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:26:12.462 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:26:22.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:26:22.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:26:22.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:26:32.459 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:26:32.460 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:26:32.460 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:26:42.457 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:26:42.457 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:26:42.457 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:26:52.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:26:52.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:26:52.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:27:02.458 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:27:02.458 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:27:02.458 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:27:12.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:27:12.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:27:12.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:27:22.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:27:22.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:27:22.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:27:32.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:27:32.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:27:32.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:27:42.459 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:27:42.460 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:27:42.460 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:27:52.461 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:27:52.461 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:27:52.461 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:28:02.456 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:28:02.456 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:28:02.456 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:28:12.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:28:12.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:28:12.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:28:22.446 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:28:22.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:28:22.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:28:32.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:28:32.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:28:32.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:28:42.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:28:42.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:28:42.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:28:52.459 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:28:52.460 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:28:52.460 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:29:02.461 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:29:02.461 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:29:02.461 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:29:12.461 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:29:12.461 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:29:12.461 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:29:22.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:29:22.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:29:22.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:29:32.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:29:32.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:29:32.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:29:42.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:29:42.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:29:42.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:29:52.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:29:52.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:29:52.456 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:30:02.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:30:02.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:30:02.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:30:12.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:30:12.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:30:12.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:30:22.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:30:22.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:30:22.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:30:32.458 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:30:32.458 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:30:32.458 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:30:42.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:30:42.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:30:42.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:30:52.459 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:30:52.459 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:30:52.460 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:31:02.457 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:31:02.457 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:31:02.458 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:31:12.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:31:12.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:31:12.448 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:31:22.449 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:31:22.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:31:22.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:31:32.459 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:31:32.460 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:31:32.460 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:31:42.461 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:31:42.461 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:31:42.461 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:31:52.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:31:52.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:31:52.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:32:02.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:32:02.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:32:02.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:32:12.456 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:32:12.456 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:32:12.457 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:32:22.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:32:22.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:32:22.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:32:32.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:32:32.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:32:32.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:32:42.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:32:42.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:32:42.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:32:52.461 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:32:52.461 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:32:52.461 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:33:02.460 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:33:02.460 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:33:02.460 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:33:12.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:33:12.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:33:12.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:33:22.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:33:22.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:33:22.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:33:32.459 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:33:32.459 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:33:32.459 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:33:42.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:33:42.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:33:42.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:33:52.460 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:33:52.461 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:33:52.461 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:34:02.462 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:34:02.462 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:34:02.462 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:34:12.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:34:12.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:34:12.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:34:22.463 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:34:22.463 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:34:22.463 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:34:32.464 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:34:32.464 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:34:32.464 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:34:42.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:34:42.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:34:42.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:34:52.456 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:34:52.456 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:34:52.456 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:35:02.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:35:02.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:35:02.450 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:35:12.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:35:12.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:35:12.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:35:22.464 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:35:22.464 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:35:22.464 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:35:32.464 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:35:32.464 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:35:32.464 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:35:42.463 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:35:42.463 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:35:42.463 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:35:52.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:35:52.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:35:52.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:36:02.457 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:36:02.458 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:36:02.458 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:36:12.456 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:36:12.456 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:36:12.456 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:36:22.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:36:22.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:36:22.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:36:32.460 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:36:32.460 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:36:32.460 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:36:42.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:36:42.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:36:42.453 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:36:52.464 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:36:52.464 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:36:52.465 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:37:02.462 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:37:02.462 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:37:02.462 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:37:12.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:37:12.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:37:12.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:37:22.457 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:37:22.458 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:37:22.458 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:37:32.458 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:37:32.458 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:37:32.459 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:37:42.466 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:37:42.467 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:37:42.467 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:37:52.451 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:37:52.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:37:52.452 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:38:02.457 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:38:02.458 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:38:02.458 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:38:12.464 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:38:12.464 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:38:12.464 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:38:22.460 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:38:22.460 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:38:22.460 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:38:32.466 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:38:32.467 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:38:32.467 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:38:42.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:38:42.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:38:42.454 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:38:52.466 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:38:52.466 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:38:52.466 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:39:02.458 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:39:02.458 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:39:02.458 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:40:27.532 [kafka-coordinator-heartbeat-thread | test-consumer] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
2022-08-30 09:40:28.240 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Error sending fetch request (sessionId=818117729, epoch=4743) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2022-08-30 09:40:28.832 [lettuce-nioEventLoop-4-1] [INFO ] io.lettuce.core.protocol.CommandHandler - null Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:378)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2022-08-30 09:40:28.941 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:40:28.941 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:40:28.941 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:40:30.969 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:40:30.969 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:40:30.969 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:40:31.120 [lettuce-eventExecutorLoop-1-3] [INFO ] io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was /110.40.220.207:6379
2022-08-30 09:40:31.154 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 09:40:31.155 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 09:40:31.155 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 09:40:31.194 [lettuce-nioEventLoop-4-2] [INFO ] io.lettuce.core.protocol.ReconnectionHandler - Reconnected to 110.40.220.207:6379
2022-08-30 09:40:31.259 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Attempt to heartbeat with Generation{generationId=86, memberId='consumer-test-consumer-1-68722f6f-d66f-4115-b4e3-e51f16dfd6d9', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
2022-08-30 09:40:31.259 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
2022-08-30 09:40:31.260 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Lost previously assigned partitions test-0
2022-08-30 09:40:31.260 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions lost: [test-0]
2022-08-30 09:40:31.261 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions revoked: [test-0]
2022-08-30 09:40:31.261 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 09:40:31.308 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 09:40:31.342 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully joined group with generation Generation{generationId=88, memberId='consumer-test-consumer-1-23e5c7fa-56e0-4e48-bfe3-2c06ef5f0465', protocol='range'}
2022-08-30 09:40:31.342 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Finished assignment for group at generation 88: {consumer-test-consumer-1-23e5c7fa-56e0-4e48-bfe3-2c06ef5f0465=Assignment(partitions=[test-0])}
2022-08-30 09:40:31.377 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully synced group in generation Generation{generationId=88, memberId='consumer-test-consumer-1-23e5c7fa-56e0-4e48-bfe3-2c06ef5f0465', protocol='range'}
2022-08-30 09:40:31.378 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Notifying assignor about the new Assignment(partitions=[test-0])
2022-08-30 09:40:31.378 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Adding newly assigned partitions: test-0
2022-08-30 09:40:31.443 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Setting offset for partition test-0 to the committed offset FetchPosition{offset=73, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[110.40.220.207:9092 (id: 1 rack: null)], epoch=0}}
2022-08-30 09:40:31.444 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions assigned: [test-0]
2022-08-30 09:40:33.000 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:40:33.001 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:40:33.001 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:40:35.028 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:40:35.028 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:40:35.028 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:40:37.074 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:40:37.075 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:40:37.075 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:40:39.130 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:40:39.130 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:40:39.130 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:40:41.148 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:40:41.148 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:40:41.148 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:40:43.181 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:40:43.182 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:40:43.182 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:40:45.210 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:40:45.211 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:40:45.211 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:40:47.247 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:40:47.247 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:40:47.247 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 09:40:52.251 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:40:52.251 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:40:52.251 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 09:41:02.244 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:41:02.244 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:41:02.244 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:41:12.247 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:41:12.248 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:41:12.248 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:41:21.335 [lettuce-nioEventLoop-4-2] [INFO ] io.lettuce.core.protocol.CommandHandler - null Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:378)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2022-08-30 09:41:21.337 [kafka-coordinator-heartbeat-thread | test-consumer] [INFO ] org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Error sending fetch request (sessionId=1516945013, epoch=94) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2022-08-30 09:41:21.337 [kafka-coordinator-heartbeat-thread | test-consumer] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: true. Rediscovery will be attempted.
2022-08-30 09:41:21.415 [lettuce-eventExecutorLoop-1-4] [INFO ] io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was /110.40.220.207:6379
2022-08-30 09:41:21.460 [lettuce-nioEventLoop-4-3] [INFO ] io.lettuce.core.protocol.ReconnectionHandler - Reconnected to 110.40.220.207:6379
2022-08-30 09:41:21.540 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 09:41:22.245 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:41:22.245 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:41:22.245 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:41:32.230 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:41:32.230 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:41:32.230 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:41:42.206 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:41:42.207 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:41:42.207 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:41:52.188 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:41:52.188 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:41:52.189 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:42:02.169 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:42:02.170 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:42:02.170 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:42:12.151 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:42:12.152 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:42:12.152 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:42:22.142 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:42:22.142 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:42:22.142 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:42:32.117 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:42:32.117 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:42:32.117 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:42:42.092 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:42:42.093 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:42:42.093 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:42:52.080 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:42:52.081 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:42:52.081 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:44:53.791 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Error sending fetch request (sessionId=832693870, epoch=181) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2022-08-30 09:44:53.791 [lettuce-nioEventLoop-4-3] [INFO ] io.lettuce.core.protocol.CommandHandler - null Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:378)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2022-08-30 09:44:53.797 [kafka-coordinator-heartbeat-thread | test-consumer] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: true. Rediscovery will be attempted.
2022-08-30 09:44:53.828 [lettuce-eventExecutorLoop-1-5] [INFO ] io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was /110.40.220.207:6379
2022-08-30 09:44:53.894 [lettuce-nioEventLoop-4-4] [INFO ] io.lettuce.core.protocol.ReconnectionHandler - Reconnected to 110.40.220.207:6379
2022-08-30 09:44:54.026 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 09:44:54.117 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Attempt to heartbeat with Generation{generationId=88, memberId='consumer-test-consumer-1-23e5c7fa-56e0-4e48-bfe3-2c06ef5f0465', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
2022-08-30 09:44:54.117 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
2022-08-30 09:44:54.118 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Lost previously assigned partitions test-0
2022-08-30 09:44:54.118 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions lost: [test-0]
2022-08-30 09:44:54.118 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions revoked: [test-0]
2022-08-30 09:44:54.118 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 09:44:54.157 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 09:44:54.189 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully joined group with generation Generation{generationId=90, memberId='consumer-test-consumer-1-b58a1315-bd44-4cd6-9ff5-05dc787c00f1', protocol='range'}
2022-08-30 09:44:54.190 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Finished assignment for group at generation 90: {consumer-test-consumer-1-b58a1315-bd44-4cd6-9ff5-05dc787c00f1=Assignment(partitions=[test-0])}
2022-08-30 09:44:54.224 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully synced group in generation Generation{generationId=90, memberId='consumer-test-consumer-1-b58a1315-bd44-4cd6-9ff5-05dc787c00f1', protocol='range'}
2022-08-30 09:44:54.224 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Notifying assignor about the new Assignment(partitions=[test-0])
2022-08-30 09:44:54.224 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Adding newly assigned partitions: test-0
2022-08-30 09:44:54.287 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Setting offset for partition test-0 to the committed offset FetchPosition{offset=73, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[110.40.220.207:9092 (id: 1 rack: null)], epoch=0}}
2022-08-30 09:44:54.288 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions assigned: [test-0]
2022-08-30 09:44:57.491 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:44:57.491 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:44:57.491 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:44:59.519 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:44:59.520 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:44:59.520 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:45:01.553 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:45:01.554 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:45:01.554 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:45:03.598 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:45:03.599 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:45:03.599 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:45:05.624 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:45:05.625 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:45:05.625 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:45:07.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:45:07.660 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:45:07.660 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:45:09.693 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:45:09.693 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:45:09.693 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 09:45:11.725 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:45:11.725 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:45:11.725 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 09:45:13.759 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:45:13.760 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:45:13.760 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 09:45:15.774 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:45:15.774 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:45:15.774 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 09:45:17.798 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:45:17.799 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:45:17.799 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 09:45:19.822 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:45:19.823 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:45:19.823 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 09:45:21.843 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:45:21.843 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:45:21.843 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 09:45:23.887 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:45:23.888 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:45:23.888 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 09:45:25.918 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:45:25.919 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:45:25.919 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 09:45:31.861 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:45:31.861 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:45:31.861 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:45:41.874 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:45:41.874 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:45:41.874 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:45:43.151 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Error sending fetch request (sessionId=813910112, epoch=91) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2022-08-30 09:45:43.151 [kafka-coordinator-heartbeat-thread | test-consumer] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: true. Rediscovery will be attempted.
2022-08-30 09:45:43.151 [lettuce-nioEventLoop-4-4] [INFO ] io.lettuce.core.protocol.CommandHandler - null Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:378)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2022-08-30 09:45:43.237 [lettuce-eventExecutorLoop-1-6] [INFO ] io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was /110.40.220.207:6379
2022-08-30 09:45:43.299 [lettuce-nioEventLoop-4-5] [INFO ] io.lettuce.core.protocol.ReconnectionHandler - Reconnected to 110.40.220.207:6379
2022-08-30 09:45:43.361 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 09:45:51.852 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:45:51.852 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:45:51.852 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:46:01.827 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:46:01.828 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:46:01.828 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:46:11.822 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:46:11.822 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:46:11.822 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:46:21.801 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:46:21.801 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:46:21.801 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:46:31.783 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:46:31.783 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:46:31.784 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:46:41.759 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:46:41.759 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:46:41.759 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:46:51.752 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:46:51.752 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:46:51.753 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:47:01.729 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:47:01.729 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:47:01.729 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:47:11.718 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:47:11.719 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:47:11.719 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:47:22.710 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:47:22.710 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:47:22.710 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:48:41.646 [kafka-coordinator-heartbeat-thread | test-consumer] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: null.isDisconnected: true. Rediscovery will be attempted.
2022-08-30 09:48:41.646 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Error sending fetch request (sessionId=1925528863, epoch=186) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2022-08-30 09:48:41.757 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [WARN ] org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Connection to node 1 (/110.40.220.207:9092) could not be established. Broker may not be available.
2022-08-30 09:48:41.917 [lettuce-nioEventLoop-4-5] [INFO ] io.lettuce.core.protocol.CommandHandler - null Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:378)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2022-08-30 09:48:41.953 [lettuce-eventExecutorLoop-1-7] [INFO ] io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was /110.40.220.207:6379
2022-08-30 09:48:42.014 [lettuce-nioEventLoop-4-6] [INFO ] io.lettuce.core.protocol.ReconnectionHandler - Reconnected to 110.40.220.207:6379
2022-08-30 09:48:42.028 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:48:42.028 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:48:42.029 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:48:44.055 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:48:44.055 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:48:44.055 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:48:44.235 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 09:48:44.337 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Attempt to heartbeat with Generation{generationId=90, memberId='consumer-test-consumer-1-b58a1315-bd44-4cd6-9ff5-05dc787c00f1', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
2022-08-30 09:48:44.337 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
2022-08-30 09:48:44.337 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Lost previously assigned partitions test-0
2022-08-30 09:48:44.337 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions lost: [test-0]
2022-08-30 09:48:44.337 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions revoked: [test-0]
2022-08-30 09:48:44.338 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 09:48:44.365 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 09:48:44.393 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully joined group with generation Generation{generationId=92, memberId='consumer-test-consumer-1-dd860db4-2447-4614-8266-7520cee33bf1', protocol='range'}
2022-08-30 09:48:44.393 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Finished assignment for group at generation 92: {consumer-test-consumer-1-dd860db4-2447-4614-8266-7520cee33bf1=Assignment(partitions=[test-0])}
2022-08-30 09:48:44.422 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully synced group in generation Generation{generationId=92, memberId='consumer-test-consumer-1-dd860db4-2447-4614-8266-7520cee33bf1', protocol='range'}
2022-08-30 09:48:44.422 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Notifying assignor about the new Assignment(partitions=[test-0])
2022-08-30 09:48:44.422 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Adding newly assigned partitions: test-0
2022-08-30 09:48:44.476 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Setting offset for partition test-0 to the committed offset FetchPosition{offset=73, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[110.40.220.207:9092 (id: 1 rack: null)], epoch=0}}
2022-08-30 09:48:44.476 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions assigned: [test-0]
2022-08-30 09:48:46.108 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:48:46.109 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:48:46.109 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:48:48.158 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:48:48.158 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:48:48.158 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:48:50.177 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:48:50.177 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:48:50.178 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:48:52.220 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:48:52.221 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:48:52.221 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:48:54.284 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:48:54.284 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:48:54.285 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:48:56.317 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:48:56.318 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:48:56.318 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:48:58.351 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:48:58.351 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:48:58.351 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:49:01.489 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:49:01.489 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:49:01.489 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 09:49:11.498 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:49:11.498 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:49:11.498 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 09:49:21.467 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:49:21.467 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:49:21.467 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:49:30.662 [lettuce-nioEventLoop-4-6] [INFO ] io.lettuce.core.protocol.CommandHandler - null Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:378)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2022-08-30 09:49:30.662 [kafka-coordinator-heartbeat-thread | test-consumer] [INFO ] org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Error sending fetch request (sessionId=894485908, epoch=85) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2022-08-30 09:49:30.663 [kafka-coordinator-heartbeat-thread | test-consumer] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: true. Rediscovery will be attempted.
2022-08-30 09:49:30.712 [lettuce-eventExecutorLoop-1-8] [INFO ] io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was /110.40.220.207:6379
2022-08-30 09:49:30.757 [lettuce-nioEventLoop-4-7] [INFO ] io.lettuce.core.protocol.ReconnectionHandler - Reconnected to 110.40.220.207:6379
2022-08-30 09:49:30.848 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 09:49:31.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:49:31.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:49:31.455 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:49:41.434 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:49:41.435 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:49:41.435 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:49:51.402 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:49:51.402 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:49:51.402 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:50:01.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:50:01.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:50:01.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:50:11.361 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:50:11.362 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:50:11.362 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:50:21.348 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:50:21.348 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:50:21.348 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:50:31.325 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:50:31.325 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:50:31.325 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:50:41.304 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:50:41.304 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:50:41.304 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:50:51.283 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:50:51.283 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:50:51.283 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:51:01.261 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:51:01.261 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:51:01.261 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:52:35.548 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:52:35.549 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:52:35.549 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:52:35.702 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Error sending fetch request (sessionId=864154786, epoch=190) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2022-08-30 09:52:35.702 [lettuce-nioEventLoop-4-7] [INFO ] io.lettuce.core.protocol.CommandHandler - null Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:378)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2022-08-30 09:52:35.702 [kafka-coordinator-heartbeat-thread | test-consumer] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: true. Rediscovery will be attempted.
2022-08-30 09:52:35.810 [lettuce-eventExecutorLoop-1-9] [INFO ] io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was /110.40.220.207:6379
2022-08-30 09:52:35.869 [lettuce-nioEventLoop-4-8] [INFO ] io.lettuce.core.protocol.ReconnectionHandler - Reconnected to 110.40.220.207:6379
2022-08-30 09:52:35.920 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 09:52:36.010 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Attempt to heartbeat with Generation{generationId=92, memberId='consumer-test-consumer-1-dd860db4-2447-4614-8266-7520cee33bf1', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
2022-08-30 09:52:36.010 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
2022-08-30 09:52:36.010 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Lost previously assigned partitions test-0
2022-08-30 09:52:36.011 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions lost: [test-0]
2022-08-30 09:52:36.011 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions revoked: [test-0]
2022-08-30 09:52:36.011 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 09:52:36.039 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 09:52:36.072 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully joined group with generation Generation{generationId=94, memberId='consumer-test-consumer-1-4464187f-f5ba-4813-9584-88497d01158a', protocol='range'}
2022-08-30 09:52:36.072 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Finished assignment for group at generation 94: {consumer-test-consumer-1-4464187f-f5ba-4813-9584-88497d01158a=Assignment(partitions=[test-0])}
2022-08-30 09:52:36.105 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully synced group in generation Generation{generationId=94, memberId='consumer-test-consumer-1-4464187f-f5ba-4813-9584-88497d01158a', protocol='range'}
2022-08-30 09:52:36.106 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Notifying assignor about the new Assignment(partitions=[test-0])
2022-08-30 09:52:36.106 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Adding newly assigned partitions: test-0
2022-08-30 09:52:36.162 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Setting offset for partition test-0 to the committed offset FetchPosition{offset=73, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[110.40.220.207:9092 (id: 1 rack: null)], epoch=0}}
2022-08-30 09:52:36.162 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions assigned: [test-0]
2022-08-30 09:52:37.560 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:52:37.561 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:52:37.561 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:52:39.623 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:52:39.624 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:52:39.624 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:52:41.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:52:41.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:52:41.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.69.167:8081/monitor, healthUrl=http://192.168.69.167:8081/monitor/health, serviceUrl=http://192.168.69.167:8081/)] as "application/json"
2022-08-30 09:52:43.710 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:52:43.711 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:52:43.711 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.69.167:8081/monitor, healthUrl=http://192.168.69.167:8081/monitor/health, serviceUrl=http://192.168.69.167:8081/)] as "application/json"
2022-08-30 09:52:45.741 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:52:45.741 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:52:45.742 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.69.167:8081/monitor, healthUrl=http://192.168.69.167:8081/monitor/health, serviceUrl=http://192.168.69.167:8081/)] as "application/json"
2022-08-30 09:52:47.785 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:52:47.785 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:52:47.785 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.69.167:8081/monitor, healthUrl=http://192.168.69.167:8081/monitor/health, serviceUrl=http://192.168.69.167:8081/)] as "application/json"
2022-08-30 09:52:49.811 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:52:49.812 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:52:49.812 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.69.167:8081/monitor, healthUrl=http://192.168.69.167:8081/monitor/health, serviceUrl=http://192.168.69.167:8081/)] as "application/json"
2022-08-30 09:52:51.831 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:52:51.832 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:52:51.832 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.69.167:8081/monitor, healthUrl=http://192.168.69.167:8081/monitor/health, serviceUrl=http://192.168.69.167:8081/)] as "application/json"
2022-08-30 09:52:53.872 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:52:53.872 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:52:53.872 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 09:52:55.907 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:52:55.907 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:52:55.907 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 09:53:01.043 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:53:01.044 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:53:01.044 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 09:53:11.043 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:53:11.043 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:53:11.043 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:53:21.043 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:53:21.044 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:53:21.044 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:53:24.811 [lettuce-nioEventLoop-4-8] [INFO ] io.lettuce.core.protocol.CommandHandler - null Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:378)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2022-08-30 09:53:24.813 [kafka-coordinator-heartbeat-thread | test-consumer] [INFO ] org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Error sending fetch request (sessionId=2006777548, epoch=90) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2022-08-30 09:53:24.813 [kafka-coordinator-heartbeat-thread | test-consumer] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: true. Rediscovery will be attempted.
2022-08-30 09:53:24.902 [lettuce-eventExecutorLoop-1-10] [INFO ] io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was /110.40.220.207:6379
2022-08-30 09:53:24.952 [lettuce-nioEventLoop-4-9] [INFO ] io.lettuce.core.protocol.ReconnectionHandler - Reconnected to 110.40.220.207:6379
2022-08-30 09:53:25.014 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 09:53:31.032 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:53:31.032 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:53:31.033 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:53:41.025 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:53:41.026 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:53:41.026 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:53:51.018 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:53:51.018 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:53:51.018 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:54:01.018 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:54:01.018 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:54:01.019 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:54:11.001 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:54:11.001 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:54:11.001 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:54:20.998 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:54:20.998 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:54:20.998 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:54:30.991 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:54:30.991 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:54:30.992 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:54:40.998 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:54:40.999 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:54:40.999 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:54:50.980 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:54:50.981 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:54:50.981 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:55:00.987 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:55:00.988 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:55:00.988 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:56:59.760 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Error sending fetch request (sessionId=2094893906, epoch=189) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2022-08-30 09:56:59.760 [kafka-coordinator-heartbeat-thread | test-consumer] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: true. Rediscovery will be attempted.
2022-08-30 09:56:59.760 [lettuce-nioEventLoop-4-9] [INFO ] io.lettuce.core.protocol.CommandHandler - null Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:378)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2022-08-30 09:56:59.831 [lettuce-eventExecutorLoop-1-11] [INFO ] io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was /110.40.220.207:6379
2022-08-30 09:56:59.890 [lettuce-nioEventLoop-4-10] [INFO ] io.lettuce.core.protocol.ReconnectionHandler - Reconnected to 110.40.220.207:6379
2022-08-30 09:57:00.006 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 09:57:00.109 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Attempt to heartbeat with Generation{generationId=94, memberId='consumer-test-consumer-1-4464187f-f5ba-4813-9584-88497d01158a', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
2022-08-30 09:57:00.109 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
2022-08-30 09:57:00.109 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Lost previously assigned partitions test-0
2022-08-30 09:57:00.110 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions lost: [test-0]
2022-08-30 09:57:00.110 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions revoked: [test-0]
2022-08-30 09:57:00.110 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 09:57:00.138 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 09:57:00.168 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully joined group with generation Generation{generationId=96, memberId='consumer-test-consumer-1-32caf8b9-dc59-44c2-bcaa-112b6a26c68b', protocol='range'}
2022-08-30 09:57:00.169 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Finished assignment for group at generation 96: {consumer-test-consumer-1-32caf8b9-dc59-44c2-bcaa-112b6a26c68b=Assignment(partitions=[test-0])}
2022-08-30 09:57:00.199 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully synced group in generation Generation{generationId=96, memberId='consumer-test-consumer-1-32caf8b9-dc59-44c2-bcaa-112b6a26c68b', protocol='range'}
2022-08-30 09:57:00.200 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Notifying assignor about the new Assignment(partitions=[test-0])
2022-08-30 09:57:00.200 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Adding newly assigned partitions: test-0
2022-08-30 09:57:00.258 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Setting offset for partition test-0 to the committed offset FetchPosition{offset=73, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[110.40.220.207:9092 (id: 1 rack: null)], epoch=0}}
2022-08-30 09:57:00.258 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions assigned: [test-0]
2022-08-30 09:57:05.021 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:57:05.022 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:57:05.022 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:57:07.057 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:57:07.057 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:57:07.058 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:57:09.089 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:57:09.090 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:57:09.090 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:57:11.124 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:57:11.124 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:57:11.124 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:57:13.157 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:57:13.158 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:57:13.158 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:57:15.169 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:57:15.170 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:57:15.170 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:57:17.223 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:57:17.223 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:57:17.224 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 09:57:19.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:57:19.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:57:19.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 09:57:21.330 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:57:21.331 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:57:21.331 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 09:57:23.357 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:57:23.357 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:57:23.358 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 09:57:25.369 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:57:25.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:57:25.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 09:57:27.408 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:57:27.408 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:57:27.409 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 09:57:29.440 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:57:29.441 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:57:29.441 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 09:57:31.471 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:57:31.472 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:57:31.472 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 09:57:33.514 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:57:33.515 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:57:33.515 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 09:57:40.772 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:57:40.772 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:57:40.772 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:57:50.766 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:57:50.766 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:57:50.766 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:58:00.774 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:58:00.775 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:58:00.775 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:58:10.764 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:58:10.764 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:58:10.764 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:58:18.775 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Error sending fetch request (sessionId=1052498422, epoch=136) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2022-08-30 09:58:18.774 [lettuce-nioEventLoop-4-10] [INFO ] io.lettuce.core.protocol.CommandHandler - null Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:378)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2022-08-30 09:58:18.776 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: null.isDisconnected: true. Rediscovery will be attempted.
2022-08-30 09:58:18.837 [lettuce-eventExecutorLoop-1-1] [INFO ] io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was /110.40.220.207:6379
2022-08-30 09:58:18.880 [lettuce-nioEventLoop-4-11] [INFO ] io.lettuce.core.protocol.ReconnectionHandler - Reconnected to 110.40.220.207:6379
2022-08-30 09:58:18.983 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 09:58:20.778 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:58:20.779 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:58:20.779 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:58:30.761 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:58:30.761 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:58:30.761 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:58:40.774 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:58:40.774 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:58:40.774 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:58:50.768 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:58:50.769 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:58:50.769 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:59:00.771 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:59:00.771 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:59:00.771 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:59:10.767 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:59:10.768 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:59:10.768 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 09:59:20.772 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 09:59:20.772 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 09:59:20.772 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:01:23.796 [lettuce-nioEventLoop-4-11] [INFO ] io.lettuce.core.protocol.CommandHandler - null Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:378)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2022-08-30 10:01:23.797 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Error sending fetch request (sessionId=1484972258, epoch=131) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2022-08-30 10:01:23.798 [kafka-coordinator-heartbeat-thread | test-consumer] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: true. Rediscovery will be attempted.
2022-08-30 10:01:23.820 [lettuce-eventExecutorLoop-1-12] [INFO ] io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was /110.40.220.207:6379
2022-08-30 10:01:23.874 [lettuce-nioEventLoop-4-12] [INFO ] io.lettuce.core.protocol.ReconnectionHandler - Reconnected to 110.40.220.207:6379
2022-08-30 10:01:24.051 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 10:01:24.130 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Attempt to heartbeat with Generation{generationId=96, memberId='consumer-test-consumer-1-32caf8b9-dc59-44c2-bcaa-112b6a26c68b', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
2022-08-30 10:01:24.130 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
2022-08-30 10:01:24.131 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Lost previously assigned partitions test-0
2022-08-30 10:01:24.131 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions lost: [test-0]
2022-08-30 10:01:24.131 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions revoked: [test-0]
2022-08-30 10:01:24.131 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 10:01:24.159 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 10:01:24.186 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully joined group with generation Generation{generationId=98, memberId='consumer-test-consumer-1-01f062ef-b1ed-4a45-ad30-1ab57b5a744d', protocol='range'}
2022-08-30 10:01:24.186 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Finished assignment for group at generation 98: {consumer-test-consumer-1-01f062ef-b1ed-4a45-ad30-1ab57b5a744d=Assignment(partitions=[test-0])}
2022-08-30 10:01:24.221 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully synced group in generation Generation{generationId=98, memberId='consumer-test-consumer-1-01f062ef-b1ed-4a45-ad30-1ab57b5a744d', protocol='range'}
2022-08-30 10:01:24.221 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Notifying assignor about the new Assignment(partitions=[test-0])
2022-08-30 10:01:24.221 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Adding newly assigned partitions: test-0
2022-08-30 10:01:24.279 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Setting offset for partition test-0 to the committed offset FetchPosition{offset=73, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[110.40.220.207:9092 (id: 1 rack: null)], epoch=0}}
2022-08-30 10:01:24.279 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions assigned: [test-0]
2022-08-30 10:01:24.650 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:01:24.650 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:01:24.650 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:01:26.679 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:01:26.679 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:01:26.680 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:01:28.702 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:01:28.702 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:01:28.703 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:01:30.725 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:01:30.725 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:01:30.725 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:01:32.761 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:01:32.762 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:01:32.762 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:01:34.816 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:01:34.816 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:01:34.816 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:01:36.849 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:01:36.849 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:01:36.849 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:01:38.889 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:01:38.890 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:01:38.890 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:01:40.918 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:01:40.919 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:01:40.919 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:01:42.942 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:01:42.942 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:01:42.942 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 10:01:44.973 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:01:44.974 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:01:44.974 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 10:01:47.003 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:01:47.004 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:01:47.004 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 10:01:49.052 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:01:49.053 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:01:49.053 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 10:01:51.083 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:01:51.084 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:01:51.084 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 10:01:53.107 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:01:53.108 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:01:53.108 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 10:02:00.557 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:02:00.557 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:02:00.557 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:02:10.557 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:02:10.557 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:02:10.558 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:02:12.930 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Error sending fetch request (sessionId=260167577, epoch=90) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2022-08-30 10:02:12.929 [lettuce-nioEventLoop-4-12] [INFO ] io.lettuce.core.protocol.CommandHandler - null Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:378)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2022-08-30 10:02:12.931 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: true. Rediscovery will be attempted.
2022-08-30 10:02:13.025 [lettuce-eventExecutorLoop-1-2] [INFO ] io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was /110.40.220.207:6379
2022-08-30 10:02:13.069 [lettuce-nioEventLoop-4-1] [INFO ] io.lettuce.core.protocol.ReconnectionHandler - Reconnected to 110.40.220.207:6379
2022-08-30 10:02:13.122 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 10:02:20.559 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:02:20.559 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:02:20.559 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:02:30.561 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:02:30.561 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:02:30.561 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:02:40.550 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:02:40.550 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:02:40.550 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:02:50.562 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:02:50.563 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:02:50.563 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:03:00.558 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:03:00.558 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:03:00.559 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:03:10.560 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:03:10.561 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:03:10.561 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:03:20.560 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:03:20.561 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:03:20.561 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:03:30.554 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:03:30.555 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:03:30.555 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:03:40.550 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:03:40.551 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:03:40.551 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:03:50.555 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:03:50.556 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:03:50.556 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:04:00.551 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:04:00.551 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:04:00.551 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:04:10.554 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:04:10.555 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:04:10.555 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:04:20.563 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:04:20.563 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:04:20.563 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:04:30.563 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:04:30.564 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:04:30.564 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:04:40.560 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:04:40.561 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:04:40.561 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:04:50.561 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:04:50.561 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:04:50.561 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:05:00.554 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:05:00.555 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:05:00.555 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:05:10.558 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:05:10.558 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:05:10.558 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:05:20.556 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:05:20.557 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:05:20.557 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:05:30.554 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:05:30.555 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:05:30.555 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:05:40.550 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:05:40.550 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:05:40.550 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:05:50.561 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:05:50.561 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:05:50.561 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:06:00.562 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:06:00.563 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:06:00.563 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:06:10.563 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:06:10.563 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:06:10.563 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:06:20.555 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:06:20.556 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:06:20.556 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:06:30.561 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:06:30.561 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:06:30.561 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:06:40.559 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:06:40.560 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:06:40.560 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:06:50.563 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:06:50.564 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:06:50.564 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:07:00.557 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:07:00.557 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:07:00.557 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:07:10.555 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:07:10.555 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:07:10.555 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:07:20.551 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:07:20.552 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:07:20.552 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:07:30.561 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:07:30.561 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:07:30.562 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:07:40.561 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:07:40.562 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:07:40.562 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:07:50.568 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:07:50.568 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:07:50.568 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:08:00.572 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:08:00.572 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:08:00.572 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:08:10.567 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:08:10.567 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:08:10.567 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:08:20.569 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:08:20.570 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:08:20.570 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:08:30.582 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:08:30.583 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:08:30.583 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:08:40.574 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:08:40.574 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:08:40.575 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:08:50.577 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:08:50.578 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:08:50.578 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:09:00.586 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:09:00.586 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:09:00.587 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:09:10.595 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:09:10.595 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:09:10.595 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:09:20.601 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:09:20.602 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:09:20.602 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:09:30.590 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:09:30.590 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:09:30.590 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:09:40.605 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:09:40.605 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:09:40.605 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:09:50.609 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:09:50.609 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:09:50.609 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:10:00.612 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:10:00.612 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:10:00.612 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:10:10.617 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:10:10.617 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:10:10.617 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:10:20.608 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:10:20.608 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:10:20.608 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:10:30.623 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:10:30.623 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:10:30.623 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:10:40.624 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:10:40.624 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:10:40.625 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:10:50.629 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:10:50.629 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:10:50.629 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:11:00.621 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:11:00.622 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:11:00.622 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:11:10.634 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:11:10.635 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:11:10.635 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:11:20.632 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:11:20.632 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:11:20.632 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:11:30.633 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:11:30.634 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:11:30.634 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:11:40.648 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:11:40.648 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:11:40.649 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:11:50.651 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:11:50.651 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:11:50.651 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:12:00.648 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:12:00.648 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:12:00.648 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:12:10.645 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:12:10.646 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:12:10.646 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:12:20.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:12:20.660 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:12:20.660 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:12:30.661 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:12:30.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:12:30.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:12:40.660 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:12:40.661 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:12:40.661 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:12:50.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:12:50.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:12:50.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:13:00.660 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:13:00.660 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:13:00.660 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:13:10.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:13:10.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:13:10.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:13:20.661 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:13:20.661 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:13:20.661 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:13:30.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:13:30.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:13:30.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:13:40.654 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:13:40.654 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:13:40.654 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:13:50.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:13:50.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:13:50.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:14:00.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:14:00.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:14:00.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:14:10.657 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:14:10.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:14:10.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:14:20.657 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:14:20.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:14:20.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:14:30.652 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:14:30.653 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:14:30.653 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:14:40.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:14:40.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:14:40.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:14:50.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:14:50.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:14:50.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:15:00.655 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:15:00.655 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:15:00.655 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:15:10.654 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:15:10.654 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:15:10.654 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:15:20.651 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:15:20.652 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:15:20.652 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:15:30.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:15:30.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:15:30.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:15:40.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:15:40.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:15:40.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:15:50.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:15:50.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:15:50.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:16:00.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:16:00.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:16:00.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:16:10.660 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:16:10.661 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:16:10.661 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:16:20.657 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:16:20.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:16:20.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:16:30.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:16:30.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:16:30.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:16:40.653 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:16:40.653 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:16:40.653 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:16:50.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:16:50.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:16:50.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:17:00.656 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:17:00.657 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:17:00.657 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:17:10.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:17:10.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:17:10.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:17:20.653 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:17:20.653 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:17:20.654 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:17:30.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:17:30.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:17:30.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:17:40.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:17:40.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:17:40.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:17:50.652 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:17:50.652 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:17:50.652 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:18:00.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:18:00.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:18:00.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:18:10.654 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:18:10.654 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:18:10.654 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:18:20.654 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:18:20.654 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:18:20.654 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:18:30.653 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:18:30.654 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:18:30.654 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:18:40.650 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:18:40.651 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:18:40.651 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:18:50.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:18:50.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:18:50.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:19:00.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:19:00.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:19:00.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:19:10.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:19:10.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:19:10.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:19:20.654 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:19:20.654 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:19:20.654 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:19:30.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:19:30.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:19:30.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:19:40.652 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:19:40.652 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:19:40.652 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:19:50.660 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:19:50.660 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:19:50.660 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:20:00.653 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:20:00.654 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:20:00.654 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:20:10.654 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:20:10.654 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:20:10.654 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:20:20.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:20:20.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:20:20.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:20:30.656 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:20:30.657 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:20:30.657 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:20:40.660 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:20:40.660 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:20:40.661 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:20:50.656 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:20:50.656 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:20:50.657 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:21:00.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:21:00.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:21:00.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:21:10.656 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:21:10.656 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:21:10.656 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:21:20.654 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:21:20.654 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:21:20.654 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:21:30.655 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:21:30.655 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:21:30.655 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:21:40.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:21:40.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:21:40.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:21:50.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:21:50.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:21:50.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:22:00.654 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:22:00.654 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:22:00.654 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:22:10.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:22:10.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:22:10.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:22:20.656 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:22:20.657 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:22:20.657 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:22:30.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:22:30.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:22:30.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:22:40.656 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:22:40.656 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:22:40.657 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:22:50.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:22:50.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:22:50.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:23:00.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:23:00.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:23:00.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:23:10.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:23:10.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:23:10.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:23:20.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:23:20.668 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:23:20.668 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:23:30.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:23:30.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:23:30.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:23:40.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:23:40.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:23:40.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:23:50.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:23:50.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:23:50.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:24:00.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:24:00.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:24:00.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:24:10.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:24:10.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:24:10.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:24:20.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:24:20.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:24:20.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:24:30.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:24:30.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:24:30.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:24:40.661 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:24:40.661 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:24:40.661 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:24:50.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:24:50.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:24:50.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:25:00.661 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:25:00.661 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:25:00.661 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:25:10.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:25:10.668 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:25:10.668 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:25:20.668 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:25:20.668 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:25:20.668 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:25:30.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:25:30.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:25:30.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:25:40.668 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:25:40.668 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:25:40.668 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:25:50.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:25:50.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:25:50.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:26:00.657 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:26:00.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:26:00.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:26:10.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:26:10.660 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:26:10.660 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:26:20.661 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:26:20.661 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:26:20.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:26:30.672 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:26:30.672 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:26:30.672 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:26:40.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:26:40.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:26:40.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:26:50.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:26:50.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:26:50.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:27:00.657 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:27:00.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:27:00.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:27:10.669 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:27:10.669 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:27:10.669 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:27:20.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:27:20.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:27:20.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:27:30.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:27:30.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:27:30.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:27:40.669 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:27:40.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:27:40.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:27:50.657 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:27:50.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:27:50.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:28:00.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:28:00.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:28:00.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:28:10.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:28:10.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:28:10.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:28:20.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:28:20.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:28:20.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:28:30.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:28:30.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:28:30.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:28:40.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:28:40.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:28:40.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:28:50.656 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:28:50.657 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:28:50.657 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:29:00.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:29:00.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:29:00.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:29:10.669 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:29:10.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:29:10.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:29:20.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:29:20.668 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:29:20.668 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:29:30.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:29:30.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:29:30.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:29:40.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:29:40.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:29:40.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:29:50.661 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:29:50.661 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:29:50.661 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:30:00.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:30:00.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:30:00.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:30:10.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:30:10.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:30:10.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:30:20.656 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:30:20.657 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:30:20.657 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:30:30.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:30:30.668 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:30:30.668 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:30:40.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:30:40.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:30:40.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:30:50.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:30:50.672 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:30:50.672 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:31:00.656 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:31:00.657 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:31:00.657 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:31:10.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:31:10.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:31:10.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:31:20.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:31:20.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:31:20.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:31:30.669 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:31:30.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:31:30.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:31:40.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:31:40.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:31:40.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:31:50.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:31:50.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:31:50.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:32:00.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:32:00.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:32:00.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:32:10.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:32:10.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:32:10.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:32:20.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:32:20.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:32:20.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:32:30.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:32:30.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:32:30.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:32:40.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:32:40.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:32:40.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:32:50.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:32:50.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:32:50.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:33:00.660 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:33:00.660 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:33:00.661 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:33:10.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:33:10.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:33:10.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:33:20.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:33:20.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:33:20.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:33:30.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:33:30.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:33:30.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:33:40.668 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:33:40.669 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:33:40.669 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:33:50.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:33:50.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:33:50.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:34:00.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:34:00.672 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:34:00.672 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:34:10.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:34:10.660 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:34:10.660 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:34:20.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:34:20.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:34:20.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:34:30.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:34:30.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:34:30.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:34:40.660 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:34:40.661 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:34:40.661 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:34:50.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:34:50.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:34:50.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:35:00.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:35:00.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:35:00.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:35:10.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:35:10.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:35:10.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:35:20.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:35:20.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:35:20.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:35:30.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:35:30.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:35:30.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:35:40.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:35:40.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:35:40.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:35:50.657 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:35:50.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:35:50.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:36:00.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:36:00.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:36:00.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:36:10.657 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:36:10.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:36:10.658 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:36:20.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:36:20.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:36:20.660 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:36:30.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:36:30.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:36:30.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:36:40.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:36:40.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:36:40.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:36:50.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:36:50.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:36:50.672 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:37:00.660 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:37:00.660 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:37:00.661 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:37:10.668 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:37:10.669 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:37:10.669 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:37:20.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:37:20.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:37:20.659 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:37:30.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:37:30.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:37:30.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:37:40.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:37:40.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:37:40.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:37:50.674 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:37:50.674 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:37:50.674 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:38:00.674 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:38:00.674 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:38:00.674 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:38:10.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:38:10.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:38:10.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:38:20.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:38:20.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:38:20.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:38:30.669 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:38:30.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:38:30.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:38:40.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:38:40.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:38:40.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:38:50.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:38:50.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:38:50.672 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:39:00.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:39:00.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:39:00.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:39:10.669 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:39:10.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:39:10.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:39:20.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:39:20.672 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:39:20.672 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:39:30.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:39:30.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:39:30.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:39:40.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:39:40.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:39:40.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:39:50.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:39:50.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:39:50.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:40:00.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:40:00.672 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:40:00.672 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:40:10.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:40:10.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:40:10.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:40:20.668 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:40:20.668 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:40:20.668 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:40:30.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:40:30.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:40:30.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:40:40.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:40:40.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:40:40.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:40:50.672 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:40:50.672 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:40:50.672 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:41:00.673 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:41:00.673 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:41:00.673 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:41:10.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:41:10.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:41:10.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:41:20.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:41:20.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:41:20.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:41:30.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:41:30.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:41:30.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:41:40.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:41:40.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:41:40.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:41:50.677 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:41:50.677 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:41:50.677 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:42:00.672 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:42:00.672 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:42:00.672 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:42:10.676 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:42:10.676 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:42:10.676 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:42:20.674 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:42:20.674 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:42:20.674 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:42:30.675 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:42:30.675 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:42:30.675 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:42:40.673 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:42:40.673 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:42:40.674 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:42:50.672 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:42:50.673 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:42:50.673 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:43:00.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:43:00.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:43:00.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:43:10.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:43:10.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:43:10.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:43:20.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:43:20.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:43:20.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:43:30.673 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:43:30.673 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:43:30.673 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:43:40.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:43:40.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:43:40.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:43:50.669 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:43:50.669 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:43:50.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:44:00.668 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:44:00.668 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:44:00.669 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:44:10.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:44:10.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:44:10.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:44:20.673 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:44:20.673 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:44:20.674 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:44:30.674 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:44:30.675 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:44:30.675 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:44:40.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:44:40.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:44:40.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:44:50.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:44:50.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:44:50.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:45:00.673 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:45:00.673 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:45:00.674 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:45:10.673 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:45:10.673 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:45:10.674 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:45:20.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:45:20.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:45:20.662 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:45:30.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:45:30.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:45:30.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:45:40.674 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:45:40.675 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:45:40.675 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:45:50.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:45:50.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:45:50.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:46:00.676 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:46:00.676 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:46:00.676 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:46:10.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:46:10.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:46:10.671 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:46:20.668 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:46:20.668 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:46:20.669 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:46:30.676 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:46:30.676 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:46:30.676 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:46:40.674 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:46:40.674 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:46:40.675 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:46:50.676 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:46:50.676 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:46:50.677 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:47:00.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:47:00.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:47:00.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:47:10.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:47:10.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:47:10.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:47:20.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:47:20.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:47:20.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:47:30.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:47:30.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:47:30.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:47:40.668 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:47:40.669 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:47:40.669 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:47:50.675 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:47:50.676 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:47:50.676 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:48:00.663 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:48:00.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:48:00.664 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:48:10.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:48:10.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:48:10.667 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:48:20.674 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:48:20.674 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:48:20.675 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:48:30.665 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:48:30.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:48:30.666 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:48:40.675 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:48:40.675 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:48:40.675 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:48:50.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:48:50.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:48:50.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:49:00.674 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:49:00.674 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:49:00.674 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:49:09.648 [main] [INFO ] com.test.springboot.SpringbootApplication - Starting SpringbootApplication using Java 1.8.0_291 on gaofengkai with PID 18064 (D:\BackEnd\workspace\springboot\target\classes started by gaofengkai in D:\BackEnd\workspace\springboot)
2022-08-30 10:49:09.650 [main] [INFO ] com.test.springboot.SpringbootApplication - The following profiles are active: prod
2022-08-30 10:49:09.650 [main] [DEBUG] org.springframework.boot.SpringApplication - Loading source class com.test.springboot.SpringbootApplication
2022-08-30 10:49:09.681 [main] [DEBUG] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66f57048
2022-08-30 10:49:11.554 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-08-30 10:49:11.555 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-08-30 10:49:11.561 [main] [DEBUG] o.s.boot.autoconfigure.AutoConfigurationPackages - @EnableAutoConfiguration was declared on a class in the package 'com.test.springboot'. Automatic @Repository and @Entity scanning is enabled.
2022-08-30 10:49:11.609 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50 ms. Found 1 MongoDB repository interfaces.
2022-08-30 10:49:11.616 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-08-30 10:49:11.617 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-08-30 10:49:11.629 [main] [INFO ] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.test.springboot.mapper.mongodb.MongoUserDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-08-30 10:49:11.630 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2022-08-30 10:49:11.715 [main] [WARN ] org.mybatis.spring.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'mongoUserDao' and 'com.test.springboot.mapper.mongodb.MongoUserDao' mapperInterface. Bean already defined with the same name!
2022-08-30 10:49:12.315 [main] [DEBUG] o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: C:\Users\Administrator\.m2\repository\org\springframework\boot\spring-boot\2.5.7\spring-boot-2.5.7.jar
2022-08-30 10:49:12.316 [main] [DEBUG] o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: C:\Users\Administrator\.m2\repository\org\springframework\boot\spring-boot\2.5.7\spring-boot-2.5.7.jar
2022-08-30 10:49:12.317 [main] [DEBUG] o.s.b.w.e.tomcat.TomcatServletWebServerFactory - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2022-08-30 10:49:12.335 [main] [INFO ] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2022-08-30 10:49:12.342 [main] [INFO ] org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2022-08-30 10:49:12.343 [main] [INFO ] org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-08-30 10:49:12.344 [main] [INFO ] org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.55]
2022-08-30 10:49:12.437 [main] [INFO ] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-08-30 10:49:12.437 [main] [DEBUG] o.s.b.w.s.c.ServletWebServerApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2022-08-30 10:49:12.438 [main] [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2757 ms
2022-08-30 10:49:12.644 [main] [DEBUG] o.s.b.web.servlet.ServletContextInitializerBeans - Mapping filters: filterRegistrationBean urls=[/*] order=-2147483647, filterRegistrationBean urls=[/*] order=2147483647, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, httpTraceFilter urls=[/*] order=2147483637
2022-08-30 10:49:12.644 [main] [DEBUG] o.s.b.web.servlet.ServletContextInitializerBeans - Mapping servlets: dispatcherServlet urls=[/], statViewServlet urls=[/druid/*]
2022-08-30 10:49:12.660 [main] [DEBUG] o.s.b.a.metrics.web.servlet.WebMvcMetricsFilter - Filter 'webMvcMetricsFilter' configured for use
2022-08-30 10:49:12.661 [main] [DEBUG] o.s.b.w.s.filter.OrderedCharacterEncodingFilter - Filter 'characterEncodingFilter' configured for use
2022-08-30 10:49:12.661 [main] [DEBUG] o.s.boot.actuate.web.trace.servlet.HttpTraceFilter - Filter 'httpTraceFilter' configured for use
2022-08-30 10:49:13.303 [main] [INFO ] org.mongodb.driver.cluster - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2022-08-30 10:49:13.355 [cluster-rtt-ClusterId{value='630d7aa96aea030c327e2327', description='null'}-localhost:27017] [INFO ] org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:86}] to localhost:27017
2022-08-30 10:49:13.355 [cluster-ClusterId{value='630d7aa96aea030c327e2327', description='null'}-localhost:27017] [INFO ] org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:85}] to localhost:27017
2022-08-30 10:49:13.355 [cluster-ClusterId{value='630d7aa96aea030c327e2327', description='null'}-localhost:27017] [INFO ] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=28125200}
2022-08-30 10:49:13.468 [main] [DEBUG] o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2022-08-30 10:49:13.929 [main] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2022-08-30 10:49:14.060 [main] [WARN ] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/C:/Users/Administrator/.m2/repository/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/C:/Users/Administrator/.m2/repository/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'mongoDBController' method 
com.test.springboot.controller.mongodb.MongoDBController#createUser(MongoUser)
to {POST [/mongouser]}: There is already 'mongoDBController' bean method
com.test.springboot.controller.mongodb.MongoDBController#getUserBetween(String, String) mapped.
2022-08-30 10:49:14.064 [main] [INFO ] com.alibaba.druid.pool.DruidDataSource - {dataSource-0} closing ...
2022-08-30 10:49:14.064 [main] [INFO ] com.alibaba.druid.pool.DruidDataSource - {dataSource-0} closing ...
2022-08-30 10:49:14.066 [main] [INFO ] org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2022-08-30 10:49:14.073 [main] [WARN ] org.apache.catalina.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:144)
 com.mysql.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:43)
2022-08-30 10:49:14.093 [main] [DEBUG] o.s.b.a.l.ConditionEvaluationReportLoggingListener - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   AuditEventsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.auditevents.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   AutoConfiguration matched:
      - @ConditionalOnProperty (helloworld=true) matched (OnPropertyCondition)

   BeansEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.beans.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration#beansEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.beans.BeansEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CacheMeterBinderProvidersConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.MeterBinder' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.RedisCacheMeterBinderProviderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.cache.RedisCache' (OnClassCondition)

   CacheMetricsAutoConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.cache.CacheManager; SearchStrategy: all) found bean 'cacheManager' (OnBeanCondition)

   CacheMetricsRegistrarConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'simpleMeterRegistry', 'redisCacheMeterBinderProvider' (OnBeanCondition)

   CachesEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint no property management.endpoint.caches.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   CachesEndpointAutoConfiguration#cachesEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CachesEndpointAutoConfiguration#cachesEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) found bean 'cachesEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CompositeMeterRegistryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.composite.CompositeMeterRegistry' (OnClassCondition)

   ConditionsReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.conditions.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ConditionsReportEndpointAutoConfiguration#conditionsReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.configprops.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) found bean 'configurationPropertiesReportEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration#dbHealthContributor matched:
      - @ConditionalOnMissingBean (names: dbHealthIndicator,dbHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'dynamicDataSource', 'simpleMeterRegistry', 'first', 'second' (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration.HikariDataSourceMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DiskSpaceHealthContributorAutoConfiguration matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   DiskSpaceHealthContributorAutoConfiguration#diskSpaceHealthIndicator matched:
      - @ConditionalOnMissingBean (names: diskSpaceHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   DruidDataSourceAutoConfigure matched:
      - @ConditionalOnClass found required class 'com.alibaba.druid.pool.DruidDataSource' (OnClassCondition)

   DruidStatViewServletConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.datasource.druid.stat-view-servlet.enabled=true) matched (OnPropertyCondition)

   DruidWebStatFilterConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.datasource.druid.web-stat-filter.enabled=true) matched (OnPropertyCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   EndpointAutoConfiguration#endpointCachingOperationInvokerAdvisor matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EndpointAutoConfiguration#endpointOperationParameterMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.env.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) found bean 'environmentEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HealthContributorAutoConfiguration#pingHealthContributor matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   HealthEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint found property management.endpoint.health.enabled with value true; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HealthEndpointConfiguration#healthContributorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpointGroups matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointGroups; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthHttpCodeStatusMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HttpCodeStatusMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthStatusAggregator matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.StatusAggregator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration#healthEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HeapDumpWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.heapdump.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HeapDumpWebEndpointAutoConfiguration#heapDumpWebEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.HeapDumpWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpClientMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (management.trace.http.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.trace.http.HttpTraceRepository; SearchStrategy: all) found bean 'buildHttpTraceRepository' (OnBeanCondition)

   HttpTraceAutoConfiguration#httpExchangeTracer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.trace.http.HttpExchangeTracer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceAutoConfiguration.ServletTraceFilterConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   HttpTraceAutoConfiguration.ServletTraceFilterConfiguration#httpTraceFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.httptrace.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HttpTraceEndpointAutoConfiguration#httpTraceEndpoint matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.trace.http.HttpTraceRepository; SearchStrategy: all) found bean 'buildHttpTraceRepository'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.trace.http.HttpTraceEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   InfoContributorAutoConfiguration#envInfoContributor matched:
      - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.info.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   InfoEndpointAutoConfiguration#infoEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.info.InfoEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxEndpointAutoConfiguration#endpointObjectNameFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.EndpointObjectNameFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxAnnotationEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.JmxEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxMBeanExporter matched:
      - @ConditionalOnSingleCandidate (types: javax.management.MBeanServer; SearchStrategy: all) found a primary bean from beans 'mbeanServer' (OnBeanCondition)

   JvmMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   JvmMetricsAutoConfiguration#classLoaderMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmGcMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmGcMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmMemoryMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmThreadMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAnnotationDrivenConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.kafka.annotation.EnableKafka' (OnClassCondition)

   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactoryConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   KafkaAutoConfiguration#kafkaAdmin matched:
      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.KafkaAdmin; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAutoConfiguration#kafkaProducerListener matched:
      - @ConditionalOnMissingBean (types: org.springframework.kafka.support.ProducerListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.kafka.KafkaClientMetrics', 'org.springframework.kafka.core.ProducerFactory' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   KafkaMetricsAutoConfiguration.KafkaStreamsMetricsConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.kafka.KafkaStreamsMetrics', 'org.springframework.kafka.config.StreamsBuilderFactoryBean' (OnClassCondition)

   LettuceConnectionConfiguration matched:
      - @ConditionalOnClass found required class 'io.lettuce.core.RedisClient' (OnClassCondition)
      - @ConditionalOnProperty (spring.redis.client-type=lettuce) matched (OnPropertyCondition)

   LettuceConnectionConfiguration#lettuceClientResources matched:
      - @ConditionalOnMissingBean (types: io.lettuce.core.resource.ClientResources; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration#redisConnectionFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LogFileWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.logfile.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   LogFileWebEndpointAutoConfiguration#logFileWebEndpoint matched:
      - Log File found logging.file.path var/log (LogFileWebEndpointAutoConfiguration.LogFileCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LogFileWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LogbackMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'ch.qos.logback.classic.LoggerContext', 'org.slf4j.LoggerFactory' (OnClassCondition)
      - LogbackLoggingCondition ILoggerFactory is a Logback LoggerContext (LogbackMetricsAutoConfiguration.LogbackLoggingCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   LogbackMetricsAutoConfiguration#logbackMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.logging.LogbackMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoggersEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.loggers.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   LoggersEndpointAutoConfiguration#loggersEndpoint matched:
      - Logging System enabled (LoggersEndpointAutoConfiguration.OnEnabledLoggingSystemCondition)
      - @ConditionalOnBean (types: org.springframework.boot.logging.LoggingSystem; SearchStrategy: all) found bean 'springBootLoggingSystem'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LoggersEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ManagementContextAutoConfiguration.SameManagementContextConfiguration matched:
      - Management Port actual port type (SAME) matched required type (OnManagementPortCondition)

   MappingsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.mappings.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration.SpringMvcConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   MetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)

   MetricsAutoConfiguration#micrometerClock matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MetricsEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint no property management.endpoint.metrics.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   MetricsEndpointAutoConfiguration#metricsEndpoint matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.MetricsEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.mongodb.client.MongoClient' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration#mongo matched:
      - @ConditionalOnMissingBean (types: com.mongodb.client.MongoClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration.MongoClientSettingsConfiguration matched:
      - @ConditionalOnMissingBean (types: com.mongodb.MongoClientSettings; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDataAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'com.mongodb.client.MongoClient', 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)

   MongoDataConfiguration#mongoCustomConversions matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.convert.MongoCustomConversions; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDataConfiguration#mongoMappingContext matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.mapping.MongoMappingContext; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryConfiguration matched:
      - @ConditionalOnSingleCandidate (types: com.mongodb.client.MongoClient; SearchStrategy: all) found a primary bean from beans 'mongo'; @ConditionalOnMissingBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) found bean 'mongoDatabaseFactory' (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#gridFsTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.gridfs.GridFsOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#mappingMongoConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.convert.MongoConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#mongoTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.MongoOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: org.springframework.data.mongodb.core.MongoTemplate; SearchStrategy: all) found bean 'mongoTemplate' (OnBeanCondition)

   MongoHealthContributorAutoConfiguration#mongoHealthContributor matched:
      - @ConditionalOnMissingBean (names: mongoHealthIndicator,mongoHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.mongodb.MongoClientSettings' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoCommandMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener' (OnClassCondition)
      - @ConditionalOnProperty (management.metrics.mongo.command.enabled=true) matched (OnPropertyCondition)

   MongoMetricsAutoConfiguration.MongoCommandMetricsConfiguration#mongoCommandTagsProvider matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoCommandTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoCommandMetricsConfiguration#mongoMetricsCommandListener matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoConnectionPoolMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener' (OnClassCondition)
      - @ConditionalOnProperty (management.metrics.mongo.connectionpool.enabled=true) matched (OnPropertyCondition)

   MongoMetricsAutoConfiguration.MongoConnectionPoolMetricsConfiguration#mongoConnectionPoolTagsProvider matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoConnectionPoolTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoConnectionPoolMetricsConfiguration#mongoMetricsConnectionPoolListener matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'com.mongodb.client.MongoClient', 'org.springframework.data.mongodb.repository.MongoRepository' (OnClassCondition)
      - @ConditionalOnRepositoryType configured type of 'AUTO' matched required type (OnRepositoryTypeCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean,org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisLanguageDriverAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.apache.ibatis.scripting.LanguageDriver' (OnClassCondition)

   NettyAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ReactiveHealthEndpointConfiguration matched:
      - @ConditionalOnClass found required class 'reactor.core.publisher.Flux' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)

   ReactiveHealthEndpointConfiguration#reactiveHealthContributorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisAutoConfiguration#stringRedisTemplate matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a primary bean from beans 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.core.StringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisCacheConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)
      - Cache org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration automatic cache type (CacheCondition)

   RedisHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory' (OnBeanCondition)

   RedisReactiveAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'org.springframework.data.redis.core.ReactiveRedisTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisReactiveAutoConfiguration#reactiveRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveAutoConfiguration#reactiveStringRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveStringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'reactor.core.publisher.Flux' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory' (OnBeanCondition)

   RedisReactiveHealthContributorAutoConfiguration#redisHealthContributor matched:
      - @ConditionalOnMissingBean (names: redisHealthIndicator,redisHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.redis.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.repository.Repository' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#metricsRepositoryMethodInvocationListener matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#repositoryTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)

   RestTemplateMetricsConfiguration#restTemplateExchangeTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.web.client.RestTemplateExchangeTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ScheduledTasksEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.scheduledtasks.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ScheduledTasksEndpointAutoConfiguration#scheduledTasksEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletEndpointManagementContextConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   ServletEndpointManagementContextConfiguration.WebMvcServletEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)

   ServletManagementContextAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.Servlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ShutdownEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint found property management.endpoint.shutdown.enabled with value true; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ShutdownEndpointAutoConfiguration#shutdownEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.ShutdownEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SimpleMetricsExportAutoConfiguration matched:
      - @ConditionalOnEnabledMetricsExport management.metrics.export.defaults.enabled is considered true (OnMetricsExportEnabledCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) found bean 'micrometerClock'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleMetricsExportAutoConfiguration#simpleConfig matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.simple.SimpleConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - matched (SpringBootAdminClientEnabledCondition)

   SpringBootAdminClientAutoConfiguration#registrationListener matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.RegistrationApplicationListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration#registrator matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.ApplicationRegistrator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration#startupDateMetadataContributor matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.metadata.StartupDateMetadataContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration.BlockingRegistrationClientConfig matched:
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration.BlockingRegistrationClientConfig#registrationClient matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.BlockingRegistrationClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration.ServletConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringBootAdminClientAutoConfiguration.ServletConfiguration#applicationFactory matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.ApplicationFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   Swagger2DocumentationConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   SystemMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   SystemMetricsAutoConfiguration#fileDescriptorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.FileDescriptorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#processorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.ProcessorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#uptimeMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.UptimeMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThreadDumpEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.threaddump.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ThreadDumpEndpointAutoConfiguration#dumpEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.ThreadDumpEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.thymeleaf.templatemode.TemplateMode', 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   ThymeleafAutoConfiguration.DefaultTemplateResolverConfiguration matched:
      - @ConditionalOnMissingBean (names: defaultTemplateResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafDefaultConfiguration#templateEngine matched:
      - @ConditionalOnMissingBean (types: org.thymeleaf.spring5.ISpringTemplateEngine; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafJava8TimeDialect matched:
      - @ConditionalOnClass found required class 'org.thymeleaf.extras.java8time.dialect.Java8TimeDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafJava8TimeDialect#java8TimeDialect matched:
      - @ConditionalOnMissingBean (types: org.thymeleaf.extras.java8time.dialect.Java8TimeDialect; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.thymeleaf.enabled) matched (OnPropertyCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration.ThymeleafViewResolverConfiguration#thymeleafViewResolver matched:
      - @ConditionalOnMissingBean (names: thymeleafViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TomcatMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.tomcat.TomcatMetrics', 'org.apache.catalina.Manager' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   TomcatMetricsAutoConfiguration#tomcatMetricsBinder matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.tomcat.TomcatMetrics,org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'firstTransactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a primary bean from beans 'firstTransactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration#controllerEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#endpointMediaTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#pathMappedEndpoints matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#webEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration#servletEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) found beans 'webEndpointDiscoverer', 'dispatcherServlet' (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#controllerEndpointHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#webEndpointServletHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   WebMvcMetricsAutoConfiguration#webMvcTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AppOpticsMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.appoptics.AppOpticsMeterRegistry' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AtlasMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.atlas.AtlasMeterRegistry' (OnClassCondition)

   AuditAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnProperty (management.auditevents.enabled) matched (OnPropertyCondition)

   AuditEventsEndpointAutoConfiguration#auditEventsEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)

   AvailabilityHealthContributorAutoConfiguration#livenessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.livenessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityHealthContributorAutoConfiguration#readinessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.readinessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityProbesAutoConfiguration:
      Did not match:
         - Probes availability not running on a supported cloud platform (AvailabilityProbesAutoConfiguration.ProbesCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: cacheResolver types: org.springframework.cache.CacheManager; SearchStrategy: all) found beans of type 'org.springframework.cache.CacheManager' cacheManager (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CacheMeterBinderProvidersConfiguration.CaffeineCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Cache' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.EhCache2CacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Ehcache' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.HazelcastCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'com.hazelcast.spring.cache.HazelcastCache', 'com.hazelcast.core.Hazelcast' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.JCacheCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.CacheManager' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (management.cloudfoundry.enabled) matched (OnPropertyCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CompositeMeterRegistryConfiguration:
      Did not match:
         - NoneNestedConditions 1 matched 1 did not; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.SingleInjectableMeterRegistry @ConditionalOnSingleCandidate (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found a primary bean from beans 'simpleMeterRegistry'; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.NoMeterRegistryCondition @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition)

   ConnectionFactoryHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   ConnectionPoolMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.pool.ConnectionPool' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceInitializationConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) did not find a primary bean from beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)

   DataSourcePoolMetricsAutoConfiguration.DataSourcePoolMetadataMetricsConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider (OnBeanCondition)

   DatadogMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.datadog.DatadogMeterRegistry' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   DruidDataSourceAutoConfigure#dataSource:
      Did not match:
         - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) found beans of type 'javax.sql.DataSource' first, second, dynamicDataSource (OnBeanCondition)

   DruidFilterConfiguration#commonsLogFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.commons-log.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#configFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.config.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#encodingConvertFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.encoding.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#log4j2Filter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.log4j2.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#log4jFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.log4j.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#slf4jLogFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.slf4j.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#statFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.stat.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#wallConfig:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.wall.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#wallFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.wall.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidSpringAopConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.aop-patterns) did not find property 'spring.datasource.druid.aop-patterns' (OnPropertyCondition)

   DynatraceMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.dynatrace.DynatraceMeterRegistry' (OnClassCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.elastic.ElasticMeterRegistry' (OnClassCondition)

   ElasticSearchReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ElasticSearchRestHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestHighLevelClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestHighLevelClient' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'de.flapdoodle.embed.mongo.MongodStarter' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FlywayEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GangliaMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.ganglia.GangliaMeterRegistry' (OnClassCondition)

   GraphiteMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.graphite.GraphiteMeterRegistry' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.WebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HealthEndpointReactiveWebExtensionConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManager' (OnClassCondition)

   HibernateMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManagerFactory' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HttpTraceAutoConfiguration.ReactiveTraceFilterConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   HumioMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.humio.HumioMeterRegistry' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxDbHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.influx.InfluxMeterRegistry' (OnClassCondition)

   InfoContributorAutoConfiguration#buildInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.BuildProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#gitInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.GitProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   IntegrationGraphEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.graph.IntegrationGraphServer' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JdbcTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) did not find a primary bean from beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)

   JedisConnectionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.apache.commons.pool2.impl.GenericObjectPool', 'redis.clients.jedis.Jedis' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JerseySameManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JerseyServerMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.jersey2.server.MetricsApplicationEventListener' (OnClassCondition)

   JerseyWebEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JettyMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.server.Server' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmsHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   JmxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.jmx.JmxMeterRegistry' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JolokiaEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jolokia.http.AgentServlet' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.Transaction' (OnClassCondition)

   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactory:
      Did not match:
         - @ConditionalOnMissingBean (names: kafkaListenerContainerFactory; SearchStrategy: all) found beans named kafkaListenerContainerFactory (OnBeanCondition)

   KafkaAnnotationDrivenConfiguration.EnableKafkaConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: org.springframework.kafka.config.internalKafkaListenerAnnotationProcessor; SearchStrategy: all) found beans named org.springframework.kafka.config.internalKafkaListenerAnnotationProcessor (OnBeanCondition)

   KafkaAutoConfiguration#kafkaConsumerFactory:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.kafka.core.ConsumerFactory; SearchStrategy: all) found beans of type 'org.springframework.kafka.core.ConsumerFactory' consumerFactory (OnBeanCondition)

   KafkaAutoConfiguration#kafkaJaasInitializer:
      Did not match:
         - @ConditionalOnProperty (spring.kafka.jaas.enabled) did not find property 'spring.kafka.jaas.enabled' (OnPropertyCondition)

   KafkaAutoConfiguration#kafkaProducerFactory:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.kafka.core.ProducerFactory; SearchStrategy: all) found beans of type 'org.springframework.kafka.core.ProducerFactory' producerFactory (OnBeanCondition)

   KafkaAutoConfiguration#kafkaTemplate:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.kafka.core.KafkaTemplate; SearchStrategy: all) found beans of type 'org.springframework.kafka.core.KafkaTemplate' kafkaTemplate (OnBeanCondition)

   KafkaAutoConfiguration#kafkaTransactionManager:
      Did not match:
         - @ConditionalOnProperty (spring.kafka.producer.transaction-id-prefix) did not find property 'spring.kafka.producer.transaction-id-prefix' (OnPropertyCondition)

   KafkaStreamsAnnotationDrivenConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.kafka.streams.StreamsBuilder' (OnClassCondition)

   KairosMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.kairos.KairosMeterRegistry' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.LdapOperations' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   LiquibaseEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.integration.spring.SpringLiquibase' (OnClassCondition)

   Log4J2MetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.logging.log4j.core.LoggerContext' (OnClassCondition)

   MailHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.mail.javamail.JavaMailSenderImpl; SearchStrategy: all) did not find any beans of type org.springframework.mail.javamail.JavaMailSenderImpl (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnClassCondition)
         - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.JndiNameProperty @ConditionalOnProperty (spring.mail.jndi-name) did not find property 'jndi-name'; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.HostProperty @ConditionalOnProperty (spring.mail.host) did not find property 'host' (MailSenderAutoConfiguration.MailSenderCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.mail.internet.MimeMessage', 'javax.activation.MimeType', 'org.springframework.mail.MailSender' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   ManagementContextAutoConfiguration.DifferentManagementContextConfiguration:
      Did not match:
         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)

   ManagementWebSecurityAutoConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter,org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) did not find any beans; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass did not find required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ReactiveWebConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.data.mongodb.core.ReactiveMongoTemplate; SearchStrategy: all) did not find any beans of type org.springframework.data.mongodb.core.ReactiveMongoTemplate (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'org.springframework.data.mongodb.core.ReactiveMongoTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)
         - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   MybatisAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) did not find a primary bean from beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.FreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver', 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriverConfig' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.LegacyFreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.LegacyVelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.velocity.Driver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.ThymeleafConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.thymeleaf.ThymeleafLanguageDriver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.VelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.velocity.VelocityLanguageDriver', 'org.mybatis.scripting.velocity.VelocityLanguageDriverConfig' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NewRelicMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.newrelic.NewRelicMeterRegistry' (OnClassCondition)

   NoOpMeterRegistryConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (OnBeanCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PrometheusMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.prometheus.PrometheusMeterRegistry' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   QuartzEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   RabbitHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.amqp.rabbit.core.RabbitTemplate' (OnClassCondition)

   RabbitMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.ConnectionFactory' (OnClassCondition)

   ReactiveCloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveManagementContextAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveManagementWebSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration#redisTemplate:
      Did not match:
         - @ConditionalOnMissingBean (names: redisTemplate; SearchStrategy: all) found beans named redisTemplate (OnBeanCondition)

   RedisHealthContributorAutoConfiguration#redisHealthContributor:
      Did not match:
         - @ConditionalOnMissingBean (names: redisHealthIndicator,redisHealthContributor; SearchStrategy: all) found beans named redisHealthContributor (OnBeanCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SecurityRequestMatchersManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.web.util.matcher.RequestMatcher' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletEndpointManagementContextConfiguration.JerseyServletEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   ServletManagementContextAutoConfiguration.ApplicationContextFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (management.server.add-application-context-header=true) did not find property 'add-application-context-header' (OnPropertyCondition)

   ServletWebServerFactoryAutoConfiguration#forwardedHeaderFilter:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SessionsEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.FindByIndexNameSessionRepository' (OnClassCondition)

   SignalFxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.signalfx.SignalFxMeterRegistry' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SolrHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.SolrClient' (OnClassCondition)

   SpringBootAdminClientAutoConfiguration.ReactiveConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   SpringBootAdminClientAutoConfiguration.ReactiveRegistrationClientConfig:
      Did not match:
         - @ConditionalOnBean did not find required type 'org.springframework.web.reactive.function.client.WebClient$Builder' (OnBeanCondition)
         - @ConditionalOnBean (types: org.springframework.web.reactive.function.client.WebClient$Builder; SearchStrategy: all) did not find any beans of type org.springframework.web.reactive.function.client.WebClient$Builder (OnBeanCondition)

   SpringBootAdminClientCloudFoundryAutoConfiguration:
      Did not match:
         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)
      Matched:
         - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
         - matched (SpringBootAdminClientEnabledCondition)

   StackdriverMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.stackdriver.StackdriverMeterRegistry' (OnClassCondition)

   StartupEndpointAutoConfiguration:
      Did not match:
         - ApplicationStartup configured applicationStartup is of type class org.springframework.core.metrics.DefaultApplicationStartup, expected BufferingApplicationStartup. (StartupEndpointAutoConfiguration.ApplicationStartupCondition)

   StatsdMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.statsd.StatsdMeterRegistry' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor:
      Did not match:
         - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) found beans of type 'java.util.concurrent.Executor' asyncThreadPoolTaskExecutor (OnBeanCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration.DataAttributeDialectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.mxab.thymeleaf.extras.dataattribute.dialect.DataAttributeDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafReactiveConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ThymeleafAutoConfiguration.ThymeleafSecurityDialectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.extras.springsecurity5.dialect.SpringSecurityDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebFluxConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ThymeleafAutoConfiguration.ThymeleafWebLayoutConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'nz.net.ultraq.thymeleaf.LayoutDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration#resourceUrlEncodingFilter:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)

   WavefrontMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebClientMetricsConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebFluxEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   WebFluxMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport' org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)
         - Ancestor org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.client.core.WebServiceTemplate' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

    org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration



2022-08-30 10:49:14.111 [main] [ERROR] org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/C:/Users/Administrator/.m2/repository/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/C:/Users/Administrator/.m2/repository/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'mongoDBController' method 
com.test.springboot.controller.mongodb.MongoDBController#createUser(MongoUser)
to {POST [/mongouser]}: There is already 'mongoDBController' bean method
com.test.springboot.controller.mongodb.MongoDBController#getUserBetween(String, String) mapped.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:765)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:445)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.test.springboot.SpringbootApplication.main(SpringbootApplication.java:19)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/C:/Users/Administrator/.m2/repository/io/springfox/springfox-spring-web/2.9.2/springfox-spring-web-2.9.2.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'mongoDBController' method 
com.test.springboot.controller.mongodb.MongoDBController#createUser(MongoUser)
to {POST [/mongouser]}: There is already 'mongoDBController' bean method
com.test.springboot.controller.mongodb.MongoDBController#getUserBetween(String, String) mapped.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1598)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1562)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1451)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'mongoDBController' method 
com.test.springboot.controller.mongodb.MongoDBController#createUser(MongoUser)
to {POST [/mongouser]}: There is already 'mongoDBController' bean method
com.test.springboot.controller.mongodb.MongoDBController#getUserBetween(String, String) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1598)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1562)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1451)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 36 common frames omitted
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'mongoDBController' method 
com.test.springboot.controller.mongodb.MongoDBController#createUser(MongoUser)
to {POST [/mongouser]}: There is already 'mongoDBController' bean method
com.test.springboot.controller.mongodb.MongoDBController#getUserBetween(String, String) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:669)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:635)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:332)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:395)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:76)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$2(AbstractHandlerMethodMapping.java:299)
	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:297)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:266)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:225)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:213)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:206)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 50 common frames omitted
2022-08-30 10:49:56.975 [main] [INFO ] com.test.springboot.SpringbootApplication - Starting SpringbootApplication using Java 1.8.0_291 on gaofengkai with PID 19164 (D:\BackEnd\workspace\springboot\target\classes started by gaofengkai in D:\BackEnd\workspace\springboot)
2022-08-30 10:49:56.977 [main] [INFO ] com.test.springboot.SpringbootApplication - The following profiles are active: prod
2022-08-30 10:49:56.977 [main] [DEBUG] org.springframework.boot.SpringApplication - Loading source class com.test.springboot.SpringbootApplication
2022-08-30 10:49:57.008 [main] [DEBUG] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66f57048
2022-08-30 10:49:57.815 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-08-30 10:49:57.816 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-08-30 10:49:57.821 [main] [DEBUG] o.s.boot.autoconfigure.AutoConfigurationPackages - @EnableAutoConfiguration was declared on a class in the package 'com.test.springboot'. Automatic @Repository and @Entity scanning is enabled.
2022-08-30 10:49:57.863 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 1 MongoDB repository interfaces.
2022-08-30 10:49:57.870 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-08-30 10:49:57.871 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-08-30 10:49:57.883 [main] [INFO ] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.test.springboot.mapper.mongodb.MongoUserDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-08-30 10:49:57.883 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2022-08-30 10:49:57.959 [main] [WARN ] org.mybatis.spring.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'mongoUserDao' and 'com.test.springboot.mapper.mongodb.MongoUserDao' mapperInterface. Bean already defined with the same name!
2022-08-30 10:49:58.418 [main] [DEBUG] o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: C:\Users\Administrator\.m2\repository\org\springframework\boot\spring-boot\2.5.7\spring-boot-2.5.7.jar
2022-08-30 10:49:58.418 [main] [DEBUG] o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: C:\Users\Administrator\.m2\repository\org\springframework\boot\spring-boot\2.5.7\spring-boot-2.5.7.jar
2022-08-30 10:49:58.419 [main] [DEBUG] o.s.b.w.e.tomcat.TomcatServletWebServerFactory - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2022-08-30 10:49:58.431 [main] [INFO ] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2022-08-30 10:49:58.436 [main] [INFO ] org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2022-08-30 10:49:58.437 [main] [INFO ] org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-08-30 10:49:58.437 [main] [INFO ] org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.55]
2022-08-30 10:49:58.510 [main] [INFO ] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-08-30 10:49:58.511 [main] [DEBUG] o.s.b.w.s.c.ServletWebServerApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2022-08-30 10:49:58.511 [main] [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1503 ms
2022-08-30 10:49:58.649 [main] [DEBUG] o.s.b.web.servlet.ServletContextInitializerBeans - Mapping filters: filterRegistrationBean urls=[/*] order=-2147483647, filterRegistrationBean urls=[/*] order=2147483647, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, httpTraceFilter urls=[/*] order=2147483637
2022-08-30 10:49:58.649 [main] [DEBUG] o.s.b.web.servlet.ServletContextInitializerBeans - Mapping servlets: dispatcherServlet urls=[/], statViewServlet urls=[/druid/*]
2022-08-30 10:49:58.662 [main] [DEBUG] o.s.b.a.metrics.web.servlet.WebMvcMetricsFilter - Filter 'webMvcMetricsFilter' configured for use
2022-08-30 10:49:58.663 [main] [DEBUG] o.s.b.w.s.filter.OrderedCharacterEncodingFilter - Filter 'characterEncodingFilter' configured for use
2022-08-30 10:49:58.663 [main] [DEBUG] o.s.boot.actuate.web.trace.servlet.HttpTraceFilter - Filter 'httpTraceFilter' configured for use
2022-08-30 10:49:59.143 [main] [INFO ] org.mongodb.driver.cluster - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2022-08-30 10:49:59.176 [cluster-rtt-ClusterId{value='630d7ad74fa22a4168e84868', description='null'}-localhost:27017] [INFO ] org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:87}] to localhost:27017
2022-08-30 10:49:59.176 [cluster-ClusterId{value='630d7ad74fa22a4168e84868', description='null'}-localhost:27017] [INFO ] org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:88}] to localhost:27017
2022-08-30 10:49:59.176 [cluster-ClusterId{value='630d7ad74fa22a4168e84868', description='null'}-localhost:27017] [INFO ] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=11696400}
2022-08-30 10:49:59.289 [main] [DEBUG] o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2022-08-30 10:49:59.752 [main] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2022-08-30 10:49:59.962 [main] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 44 mappings in 'requestMappingHandlerMapping'
2022-08-30 10:50:00.283 [main] [INFO ] o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 16 endpoint(s) beneath base path '/monitor'
2022-08-30 10:50:00.365 [main] [INFO ] s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-08-30 10:50:00.486 [main] [DEBUG] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2022-08-30 10:50:01.092 [main] [INFO ] org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [110.40.220.207:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-test-consumer-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = test-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2022-08-30 10:50:01.146 [main] [INFO ] org.apache.kafka.common.utils.AppInfoParser - Kafka version: 2.7.2
2022-08-30 10:50:01.147 [main] [INFO ] org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: 37a1cc36bf4d76f3
2022-08-30 10:50:01.147 [main] [INFO ] org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1661827801146
2022-08-30 10:50:01.149 [main] [INFO ] org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Subscribed to topic(s): test
2022-08-30 10:50:01.154 [main] [INFO ] org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2022-08-30 10:50:01.161 [main] [INFO ] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2022-08-30 10:50:01.162 [main] [INFO ] s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2022-08-30 10:50:01.175 [main] [INFO ] s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 6 custom documentation plugin(s)
2022-08-30 10:50:01.210 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 10:50:01.329 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: testUsingGET_1
2022-08-30 10:50:01.330 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: test2UsingGET_1
2022-08-30 10:50:01.340 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 10:50:01.341 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: testAopUsingGET_1
2022-08-30 10:50:01.344 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 10:50:01.347 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getCityUsingPOST_1
2022-08-30 10:50:01.348 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getFirstStudentUsingPOST_1
2022-08-30 10:50:01.351 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 10:50:01.353 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonUsingPOST_1
2022-08-30 10:50:01.354 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingGET_1
2022-08-30 10:50:01.354 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingHEAD_1
2022-08-30 10:50:01.355 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingPOST_1
2022-08-30 10:50:01.355 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingPUT_1
2022-08-30 10:50:01.355 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingPATCH_1
2022-08-30 10:50:01.356 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingDELETE_1
2022-08-30 10:50:01.356 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingOPTIONS_1
2022-08-30 10:50:01.357 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingTRACE_1
2022-08-30 10:50:01.357 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingGET_1
2022-08-30 10:50:01.358 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingHEAD_1
2022-08-30 10:50:01.358 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingPOST_1
2022-08-30 10:50:01.359 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingPUT_1
2022-08-30 10:50:01.359 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingPATCH_1
2022-08-30 10:50:01.359 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingDELETE_1
2022-08-30 10:50:01.360 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingOPTIONS_1
2022-08-30 10:50:01.360 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingTRACE_1
2022-08-30 10:50:01.361 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingGET_1
2022-08-30 10:50:01.361 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingHEAD_1
2022-08-30 10:50:01.361 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingPOST_1
2022-08-30 10:50:01.362 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingPUT_1
2022-08-30 10:50:01.362 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingPATCH_1
2022-08-30 10:50:01.362 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingDELETE_1
2022-08-30 10:50:01.362 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingOPTIONS_1
2022-08-30 10:50:01.363 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingTRACE_1
2022-08-30 10:50:01.363 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: serializationUsingPOST_1
2022-08-30 10:50:01.365 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingGET_1
2022-08-30 10:50:01.365 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingHEAD_1
2022-08-30 10:50:01.366 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingPOST_1
2022-08-30 10:50:01.366 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingPUT_1
2022-08-30 10:50:01.367 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingPATCH_1
2022-08-30 10:50:01.367 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingDELETE_1
2022-08-30 10:50:01.367 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingOPTIONS_1
2022-08-30 10:50:01.368 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingTRACE_1
2022-08-30 10:50:01.371 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 10:50:01.372 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: addRedisUsingPOST_1
2022-08-30 10:50:01.373 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: deleteRedisUsingPOST_1
2022-08-30 10:50:01.374 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getRedisUsingPOST_1
2022-08-30 10:50:01.375 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateRedisUsingPOST_1
2022-08-30 10:50:01.378 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 10:50:01.378 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: addJdbcStudentUsingPOST_1
2022-08-30 10:50:01.380 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: queryStudentByIdUsingGET_1
2022-08-30 10:50:01.380 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: queryStudentById2UsingPOST_1
2022-08-30 10:50:01.381 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: queryStudentById3UsingPOST_1
2022-08-30 10:50:01.395 [main] [DEBUG] o.s.b.a.l.ConditionEvaluationReportLoggingListener - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   AuditEventsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.auditevents.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   AutoConfiguration matched:
      - @ConditionalOnProperty (helloworld=true) matched (OnPropertyCondition)

   BeansEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.beans.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration#beansEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.beans.BeansEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CacheMeterBinderProvidersConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.MeterBinder' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.RedisCacheMeterBinderProviderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.cache.RedisCache' (OnClassCondition)

   CacheMetricsAutoConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.cache.CacheManager; SearchStrategy: all) found bean 'cacheManager' (OnBeanCondition)

   CacheMetricsRegistrarConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'simpleMeterRegistry', 'redisCacheMeterBinderProvider' (OnBeanCondition)

   CachesEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint no property management.endpoint.caches.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   CachesEndpointAutoConfiguration#cachesEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CachesEndpointAutoConfiguration#cachesEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) found bean 'cachesEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CompositeMeterRegistryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.composite.CompositeMeterRegistry' (OnClassCondition)

   ConditionsReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.conditions.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ConditionsReportEndpointAutoConfiguration#conditionsReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.configprops.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) found bean 'configurationPropertiesReportEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration#dbHealthContributor matched:
      - @ConditionalOnMissingBean (names: dbHealthIndicator,dbHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'dynamicDataSource', 'simpleMeterRegistry', 'first', 'second' (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration.HikariDataSourceMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DiskSpaceHealthContributorAutoConfiguration matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   DiskSpaceHealthContributorAutoConfiguration#diskSpaceHealthIndicator matched:
      - @ConditionalOnMissingBean (names: diskSpaceHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   DruidDataSourceAutoConfigure matched:
      - @ConditionalOnClass found required class 'com.alibaba.druid.pool.DruidDataSource' (OnClassCondition)

   DruidStatViewServletConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.datasource.druid.stat-view-servlet.enabled=true) matched (OnPropertyCondition)

   DruidWebStatFilterConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.datasource.druid.web-stat-filter.enabled=true) matched (OnPropertyCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   EndpointAutoConfiguration#endpointCachingOperationInvokerAdvisor matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EndpointAutoConfiguration#endpointOperationParameterMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.env.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) found bean 'environmentEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HealthContributorAutoConfiguration#pingHealthContributor matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   HealthEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint found property management.endpoint.health.enabled with value true; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HealthEndpointConfiguration#healthContributorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpointGroups matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointGroups; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthHttpCodeStatusMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HttpCodeStatusMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthStatusAggregator matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.StatusAggregator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration#healthEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HeapDumpWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.heapdump.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HeapDumpWebEndpointAutoConfiguration#heapDumpWebEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.HeapDumpWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpClientMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (management.trace.http.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.trace.http.HttpTraceRepository; SearchStrategy: all) found bean 'buildHttpTraceRepository' (OnBeanCondition)

   HttpTraceAutoConfiguration#httpExchangeTracer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.trace.http.HttpExchangeTracer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceAutoConfiguration.ServletTraceFilterConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   HttpTraceAutoConfiguration.ServletTraceFilterConfiguration#httpTraceFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.httptrace.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HttpTraceEndpointAutoConfiguration#httpTraceEndpoint matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.trace.http.HttpTraceRepository; SearchStrategy: all) found bean 'buildHttpTraceRepository'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.trace.http.HttpTraceEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   InfoContributorAutoConfiguration#envInfoContributor matched:
      - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.info.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   InfoEndpointAutoConfiguration#infoEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.info.InfoEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxEndpointAutoConfiguration#endpointObjectNameFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.EndpointObjectNameFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxAnnotationEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.JmxEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxMBeanExporter matched:
      - @ConditionalOnSingleCandidate (types: javax.management.MBeanServer; SearchStrategy: all) found a primary bean from beans 'mbeanServer' (OnBeanCondition)

   JvmMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   JvmMetricsAutoConfiguration#classLoaderMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmGcMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmGcMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmMemoryMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmThreadMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAnnotationDrivenConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.kafka.annotation.EnableKafka' (OnClassCondition)

   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactoryConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   KafkaAutoConfiguration#kafkaAdmin matched:
      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.KafkaAdmin; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAutoConfiguration#kafkaProducerListener matched:
      - @ConditionalOnMissingBean (types: org.springframework.kafka.support.ProducerListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.kafka.KafkaClientMetrics', 'org.springframework.kafka.core.ProducerFactory' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   KafkaMetricsAutoConfiguration.KafkaStreamsMetricsConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.kafka.KafkaStreamsMetrics', 'org.springframework.kafka.config.StreamsBuilderFactoryBean' (OnClassCondition)

   LettuceConnectionConfiguration matched:
      - @ConditionalOnClass found required class 'io.lettuce.core.RedisClient' (OnClassCondition)
      - @ConditionalOnProperty (spring.redis.client-type=lettuce) matched (OnPropertyCondition)

   LettuceConnectionConfiguration#lettuceClientResources matched:
      - @ConditionalOnMissingBean (types: io.lettuce.core.resource.ClientResources; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration#redisConnectionFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LogFileWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.logfile.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   LogFileWebEndpointAutoConfiguration#logFileWebEndpoint matched:
      - Log File found logging.file.path var/log (LogFileWebEndpointAutoConfiguration.LogFileCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LogFileWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LogbackMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'ch.qos.logback.classic.LoggerContext', 'org.slf4j.LoggerFactory' (OnClassCondition)
      - LogbackLoggingCondition ILoggerFactory is a Logback LoggerContext (LogbackMetricsAutoConfiguration.LogbackLoggingCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   LogbackMetricsAutoConfiguration#logbackMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.logging.LogbackMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoggersEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.loggers.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   LoggersEndpointAutoConfiguration#loggersEndpoint matched:
      - Logging System enabled (LoggersEndpointAutoConfiguration.OnEnabledLoggingSystemCondition)
      - @ConditionalOnBean (types: org.springframework.boot.logging.LoggingSystem; SearchStrategy: all) found bean 'springBootLoggingSystem'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LoggersEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ManagementContextAutoConfiguration.SameManagementContextConfiguration matched:
      - Management Port actual port type (SAME) matched required type (OnManagementPortCondition)

   MappingsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.mappings.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration.SpringMvcConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   MetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)

   MetricsAutoConfiguration#micrometerClock matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MetricsEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint no property management.endpoint.metrics.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   MetricsEndpointAutoConfiguration#metricsEndpoint matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.MetricsEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.mongodb.client.MongoClient' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration#mongo matched:
      - @ConditionalOnMissingBean (types: com.mongodb.client.MongoClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration.MongoClientSettingsConfiguration matched:
      - @ConditionalOnMissingBean (types: com.mongodb.MongoClientSettings; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDataAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'com.mongodb.client.MongoClient', 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)

   MongoDataConfiguration#mongoCustomConversions matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.convert.MongoCustomConversions; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDataConfiguration#mongoMappingContext matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.mapping.MongoMappingContext; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryConfiguration matched:
      - @ConditionalOnSingleCandidate (types: com.mongodb.client.MongoClient; SearchStrategy: all) found a primary bean from beans 'mongo'; @ConditionalOnMissingBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) found bean 'mongoDatabaseFactory' (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#gridFsTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.gridfs.GridFsOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#mappingMongoConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.convert.MongoConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#mongoTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.MongoOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: org.springframework.data.mongodb.core.MongoTemplate; SearchStrategy: all) found bean 'mongoTemplate' (OnBeanCondition)

   MongoHealthContributorAutoConfiguration#mongoHealthContributor matched:
      - @ConditionalOnMissingBean (names: mongoHealthIndicator,mongoHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.mongodb.MongoClientSettings' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoCommandMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener' (OnClassCondition)
      - @ConditionalOnProperty (management.metrics.mongo.command.enabled=true) matched (OnPropertyCondition)

   MongoMetricsAutoConfiguration.MongoCommandMetricsConfiguration#mongoCommandTagsProvider matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoCommandTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoCommandMetricsConfiguration#mongoMetricsCommandListener matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoConnectionPoolMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener' (OnClassCondition)
      - @ConditionalOnProperty (management.metrics.mongo.connectionpool.enabled=true) matched (OnPropertyCondition)

   MongoMetricsAutoConfiguration.MongoConnectionPoolMetricsConfiguration#mongoConnectionPoolTagsProvider matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoConnectionPoolTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoConnectionPoolMetricsConfiguration#mongoMetricsConnectionPoolListener matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'com.mongodb.client.MongoClient', 'org.springframework.data.mongodb.repository.MongoRepository' (OnClassCondition)
      - @ConditionalOnRepositoryType configured type of 'AUTO' matched required type (OnRepositoryTypeCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean,org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisLanguageDriverAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.apache.ibatis.scripting.LanguageDriver' (OnClassCondition)

   NettyAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ReactiveHealthEndpointConfiguration matched:
      - @ConditionalOnClass found required class 'reactor.core.publisher.Flux' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)

   ReactiveHealthEndpointConfiguration#reactiveHealthContributorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisAutoConfiguration#stringRedisTemplate matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a primary bean from beans 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.core.StringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisCacheConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)
      - Cache org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration automatic cache type (CacheCondition)

   RedisHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory' (OnBeanCondition)

   RedisReactiveAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'org.springframework.data.redis.core.ReactiveRedisTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisReactiveAutoConfiguration#reactiveRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveAutoConfiguration#reactiveStringRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveStringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'reactor.core.publisher.Flux' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory' (OnBeanCondition)

   RedisReactiveHealthContributorAutoConfiguration#redisHealthContributor matched:
      - @ConditionalOnMissingBean (names: redisHealthIndicator,redisHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.redis.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.repository.Repository' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#metricsRepositoryMethodInvocationListener matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#repositoryTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)

   RestTemplateMetricsConfiguration#restTemplateExchangeTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.web.client.RestTemplateExchangeTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ScheduledTasksEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.scheduledtasks.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ScheduledTasksEndpointAutoConfiguration#scheduledTasksEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletEndpointManagementContextConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   ServletEndpointManagementContextConfiguration.WebMvcServletEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)

   ServletManagementContextAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.Servlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ShutdownEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint found property management.endpoint.shutdown.enabled with value true; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ShutdownEndpointAutoConfiguration#shutdownEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.ShutdownEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SimpleMetricsExportAutoConfiguration matched:
      - @ConditionalOnEnabledMetricsExport management.metrics.export.defaults.enabled is considered true (OnMetricsExportEnabledCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) found bean 'micrometerClock'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleMetricsExportAutoConfiguration#simpleConfig matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.simple.SimpleConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - matched (SpringBootAdminClientEnabledCondition)

   SpringBootAdminClientAutoConfiguration#registrationListener matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.RegistrationApplicationListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration#registrator matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.ApplicationRegistrator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration#startupDateMetadataContributor matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.metadata.StartupDateMetadataContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration.BlockingRegistrationClientConfig matched:
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration.BlockingRegistrationClientConfig#registrationClient matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.BlockingRegistrationClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration.ServletConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringBootAdminClientAutoConfiguration.ServletConfiguration#applicationFactory matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.ApplicationFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   Swagger2DocumentationConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   SystemMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   SystemMetricsAutoConfiguration#fileDescriptorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.FileDescriptorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#processorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.ProcessorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#uptimeMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.UptimeMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThreadDumpEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.threaddump.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ThreadDumpEndpointAutoConfiguration#dumpEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.ThreadDumpEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.thymeleaf.templatemode.TemplateMode', 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   ThymeleafAutoConfiguration.DefaultTemplateResolverConfiguration matched:
      - @ConditionalOnMissingBean (names: defaultTemplateResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafDefaultConfiguration#templateEngine matched:
      - @ConditionalOnMissingBean (types: org.thymeleaf.spring5.ISpringTemplateEngine; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafJava8TimeDialect matched:
      - @ConditionalOnClass found required class 'org.thymeleaf.extras.java8time.dialect.Java8TimeDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafJava8TimeDialect#java8TimeDialect matched:
      - @ConditionalOnMissingBean (types: org.thymeleaf.extras.java8time.dialect.Java8TimeDialect; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.thymeleaf.enabled) matched (OnPropertyCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration.ThymeleafViewResolverConfiguration#thymeleafViewResolver matched:
      - @ConditionalOnMissingBean (names: thymeleafViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TomcatMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.tomcat.TomcatMetrics', 'org.apache.catalina.Manager' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   TomcatMetricsAutoConfiguration#tomcatMetricsBinder matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.tomcat.TomcatMetrics,org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'firstTransactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a primary bean from beans 'firstTransactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration#controllerEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#endpointMediaTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#pathMappedEndpoints matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#webEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration#servletEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) found beans 'webEndpointDiscoverer', 'dispatcherServlet' (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#controllerEndpointHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#webEndpointServletHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   WebMvcMetricsAutoConfiguration#webMvcTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AppOpticsMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.appoptics.AppOpticsMeterRegistry' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AtlasMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.atlas.AtlasMeterRegistry' (OnClassCondition)

   AuditAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnProperty (management.auditevents.enabled) matched (OnPropertyCondition)

   AuditEventsEndpointAutoConfiguration#auditEventsEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)

   AvailabilityHealthContributorAutoConfiguration#livenessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.livenessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityHealthContributorAutoConfiguration#readinessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.readinessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityProbesAutoConfiguration:
      Did not match:
         - Probes availability not running on a supported cloud platform (AvailabilityProbesAutoConfiguration.ProbesCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: cacheResolver types: org.springframework.cache.CacheManager; SearchStrategy: all) found beans of type 'org.springframework.cache.CacheManager' cacheManager (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CacheMeterBinderProvidersConfiguration.CaffeineCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Cache' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.EhCache2CacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Ehcache' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.HazelcastCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'com.hazelcast.spring.cache.HazelcastCache', 'com.hazelcast.core.Hazelcast' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.JCacheCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.CacheManager' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (management.cloudfoundry.enabled) matched (OnPropertyCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CompositeMeterRegistryConfiguration:
      Did not match:
         - NoneNestedConditions 1 matched 1 did not; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.SingleInjectableMeterRegistry @ConditionalOnSingleCandidate (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found a primary bean from beans 'simpleMeterRegistry'; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.NoMeterRegistryCondition @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition)

   ConnectionFactoryHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   ConnectionPoolMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.pool.ConnectionPool' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceInitializationConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) did not find a primary bean from beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)

   DataSourcePoolMetricsAutoConfiguration.DataSourcePoolMetadataMetricsConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider (OnBeanCondition)

   DatadogMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.datadog.DatadogMeterRegistry' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   DruidDataSourceAutoConfigure#dataSource:
      Did not match:
         - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) found beans of type 'javax.sql.DataSource' first, second, dynamicDataSource (OnBeanCondition)

   DruidFilterConfiguration#commonsLogFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.commons-log.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#configFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.config.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#encodingConvertFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.encoding.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#log4j2Filter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.log4j2.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#log4jFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.log4j.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#slf4jLogFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.slf4j.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#statFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.stat.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#wallConfig:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.wall.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#wallFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.wall.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidSpringAopConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.aop-patterns) did not find property 'spring.datasource.druid.aop-patterns' (OnPropertyCondition)

   DynatraceMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.dynatrace.DynatraceMeterRegistry' (OnClassCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.elastic.ElasticMeterRegistry' (OnClassCondition)

   ElasticSearchReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ElasticSearchRestHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestHighLevelClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestHighLevelClient' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'de.flapdoodle.embed.mongo.MongodStarter' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FlywayEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GangliaMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.ganglia.GangliaMeterRegistry' (OnClassCondition)

   GraphiteMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.graphite.GraphiteMeterRegistry' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.WebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HealthEndpointReactiveWebExtensionConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManager' (OnClassCondition)

   HibernateMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManagerFactory' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HttpTraceAutoConfiguration.ReactiveTraceFilterConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   HumioMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.humio.HumioMeterRegistry' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxDbHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.influx.InfluxMeterRegistry' (OnClassCondition)

   InfoContributorAutoConfiguration#buildInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.BuildProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#gitInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.GitProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   IntegrationGraphEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.graph.IntegrationGraphServer' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JdbcTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) did not find a primary bean from beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)

   JedisConnectionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.apache.commons.pool2.impl.GenericObjectPool', 'redis.clients.jedis.Jedis' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JerseySameManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JerseyServerMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.jersey2.server.MetricsApplicationEventListener' (OnClassCondition)

   JerseyWebEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JettyMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.server.Server' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmsHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   JmxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.jmx.JmxMeterRegistry' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JolokiaEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jolokia.http.AgentServlet' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.Transaction' (OnClassCondition)

   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactory:
      Did not match:
         - @ConditionalOnMissingBean (names: kafkaListenerContainerFactory; SearchStrategy: all) found beans named kafkaListenerContainerFactory (OnBeanCondition)

   KafkaAnnotationDrivenConfiguration.EnableKafkaConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: org.springframework.kafka.config.internalKafkaListenerAnnotationProcessor; SearchStrategy: all) found beans named org.springframework.kafka.config.internalKafkaListenerAnnotationProcessor (OnBeanCondition)

   KafkaAutoConfiguration#kafkaConsumerFactory:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.kafka.core.ConsumerFactory; SearchStrategy: all) found beans of type 'org.springframework.kafka.core.ConsumerFactory' consumerFactory (OnBeanCondition)

   KafkaAutoConfiguration#kafkaJaasInitializer:
      Did not match:
         - @ConditionalOnProperty (spring.kafka.jaas.enabled) did not find property 'spring.kafka.jaas.enabled' (OnPropertyCondition)

   KafkaAutoConfiguration#kafkaProducerFactory:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.kafka.core.ProducerFactory; SearchStrategy: all) found beans of type 'org.springframework.kafka.core.ProducerFactory' producerFactory (OnBeanCondition)

   KafkaAutoConfiguration#kafkaTemplate:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.kafka.core.KafkaTemplate; SearchStrategy: all) found beans of type 'org.springframework.kafka.core.KafkaTemplate' kafkaTemplate (OnBeanCondition)

   KafkaAutoConfiguration#kafkaTransactionManager:
      Did not match:
         - @ConditionalOnProperty (spring.kafka.producer.transaction-id-prefix) did not find property 'spring.kafka.producer.transaction-id-prefix' (OnPropertyCondition)

   KafkaStreamsAnnotationDrivenConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.kafka.streams.StreamsBuilder' (OnClassCondition)

   KairosMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.kairos.KairosMeterRegistry' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.LdapOperations' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   LiquibaseEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.integration.spring.SpringLiquibase' (OnClassCondition)

   Log4J2MetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.logging.log4j.core.LoggerContext' (OnClassCondition)

   MailHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.mail.javamail.JavaMailSenderImpl; SearchStrategy: all) did not find any beans of type org.springframework.mail.javamail.JavaMailSenderImpl (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnClassCondition)
         - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.JndiNameProperty @ConditionalOnProperty (spring.mail.jndi-name) did not find property 'jndi-name'; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.HostProperty @ConditionalOnProperty (spring.mail.host) did not find property 'host' (MailSenderAutoConfiguration.MailSenderCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.mail.internet.MimeMessage', 'javax.activation.MimeType', 'org.springframework.mail.MailSender' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   ManagementContextAutoConfiguration.DifferentManagementContextConfiguration:
      Did not match:
         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)

   ManagementWebSecurityAutoConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter,org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) did not find any beans; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass did not find required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ReactiveWebConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.data.mongodb.core.ReactiveMongoTemplate; SearchStrategy: all) did not find any beans of type org.springframework.data.mongodb.core.ReactiveMongoTemplate (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'org.springframework.data.mongodb.core.ReactiveMongoTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)
         - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   MybatisAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) did not find a primary bean from beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.FreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver', 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriverConfig' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.LegacyFreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.LegacyVelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.velocity.Driver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.ThymeleafConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.thymeleaf.ThymeleafLanguageDriver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.VelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.velocity.VelocityLanguageDriver', 'org.mybatis.scripting.velocity.VelocityLanguageDriverConfig' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NewRelicMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.newrelic.NewRelicMeterRegistry' (OnClassCondition)

   NoOpMeterRegistryConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (OnBeanCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PrometheusMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.prometheus.PrometheusMeterRegistry' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   QuartzEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   RabbitHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.amqp.rabbit.core.RabbitTemplate' (OnClassCondition)

   RabbitMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.ConnectionFactory' (OnClassCondition)

   ReactiveCloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveManagementContextAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveManagementWebSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration#redisTemplate:
      Did not match:
         - @ConditionalOnMissingBean (names: redisTemplate; SearchStrategy: all) found beans named redisTemplate (OnBeanCondition)

   RedisHealthContributorAutoConfiguration#redisHealthContributor:
      Did not match:
         - @ConditionalOnMissingBean (names: redisHealthIndicator,redisHealthContributor; SearchStrategy: all) found beans named redisHealthContributor (OnBeanCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SecurityRequestMatchersManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.web.util.matcher.RequestMatcher' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletEndpointManagementContextConfiguration.JerseyServletEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   ServletManagementContextAutoConfiguration.ApplicationContextFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (management.server.add-application-context-header=true) did not find property 'add-application-context-header' (OnPropertyCondition)

   ServletWebServerFactoryAutoConfiguration#forwardedHeaderFilter:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SessionsEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.FindByIndexNameSessionRepository' (OnClassCondition)

   SignalFxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.signalfx.SignalFxMeterRegistry' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SolrHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.SolrClient' (OnClassCondition)

   SpringBootAdminClientAutoConfiguration.ReactiveConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   SpringBootAdminClientAutoConfiguration.ReactiveRegistrationClientConfig:
      Did not match:
         - @ConditionalOnBean did not find required type 'org.springframework.web.reactive.function.client.WebClient$Builder' (OnBeanCondition)
         - @ConditionalOnBean (types: org.springframework.web.reactive.function.client.WebClient$Builder; SearchStrategy: all) did not find any beans of type org.springframework.web.reactive.function.client.WebClient$Builder (OnBeanCondition)

   SpringBootAdminClientCloudFoundryAutoConfiguration:
      Did not match:
         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)
      Matched:
         - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
         - matched (SpringBootAdminClientEnabledCondition)

   StackdriverMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.stackdriver.StackdriverMeterRegistry' (OnClassCondition)

   StartupEndpointAutoConfiguration:
      Did not match:
         - ApplicationStartup configured applicationStartup is of type class org.springframework.core.metrics.DefaultApplicationStartup, expected BufferingApplicationStartup. (StartupEndpointAutoConfiguration.ApplicationStartupCondition)

   StatsdMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.statsd.StatsdMeterRegistry' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor:
      Did not match:
         - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) found beans of type 'java.util.concurrent.Executor' asyncThreadPoolTaskExecutor (OnBeanCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration.DataAttributeDialectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.mxab.thymeleaf.extras.dataattribute.dialect.DataAttributeDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafReactiveConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ThymeleafAutoConfiguration.ThymeleafSecurityDialectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.extras.springsecurity5.dialect.SpringSecurityDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebFluxConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ThymeleafAutoConfiguration.ThymeleafWebLayoutConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'nz.net.ultraq.thymeleaf.LayoutDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration#resourceUrlEncodingFilter:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)

   WavefrontMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebClientMetricsConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebFluxEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   WebFluxMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport' org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)
         - Ancestor org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.client.core.WebServiceTemplate' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

    org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration



2022-08-30 10:50:01.400 [main] [DEBUG] o.s.b.c.p.s.ConfigurationPropertySourcesPropertyResolver$DefaultResolver - Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
2022-08-30 10:50:01.401 [main] [INFO ] com.test.springboot.SpringbootApplication - Started SpringbootApplication in 4.773 seconds (JVM running for 5.405)
2022-08-30 10:50:01.404 [main] [DEBUG] o.s.boot.availability.ApplicationAvailabilityBean - Application availability state LivenessState changed to CORRECT
2022-08-30 10:50:01.406 [main] [DEBUG] o.s.boot.availability.ApplicationAvailabilityBean - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2022-08-30 10:50:01.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:50:01.423 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:50:01.434 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:50:01.465 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Cluster ID: N_qWYp0DR-CyFe0Vu-kqrw
2022-08-30 10:50:01.466 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 10:50:01.469 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 10:50:01.555 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 10:50:01.585 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully joined group with generation Generation{generationId=100, memberId='consumer-test-consumer-1-74d5f880-fb39-44e7-a0d7-976b793664ec', protocol='range'}
2022-08-30 10:50:01.587 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Finished assignment for group at generation 100: {consumer-test-consumer-1-74d5f880-fb39-44e7-a0d7-976b793664ec=Assignment(partitions=[test-0])}
2022-08-30 10:50:01.623 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully synced group in generation Generation{generationId=100, memberId='consumer-test-consumer-1-74d5f880-fb39-44e7-a0d7-976b793664ec', protocol='range'}
2022-08-30 10:50:01.624 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Notifying assignor about the new Assignment(partitions=[test-0])
2022-08-30 10:50:01.626 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Adding newly assigned partitions: test-0
2022-08-30 10:50:01.690 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Setting offset for partition test-0 to the committed offset FetchPosition{offset=73, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[110.40.220.207:9092 (id: 1 rack: null)], epoch=0}}
2022-08-30 10:50:01.691 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions assigned: [test-0]
2022-08-30 10:50:02.124 [RMI TCP Connection(3)-192.168.9.100] [INFO ] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-08-30 10:50:02.124 [RMI TCP Connection(3)-192.168.9.100] [INFO ] org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-08-30 10:50:02.124 [RMI TCP Connection(3)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2022-08-30 10:50:02.125 [RMI TCP Connection(3)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2022-08-30 10:50:02.125 [RMI TCP Connection(3)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2022-08-30 10:50:02.126 [RMI TCP Connection(3)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3adda439
2022-08-30 10:50:02.126 [RMI TCP Connection(3)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@6e35004e
2022-08-30 10:50:02.127 [RMI TCP Connection(3)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2022-08-30 10:50:02.127 [RMI TCP Connection(3)-192.168.9.100] [INFO ] org.springframework.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2022-08-30 10:50:02.146 [RMI TCP Connection(2)-192.168.9.100] [INFO ] com.alibaba.druid.pool.DruidDataSource - {dataSource-1,mybatis} inited
2022-08-30 10:50:02.521 [RMI TCP Connection(2)-192.168.9.100] [INFO ] com.alibaba.druid.pool.DruidDataSource - {dataSource-2,springbootdb} inited
2022-08-30 10:50:02.810 [RMI TCP Connection(2)-192.168.9.100] [INFO ] org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:89}] to localhost:27017
2022-08-30 10:50:03.453 [registrationTask1] [WARN ] d.c.b.a.client.registration.ApplicationRegistrator - Failed to register application as Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/) at spring-boot-admin ([http://localhost:9002/instances]): I/O error on POST request for "http://localhost:9002/instances": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect. Further attempts are logged on DEBUG level
2022-08-30 10:50:06.497 [http-nio-8081-exec-2] [DEBUG] org.springframework.web.servlet.DispatcherServlet - POST "/mongouser/muti", parameters={masked}
2022-08-30 10:50:06.502 [http-nio-8081-exec-2] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserBetween(String, String)
2022-08-30 10:50:06.518 [http-nio-8081-exec-2] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 10:50:06.518 [http-nio-8081-exec-2] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Nothing to write: null body
2022-08-30 10:50:06.519 [http-nio-8081-exec-2] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 10:50:11.409 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:50:11.409 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:50:11.409 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:50:21.417 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:50:21.417 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:50:21.417 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:50:31.417 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:50:31.418 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:50:31.418 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:50:41.408 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:50:41.408 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:50:41.409 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:50:51.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:50:51.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:50:51.416 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:51:01.419 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:51:01.419 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:51:01.419 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:51:11.420 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:51:11.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:51:11.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:51:21.407 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:51:21.407 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:51:21.407 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:51:31.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:51:31.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:51:31.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:51:41.412 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:51:41.412 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:51:41.412 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:51:51.411 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:51:51.411 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:51:51.412 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:52:01.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:52:01.423 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:52:01.423 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:52:11.411 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:52:11.411 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:52:11.411 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:52:21.413 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:52:21.413 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:52:21.413 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:52:31.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:52:31.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:52:31.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:52:41.410 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:52:41.410 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:52:41.410 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:52:51.407 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:52:51.407 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:52:51.407 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:53:01.410 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:53:01.410 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:53:01.411 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:53:11.409 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:53:11.409 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:53:11.410 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:53:21.407 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:53:21.407 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:53:21.408 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:53:31.416 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:53:31.416 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:53:31.416 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:53:41.408 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:53:41.408 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:53:41.408 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:53:51.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:53:51.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:53:51.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:54:01.413 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:54:01.413 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:54:01.413 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:54:11.416 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:54:11.416 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:54:11.416 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:54:21.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:54:21.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:54:21.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:54:31.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:54:31.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:54:31.423 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:54:41.418 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:54:41.418 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:54:41.418 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:54:51.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:54:51.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:54:51.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:55:01.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:55:01.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:55:01.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:55:11.417 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:55:11.417 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:55:11.418 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:55:21.414 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:55:21.414 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:55:21.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:55:31.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:55:31.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:55:31.416 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:55:41.412 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:55:41.412 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:55:41.412 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:55:51.409 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:55:51.409 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:55:51.409 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:56:01.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:56:01.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:56:01.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:56:11.424 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:56:11.424 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:56:11.424 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:56:21.411 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:56:21.411 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:56:21.412 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:56:31.419 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:56:31.419 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:56:31.420 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:56:41.424 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:56:41.424 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:56:41.424 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:56:51.412 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:56:51.412 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:56:51.412 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:57:01.411 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:57:01.411 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:57:01.411 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:57:11.419 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:57:11.419 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:57:11.420 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:57:21.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:57:21.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:57:21.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:57:31.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:57:31.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:57:31.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:57:41.425 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:57:41.425 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:57:41.425 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:57:51.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:57:51.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:57:51.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:58:01.414 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:58:01.414 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:58:01.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:58:11.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:58:11.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:58:11.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:58:21.420 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:58:21.420 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:58:21.420 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:58:31.419 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:58:31.419 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:58:31.420 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:58:41.426 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:58:41.426 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:58:41.426 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:58:51.413 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:58:51.413 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:58:51.413 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:59:01.417 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:59:01.417 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:59:01.417 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:59:11.412 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:59:11.412 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:59:11.412 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:59:21.425 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:59:21.425 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:59:21.425 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:59:31.424 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:59:31.424 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:59:31.424 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:59:41.414 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:59:41.414 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:59:41.414 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 10:59:51.428 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 10:59:51.428 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 10:59:51.428 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:00:01.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:00:01.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:00:01.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:00:11.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:00:11.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:00:11.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:00:21.425 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:00:21.425 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:00:21.426 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:00:31.416 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:00:31.416 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:00:31.416 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:00:41.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:00:41.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:00:41.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:00:51.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:00:51.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:00:51.423 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:01:01.425 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:01:01.425 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:01:01.425 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:01:11.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:01:11.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:01:11.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:01:21.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:01:21.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:01:21.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:01:31.417 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:01:31.417 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:01:31.418 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:01:41.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:01:41.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:01:41.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:01:51.414 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:01:51.414 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:01:51.414 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:02:01.413 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:02:01.413 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:02:01.413 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:02:11.425 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:02:11.425 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:02:11.425 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:02:21.414 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:02:21.414 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:02:21.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:02:31.428 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:02:31.428 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:02:31.429 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:02:41.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:02:41.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:02:41.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:02:51.425 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:02:51.425 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:02:51.425 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:03:01.420 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:03:01.420 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:03:01.420 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:03:11.418 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:03:11.418 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:03:11.418 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:03:21.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:03:21.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:03:21.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:03:31.420 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:03:31.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:03:31.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:03:41.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:03:41.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:03:41.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:03:51.414 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:03:51.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:03:51.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:04:01.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:04:01.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:04:01.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:04:11.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:04:11.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:04:11.428 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:04:21.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:04:21.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:04:21.416 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:04:31.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:04:31.423 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:04:31.423 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:04:41.425 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:04:41.426 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:04:41.426 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:04:51.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:04:51.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:04:51.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:05:01.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:05:01.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:05:01.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:05:11.412 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:05:11.413 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:05:11.413 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:05:21.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:05:21.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:05:21.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:05:31.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:05:31.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:05:31.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:05:41.423 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:05:41.423 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:05:41.423 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:05:51.414 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:05:51.414 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:05:51.414 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:06:01.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:06:01.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:06:01.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:06:11.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:06:11.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:06:11.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:06:21.424 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:06:21.425 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:06:21.425 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:06:31.428 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:06:31.428 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:06:31.429 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:06:41.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:06:41.423 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:06:41.423 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:06:51.418 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:06:51.418 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:06:51.418 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:07:01.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:07:01.428 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:07:01.428 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:07:11.413 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:07:11.414 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:07:11.414 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:07:21.414 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:07:21.414 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:07:21.414 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:07:31.420 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:07:31.420 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:07:31.420 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:07:41.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:07:41.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:07:41.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:07:51.414 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:07:51.414 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:07:51.414 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:08:01.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:08:01.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:08:01.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:08:11.419 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:08:11.420 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:08:11.420 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:08:21.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:08:21.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:08:21.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:08:31.413 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:08:31.413 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:08:31.413 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:08:41.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:08:41.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:08:41.422 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:08:51.420 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:08:51.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:08:51.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:09:01.426 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:09:01.426 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:09:01.426 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:09:11.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:09:11.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:09:11.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:09:21.426 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:09:21.426 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:09:21.426 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:09:31.416 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:09:31.416 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:09:31.416 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:09:41.413 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:09:41.413 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:09:41.413 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:09:51.417 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:09:51.417 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:09:51.417 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:10:01.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:10:01.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:10:01.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:10:11.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:10:11.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:10:11.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:10:21.413 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:10:21.413 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:10:21.414 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:10:31.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:10:31.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:10:31.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:10:41.413 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:10:41.413 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:10:41.413 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:10:51.413 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:10:51.414 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:10:51.414 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:11:01.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:11:01.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:11:01.416 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:11:11.414 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:11:11.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:11:11.415 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:11:21.425 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:11:21.425 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:11:21.425 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:11:31.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:11:31.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:11:31.421 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:11:41.425 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:11:41.426 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:11:41.426 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:11:51.418 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:11:51.419 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:11:51.419 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:12:01.425 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:12:01.425 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:12:01.425 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:12:11.416 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:12:11.416 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:12:11.416 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:12:16.408 [main] [INFO ] com.test.springboot.SpringbootApplication - Starting SpringbootApplication using Java 1.8.0_291 on gaofengkai with PID 16124 (D:\BackEnd\workspace\springboot\target\classes started by gaofengkai in D:\BackEnd\workspace\springboot)
2022-08-30 11:12:16.411 [main] [INFO ] com.test.springboot.SpringbootApplication - The following profiles are active: prod
2022-08-30 11:12:16.411 [main] [DEBUG] org.springframework.boot.SpringApplication - Loading source class com.test.springboot.SpringbootApplication
2022-08-30 11:12:16.446 [main] [DEBUG] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4dbb42b7
2022-08-30 11:12:17.317 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-08-30 11:12:17.317 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-08-30 11:12:17.322 [main] [DEBUG] o.s.boot.autoconfigure.AutoConfigurationPackages - @EnableAutoConfiguration was declared on a class in the package 'com.test.springboot'. Automatic @Repository and @Entity scanning is enabled.
2022-08-30 11:12:17.365 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 1 MongoDB repository interfaces.
2022-08-30 11:12:17.373 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-08-30 11:12:17.374 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-08-30 11:12:17.386 [main] [INFO ] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.test.springboot.mapper.mongodb.MongoUserDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-08-30 11:12:17.386 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2022-08-30 11:12:17.466 [main] [WARN ] org.mybatis.spring.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'mongoUserDao' and 'com.test.springboot.mapper.mongodb.MongoUserDao' mapperInterface. Bean already defined with the same name!
2022-08-30 11:12:17.950 [main] [DEBUG] o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: C:\Users\Administrator\.m2\repository\org\springframework\boot\spring-boot\2.5.7\spring-boot-2.5.7.jar
2022-08-30 11:12:17.951 [main] [DEBUG] o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: C:\Users\Administrator\.m2\repository\org\springframework\boot\spring-boot\2.5.7\spring-boot-2.5.7.jar
2022-08-30 11:12:17.951 [main] [DEBUG] o.s.b.w.e.tomcat.TomcatServletWebServerFactory - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2022-08-30 11:12:17.963 [main] [INFO ] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2022-08-30 11:12:17.968 [main] [INFO ] org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2022-08-30 11:12:17.969 [main] [INFO ] org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-08-30 11:12:17.969 [main] [INFO ] org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.55]
2022-08-30 11:12:18.041 [main] [INFO ] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-08-30 11:12:18.041 [main] [DEBUG] o.s.b.w.s.c.ServletWebServerApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2022-08-30 11:12:18.041 [main] [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1596 ms
2022-08-30 11:12:18.195 [main] [DEBUG] o.s.b.web.servlet.ServletContextInitializerBeans - Mapping filters: filterRegistrationBean urls=[/*] order=-2147483647, filterRegistrationBean urls=[/*] order=2147483647, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, httpTraceFilter urls=[/*] order=2147483637
2022-08-30 11:12:18.195 [main] [DEBUG] o.s.b.web.servlet.ServletContextInitializerBeans - Mapping servlets: dispatcherServlet urls=[/], statViewServlet urls=[/druid/*]
2022-08-30 11:12:18.208 [main] [DEBUG] o.s.b.a.metrics.web.servlet.WebMvcMetricsFilter - Filter 'webMvcMetricsFilter' configured for use
2022-08-30 11:12:18.209 [main] [DEBUG] o.s.b.w.s.filter.OrderedCharacterEncodingFilter - Filter 'characterEncodingFilter' configured for use
2022-08-30 11:12:18.209 [main] [DEBUG] o.s.boot.actuate.web.trace.servlet.HttpTraceFilter - Filter 'httpTraceFilter' configured for use
2022-08-30 11:12:18.717 [main] [INFO ] org.mongodb.driver.cluster - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2022-08-30 11:12:18.751 [cluster-rtt-ClusterId{value='630d80125d10f22d5517c420', description='null'}-localhost:27017] [INFO ] org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:90}] to localhost:27017
2022-08-30 11:12:18.752 [cluster-ClusterId{value='630d80125d10f22d5517c420', description='null'}-localhost:27017] [INFO ] org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:91}] to localhost:27017
2022-08-30 11:12:18.752 [cluster-ClusterId{value='630d80125d10f22d5517c420', description='null'}-localhost:27017] [INFO ] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=11242100}
2022-08-30 11:12:18.874 [main] [DEBUG] o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2022-08-30 11:12:19.317 [main] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2022-08-30 11:12:19.457 [main] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 44 mappings in 'requestMappingHandlerMapping'
2022-08-30 11:12:19.828 [main] [INFO ] o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 16 endpoint(s) beneath base path '/monitor'
2022-08-30 11:12:19.919 [main] [INFO ] s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-08-30 11:12:20.029 [main] [DEBUG] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2022-08-30 11:12:20.577 [main] [INFO ] org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [110.40.220.207:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-test-consumer-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = test-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2022-08-30 11:12:20.625 [main] [INFO ] org.apache.kafka.common.utils.AppInfoParser - Kafka version: 2.7.2
2022-08-30 11:12:20.625 [main] [INFO ] org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: 37a1cc36bf4d76f3
2022-08-30 11:12:20.625 [main] [INFO ] org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1661829140624
2022-08-30 11:12:20.627 [main] [INFO ] org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Subscribed to topic(s): test
2022-08-30 11:12:20.632 [main] [INFO ] org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2022-08-30 11:12:20.638 [main] [INFO ] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2022-08-30 11:12:20.640 [main] [INFO ] s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2022-08-30 11:12:20.653 [main] [INFO ] s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 6 custom documentation plugin(s)
2022-08-30 11:12:20.688 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 11:12:20.807 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: testUsingGET_1
2022-08-30 11:12:20.809 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: test2UsingGET_1
2022-08-30 11:12:20.819 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 11:12:20.820 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: testAopUsingGET_1
2022-08-30 11:12:20.824 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 11:12:20.826 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getCityUsingPOST_1
2022-08-30 11:12:20.827 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getFirstStudentUsingPOST_1
2022-08-30 11:12:20.830 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 11:12:20.832 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonUsingPOST_1
2022-08-30 11:12:20.834 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingGET_1
2022-08-30 11:12:20.834 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingHEAD_1
2022-08-30 11:12:20.835 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingPOST_1
2022-08-30 11:12:20.835 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingPUT_1
2022-08-30 11:12:20.835 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingPATCH_1
2022-08-30 11:12:20.836 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingDELETE_1
2022-08-30 11:12:20.836 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingOPTIONS_1
2022-08-30 11:12:20.836 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingTRACE_1
2022-08-30 11:12:20.837 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingGET_1
2022-08-30 11:12:20.837 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingHEAD_1
2022-08-30 11:12:20.838 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingPOST_1
2022-08-30 11:12:20.838 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingPUT_1
2022-08-30 11:12:20.838 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingPATCH_1
2022-08-30 11:12:20.839 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingDELETE_1
2022-08-30 11:12:20.839 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingOPTIONS_1
2022-08-30 11:12:20.839 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingTRACE_1
2022-08-30 11:12:20.840 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingGET_1
2022-08-30 11:12:20.841 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingHEAD_1
2022-08-30 11:12:20.841 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingPOST_1
2022-08-30 11:12:20.841 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingPUT_1
2022-08-30 11:12:20.842 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingPATCH_1
2022-08-30 11:12:20.842 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingDELETE_1
2022-08-30 11:12:20.842 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingOPTIONS_1
2022-08-30 11:12:20.843 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingTRACE_1
2022-08-30 11:12:20.843 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: serializationUsingPOST_1
2022-08-30 11:12:20.845 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingGET_1
2022-08-30 11:12:20.846 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingHEAD_1
2022-08-30 11:12:20.846 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingPOST_1
2022-08-30 11:12:20.847 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingPUT_1
2022-08-30 11:12:20.847 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingPATCH_1
2022-08-30 11:12:20.848 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingDELETE_1
2022-08-30 11:12:20.848 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingOPTIONS_1
2022-08-30 11:12:20.848 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingTRACE_1
2022-08-30 11:12:20.852 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 11:12:20.854 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: addRedisUsingPOST_1
2022-08-30 11:12:20.854 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: deleteRedisUsingPOST_1
2022-08-30 11:12:20.855 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getRedisUsingPOST_1
2022-08-30 11:12:20.856 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateRedisUsingPOST_1
2022-08-30 11:12:20.859 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 11:12:20.860 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: addJdbcStudentUsingPOST_1
2022-08-30 11:12:20.861 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: queryStudentByIdUsingGET_1
2022-08-30 11:12:20.862 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: queryStudentById2UsingPOST_1
2022-08-30 11:12:20.863 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: queryStudentById3UsingPOST_1
2022-08-30 11:12:20.876 [main] [DEBUG] o.s.b.a.l.ConditionEvaluationReportLoggingListener - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   AuditEventsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.auditevents.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   AutoConfiguration matched:
      - @ConditionalOnProperty (helloworld=true) matched (OnPropertyCondition)

   BeansEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.beans.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration#beansEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.beans.BeansEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CacheMeterBinderProvidersConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.MeterBinder' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.RedisCacheMeterBinderProviderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.cache.RedisCache' (OnClassCondition)

   CacheMetricsAutoConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.cache.CacheManager; SearchStrategy: all) found bean 'cacheManager' (OnBeanCondition)

   CacheMetricsRegistrarConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'simpleMeterRegistry', 'redisCacheMeterBinderProvider' (OnBeanCondition)

   CachesEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint no property management.endpoint.caches.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   CachesEndpointAutoConfiguration#cachesEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CachesEndpointAutoConfiguration#cachesEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) found bean 'cachesEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CompositeMeterRegistryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.composite.CompositeMeterRegistry' (OnClassCondition)

   ConditionsReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.conditions.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ConditionsReportEndpointAutoConfiguration#conditionsReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.configprops.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) found bean 'configurationPropertiesReportEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration#dbHealthContributor matched:
      - @ConditionalOnMissingBean (names: dbHealthIndicator,dbHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'dynamicDataSource', 'simpleMeterRegistry', 'first', 'second' (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration.HikariDataSourceMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DiskSpaceHealthContributorAutoConfiguration matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   DiskSpaceHealthContributorAutoConfiguration#diskSpaceHealthIndicator matched:
      - @ConditionalOnMissingBean (names: diskSpaceHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   DruidDataSourceAutoConfigure matched:
      - @ConditionalOnClass found required class 'com.alibaba.druid.pool.DruidDataSource' (OnClassCondition)

   DruidStatViewServletConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.datasource.druid.stat-view-servlet.enabled=true) matched (OnPropertyCondition)

   DruidWebStatFilterConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.datasource.druid.web-stat-filter.enabled=true) matched (OnPropertyCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   EndpointAutoConfiguration#endpointCachingOperationInvokerAdvisor matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EndpointAutoConfiguration#endpointOperationParameterMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.env.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) found bean 'environmentEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HealthContributorAutoConfiguration#pingHealthContributor matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   HealthEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint found property management.endpoint.health.enabled with value true; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   HealthEndpointConfiguration#healthContributorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpointGroups matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointGroups; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthHttpCodeStatusMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HttpCodeStatusMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthStatusAggregator matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.StatusAggregator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration#healthEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HeapDumpWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.heapdump.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   HeapDumpWebEndpointAutoConfiguration#heapDumpWebEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.HeapDumpWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpClientMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (management.trace.http.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.trace.http.HttpTraceRepository; SearchStrategy: all) found bean 'buildHttpTraceRepository' (OnBeanCondition)

   HttpTraceAutoConfiguration#httpExchangeTracer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.trace.http.HttpExchangeTracer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceAutoConfiguration.ServletTraceFilterConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   HttpTraceAutoConfiguration.ServletTraceFilterConfiguration#httpTraceFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.httptrace.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   HttpTraceEndpointAutoConfiguration#httpTraceEndpoint matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.trace.http.HttpTraceRepository; SearchStrategy: all) found bean 'buildHttpTraceRepository'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.trace.http.HttpTraceEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   InfoContributorAutoConfiguration#envInfoContributor matched:
      - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.info.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   InfoEndpointAutoConfiguration#infoEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.info.InfoEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxEndpointAutoConfiguration#endpointObjectNameFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.EndpointObjectNameFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxAnnotationEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.JmxEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxMBeanExporter matched:
      - @ConditionalOnSingleCandidate (types: javax.management.MBeanServer; SearchStrategy: all) found a primary bean from beans 'mbeanServer' (OnBeanCondition)

   JvmMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   JvmMetricsAutoConfiguration#classLoaderMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmGcMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmGcMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmMemoryMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmThreadMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAnnotationDrivenConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.kafka.annotation.EnableKafka' (OnClassCondition)

   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactoryConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   KafkaAutoConfiguration#kafkaAdmin matched:
      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.KafkaAdmin; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAutoConfiguration#kafkaProducerListener matched:
      - @ConditionalOnMissingBean (types: org.springframework.kafka.support.ProducerListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.kafka.KafkaClientMetrics', 'org.springframework.kafka.core.ProducerFactory' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   KafkaMetricsAutoConfiguration.KafkaStreamsMetricsConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.kafka.KafkaStreamsMetrics', 'org.springframework.kafka.config.StreamsBuilderFactoryBean' (OnClassCondition)

   LettuceConnectionConfiguration matched:
      - @ConditionalOnClass found required class 'io.lettuce.core.RedisClient' (OnClassCondition)
      - @ConditionalOnProperty (spring.redis.client-type=lettuce) matched (OnPropertyCondition)

   LettuceConnectionConfiguration#lettuceClientResources matched:
      - @ConditionalOnMissingBean (types: io.lettuce.core.resource.ClientResources; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration#redisConnectionFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LogFileWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.logfile.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   LogFileWebEndpointAutoConfiguration#logFileWebEndpoint matched:
      - Log File found logging.file.path var/log (LogFileWebEndpointAutoConfiguration.LogFileCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LogFileWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LogbackMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'ch.qos.logback.classic.LoggerContext', 'org.slf4j.LoggerFactory' (OnClassCondition)
      - LogbackLoggingCondition ILoggerFactory is a Logback LoggerContext (LogbackMetricsAutoConfiguration.LogbackLoggingCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   LogbackMetricsAutoConfiguration#logbackMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.logging.LogbackMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoggersEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.loggers.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   LoggersEndpointAutoConfiguration#loggersEndpoint matched:
      - Logging System enabled (LoggersEndpointAutoConfiguration.OnEnabledLoggingSystemCondition)
      - @ConditionalOnBean (types: org.springframework.boot.logging.LoggingSystem; SearchStrategy: all) found bean 'springBootLoggingSystem'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LoggersEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ManagementContextAutoConfiguration.SameManagementContextConfiguration matched:
      - Management Port actual port type (SAME) matched required type (OnManagementPortCondition)

   MappingsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.mappings.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration.SpringMvcConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   MetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)

   MetricsAutoConfiguration#micrometerClock matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MetricsEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint no property management.endpoint.metrics.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   MetricsEndpointAutoConfiguration#metricsEndpoint matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.MetricsEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.mongodb.client.MongoClient' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration#mongo matched:
      - @ConditionalOnMissingBean (types: com.mongodb.client.MongoClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration.MongoClientSettingsConfiguration matched:
      - @ConditionalOnMissingBean (types: com.mongodb.MongoClientSettings; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDataAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'com.mongodb.client.MongoClient', 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)

   MongoDataConfiguration#mongoCustomConversions matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.convert.MongoCustomConversions; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDataConfiguration#mongoMappingContext matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.mapping.MongoMappingContext; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryConfiguration matched:
      - @ConditionalOnSingleCandidate (types: com.mongodb.client.MongoClient; SearchStrategy: all) found a primary bean from beans 'mongo'; @ConditionalOnMissingBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) found bean 'mongoDatabaseFactory' (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#gridFsTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.gridfs.GridFsOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#mappingMongoConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.convert.MongoConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#mongoTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.MongoOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: org.springframework.data.mongodb.core.MongoTemplate; SearchStrategy: all) found bean 'mongoTemplate' (OnBeanCondition)

   MongoHealthContributorAutoConfiguration#mongoHealthContributor matched:
      - @ConditionalOnMissingBean (names: mongoHealthIndicator,mongoHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.mongodb.MongoClientSettings' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoCommandMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener' (OnClassCondition)
      - @ConditionalOnProperty (management.metrics.mongo.command.enabled=true) matched (OnPropertyCondition)

   MongoMetricsAutoConfiguration.MongoCommandMetricsConfiguration#mongoCommandTagsProvider matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoCommandTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoCommandMetricsConfiguration#mongoMetricsCommandListener matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoConnectionPoolMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener' (OnClassCondition)
      - @ConditionalOnProperty (management.metrics.mongo.connectionpool.enabled=true) matched (OnPropertyCondition)

   MongoMetricsAutoConfiguration.MongoConnectionPoolMetricsConfiguration#mongoConnectionPoolTagsProvider matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoConnectionPoolTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoConnectionPoolMetricsConfiguration#mongoMetricsConnectionPoolListener matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'com.mongodb.client.MongoClient', 'org.springframework.data.mongodb.repository.MongoRepository' (OnClassCondition)
      - @ConditionalOnRepositoryType configured type of 'AUTO' matched required type (OnRepositoryTypeCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean,org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisLanguageDriverAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.apache.ibatis.scripting.LanguageDriver' (OnClassCondition)

   NettyAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ReactiveHealthEndpointConfiguration matched:
      - @ConditionalOnClass found required class 'reactor.core.publisher.Flux' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)

   ReactiveHealthEndpointConfiguration#reactiveHealthContributorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisAutoConfiguration#stringRedisTemplate matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a primary bean from beans 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.core.StringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisCacheConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)
      - Cache org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration automatic cache type (CacheCondition)

   RedisHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory' (OnBeanCondition)

   RedisReactiveAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'org.springframework.data.redis.core.ReactiveRedisTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisReactiveAutoConfiguration#reactiveRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveAutoConfiguration#reactiveStringRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveStringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'reactor.core.publisher.Flux' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory' (OnBeanCondition)

   RedisReactiveHealthContributorAutoConfiguration#redisHealthContributor matched:
      - @ConditionalOnMissingBean (names: redisHealthIndicator,redisHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.redis.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.repository.Repository' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#metricsRepositoryMethodInvocationListener matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#repositoryTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)

   RestTemplateMetricsConfiguration#restTemplateExchangeTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.web.client.RestTemplateExchangeTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ScheduledTasksEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.scheduledtasks.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ScheduledTasksEndpointAutoConfiguration#scheduledTasksEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletEndpointManagementContextConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   ServletEndpointManagementContextConfiguration.WebMvcServletEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)

   ServletManagementContextAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.Servlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ShutdownEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint found property management.endpoint.shutdown.enabled with value true; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ShutdownEndpointAutoConfiguration#shutdownEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.ShutdownEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SimpleMetricsExportAutoConfiguration matched:
      - @ConditionalOnEnabledMetricsExport management.metrics.export.defaults.enabled is considered true (OnMetricsExportEnabledCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) found bean 'micrometerClock'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleMetricsExportAutoConfiguration#simpleConfig matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.simple.SimpleConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - matched (SpringBootAdminClientEnabledCondition)

   SpringBootAdminClientAutoConfiguration#registrationListener matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.RegistrationApplicationListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration#registrator matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.ApplicationRegistrator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration#startupDateMetadataContributor matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.metadata.StartupDateMetadataContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration.BlockingRegistrationClientConfig matched:
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration.BlockingRegistrationClientConfig#registrationClient matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.BlockingRegistrationClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration.ServletConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringBootAdminClientAutoConfiguration.ServletConfiguration#applicationFactory matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.ApplicationFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   Swagger2DocumentationConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   SystemMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   SystemMetricsAutoConfiguration#fileDescriptorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.FileDescriptorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#processorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.ProcessorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#uptimeMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.UptimeMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThreadDumpEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.threaddump.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ThreadDumpEndpointAutoConfiguration#dumpEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.ThreadDumpEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.thymeleaf.templatemode.TemplateMode', 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   ThymeleafAutoConfiguration.DefaultTemplateResolverConfiguration matched:
      - @ConditionalOnMissingBean (names: defaultTemplateResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafDefaultConfiguration#templateEngine matched:
      - @ConditionalOnMissingBean (types: org.thymeleaf.spring5.ISpringTemplateEngine; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafJava8TimeDialect matched:
      - @ConditionalOnClass found required class 'org.thymeleaf.extras.java8time.dialect.Java8TimeDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafJava8TimeDialect#java8TimeDialect matched:
      - @ConditionalOnMissingBean (types: org.thymeleaf.extras.java8time.dialect.Java8TimeDialect; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.thymeleaf.enabled) matched (OnPropertyCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration.ThymeleafViewResolverConfiguration#thymeleafViewResolver matched:
      - @ConditionalOnMissingBean (names: thymeleafViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TomcatMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.tomcat.TomcatMetrics', 'org.apache.catalina.Manager' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   TomcatMetricsAutoConfiguration#tomcatMetricsBinder matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.tomcat.TomcatMetrics,org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'firstTransactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a primary bean from beans 'firstTransactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration#controllerEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#endpointMediaTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#pathMappedEndpoints matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#webEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration#servletEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) found beans 'webEndpointDiscoverer', 'dispatcherServlet' (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#controllerEndpointHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#webEndpointServletHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   WebMvcMetricsAutoConfiguration#webMvcTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AppOpticsMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.appoptics.AppOpticsMeterRegistry' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AtlasMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.atlas.AtlasMeterRegistry' (OnClassCondition)

   AuditAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnProperty (management.auditevents.enabled) matched (OnPropertyCondition)

   AuditEventsEndpointAutoConfiguration#auditEventsEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)

   AvailabilityHealthContributorAutoConfiguration#livenessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.livenessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityHealthContributorAutoConfiguration#readinessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.readinessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityProbesAutoConfiguration:
      Did not match:
         - Probes availability not running on a supported cloud platform (AvailabilityProbesAutoConfiguration.ProbesCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: cacheResolver types: org.springframework.cache.CacheManager; SearchStrategy: all) found beans of type 'org.springframework.cache.CacheManager' cacheManager (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CacheMeterBinderProvidersConfiguration.CaffeineCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Cache' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.EhCache2CacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Ehcache' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.HazelcastCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'com.hazelcast.spring.cache.HazelcastCache', 'com.hazelcast.core.Hazelcast' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.JCacheCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.CacheManager' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (management.cloudfoundry.enabled) matched (OnPropertyCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CompositeMeterRegistryConfiguration:
      Did not match:
         - NoneNestedConditions 1 matched 1 did not; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.SingleInjectableMeterRegistry @ConditionalOnSingleCandidate (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found a primary bean from beans 'simpleMeterRegistry'; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.NoMeterRegistryCondition @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition)

   ConnectionFactoryHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   ConnectionPoolMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.pool.ConnectionPool' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceInitializationConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) did not find a primary bean from beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)

   DataSourcePoolMetricsAutoConfiguration.DataSourcePoolMetadataMetricsConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider (OnBeanCondition)

   DatadogMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.datadog.DatadogMeterRegistry' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   DruidDataSourceAutoConfigure#dataSource:
      Did not match:
         - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) found beans of type 'javax.sql.DataSource' first, second, dynamicDataSource (OnBeanCondition)

   DruidFilterConfiguration#commonsLogFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.commons-log.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#configFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.config.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#encodingConvertFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.encoding.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#log4j2Filter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.log4j2.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#log4jFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.log4j.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#slf4jLogFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.slf4j.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#statFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.stat.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#wallConfig:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.wall.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#wallFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.wall.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidSpringAopConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.aop-patterns) did not find property 'spring.datasource.druid.aop-patterns' (OnPropertyCondition)

   DynatraceMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.dynatrace.DynatraceMeterRegistry' (OnClassCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.elastic.ElasticMeterRegistry' (OnClassCondition)

   ElasticSearchReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ElasticSearchRestHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestHighLevelClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestHighLevelClient' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'de.flapdoodle.embed.mongo.MongodStarter' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FlywayEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GangliaMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.ganglia.GangliaMeterRegistry' (OnClassCondition)

   GraphiteMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.graphite.GraphiteMeterRegistry' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.WebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HealthEndpointReactiveWebExtensionConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManager' (OnClassCondition)

   HibernateMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManagerFactory' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HttpTraceAutoConfiguration.ReactiveTraceFilterConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   HumioMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.humio.HumioMeterRegistry' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxDbHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.influx.InfluxMeterRegistry' (OnClassCondition)

   InfoContributorAutoConfiguration#buildInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.BuildProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#gitInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.GitProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   IntegrationGraphEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.graph.IntegrationGraphServer' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JdbcTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) did not find a primary bean from beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)

   JedisConnectionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.apache.commons.pool2.impl.GenericObjectPool', 'redis.clients.jedis.Jedis' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JerseySameManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JerseyServerMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.jersey2.server.MetricsApplicationEventListener' (OnClassCondition)

   JerseyWebEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JettyMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.server.Server' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmsHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   JmxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.jmx.JmxMeterRegistry' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JolokiaEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jolokia.http.AgentServlet' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.Transaction' (OnClassCondition)

   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactory:
      Did not match:
         - @ConditionalOnMissingBean (names: kafkaListenerContainerFactory; SearchStrategy: all) found beans named kafkaListenerContainerFactory (OnBeanCondition)

   KafkaAnnotationDrivenConfiguration.EnableKafkaConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: org.springframework.kafka.config.internalKafkaListenerAnnotationProcessor; SearchStrategy: all) found beans named org.springframework.kafka.config.internalKafkaListenerAnnotationProcessor (OnBeanCondition)

   KafkaAutoConfiguration#kafkaConsumerFactory:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.kafka.core.ConsumerFactory; SearchStrategy: all) found beans of type 'org.springframework.kafka.core.ConsumerFactory' consumerFactory (OnBeanCondition)

   KafkaAutoConfiguration#kafkaJaasInitializer:
      Did not match:
         - @ConditionalOnProperty (spring.kafka.jaas.enabled) did not find property 'spring.kafka.jaas.enabled' (OnPropertyCondition)

   KafkaAutoConfiguration#kafkaProducerFactory:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.kafka.core.ProducerFactory; SearchStrategy: all) found beans of type 'org.springframework.kafka.core.ProducerFactory' producerFactory (OnBeanCondition)

   KafkaAutoConfiguration#kafkaTemplate:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.kafka.core.KafkaTemplate; SearchStrategy: all) found beans of type 'org.springframework.kafka.core.KafkaTemplate' kafkaTemplate (OnBeanCondition)

   KafkaAutoConfiguration#kafkaTransactionManager:
      Did not match:
         - @ConditionalOnProperty (spring.kafka.producer.transaction-id-prefix) did not find property 'spring.kafka.producer.transaction-id-prefix' (OnPropertyCondition)

   KafkaStreamsAnnotationDrivenConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.kafka.streams.StreamsBuilder' (OnClassCondition)

   KairosMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.kairos.KairosMeterRegistry' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.LdapOperations' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   LiquibaseEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.integration.spring.SpringLiquibase' (OnClassCondition)

   Log4J2MetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.logging.log4j.core.LoggerContext' (OnClassCondition)

   MailHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.mail.javamail.JavaMailSenderImpl; SearchStrategy: all) did not find any beans of type org.springframework.mail.javamail.JavaMailSenderImpl (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnClassCondition)
         - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.JndiNameProperty @ConditionalOnProperty (spring.mail.jndi-name) did not find property 'jndi-name'; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.HostProperty @ConditionalOnProperty (spring.mail.host) did not find property 'host' (MailSenderAutoConfiguration.MailSenderCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.mail.internet.MimeMessage', 'javax.activation.MimeType', 'org.springframework.mail.MailSender' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   ManagementContextAutoConfiguration.DifferentManagementContextConfiguration:
      Did not match:
         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)

   ManagementWebSecurityAutoConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter,org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) did not find any beans; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass did not find required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ReactiveWebConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.data.mongodb.core.ReactiveMongoTemplate; SearchStrategy: all) did not find any beans of type org.springframework.data.mongodb.core.ReactiveMongoTemplate (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'org.springframework.data.mongodb.core.ReactiveMongoTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)
         - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   MybatisAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) did not find a primary bean from beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.FreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver', 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriverConfig' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.LegacyFreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.LegacyVelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.velocity.Driver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.ThymeleafConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.thymeleaf.ThymeleafLanguageDriver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.VelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.velocity.VelocityLanguageDriver', 'org.mybatis.scripting.velocity.VelocityLanguageDriverConfig' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NewRelicMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.newrelic.NewRelicMeterRegistry' (OnClassCondition)

   NoOpMeterRegistryConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (OnBeanCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PrometheusMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.prometheus.PrometheusMeterRegistry' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   QuartzEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   RabbitHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.amqp.rabbit.core.RabbitTemplate' (OnClassCondition)

   RabbitMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.ConnectionFactory' (OnClassCondition)

   ReactiveCloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveManagementContextAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveManagementWebSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration#redisTemplate:
      Did not match:
         - @ConditionalOnMissingBean (names: redisTemplate; SearchStrategy: all) found beans named redisTemplate (OnBeanCondition)

   RedisHealthContributorAutoConfiguration#redisHealthContributor:
      Did not match:
         - @ConditionalOnMissingBean (names: redisHealthIndicator,redisHealthContributor; SearchStrategy: all) found beans named redisHealthContributor (OnBeanCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SecurityRequestMatchersManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.web.util.matcher.RequestMatcher' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletEndpointManagementContextConfiguration.JerseyServletEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   ServletManagementContextAutoConfiguration.ApplicationContextFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (management.server.add-application-context-header=true) did not find property 'add-application-context-header' (OnPropertyCondition)

   ServletWebServerFactoryAutoConfiguration#forwardedHeaderFilter:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SessionsEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.FindByIndexNameSessionRepository' (OnClassCondition)

   SignalFxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.signalfx.SignalFxMeterRegistry' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SolrHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.SolrClient' (OnClassCondition)

   SpringBootAdminClientAutoConfiguration.ReactiveConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   SpringBootAdminClientAutoConfiguration.ReactiveRegistrationClientConfig:
      Did not match:
         - @ConditionalOnBean did not find required type 'org.springframework.web.reactive.function.client.WebClient$Builder' (OnBeanCondition)
         - @ConditionalOnBean (types: org.springframework.web.reactive.function.client.WebClient$Builder; SearchStrategy: all) did not find any beans of type org.springframework.web.reactive.function.client.WebClient$Builder (OnBeanCondition)

   SpringBootAdminClientCloudFoundryAutoConfiguration:
      Did not match:
         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)
      Matched:
         - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
         - matched (SpringBootAdminClientEnabledCondition)

   StackdriverMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.stackdriver.StackdriverMeterRegistry' (OnClassCondition)

   StartupEndpointAutoConfiguration:
      Did not match:
         - ApplicationStartup configured applicationStartup is of type class org.springframework.core.metrics.DefaultApplicationStartup, expected BufferingApplicationStartup. (StartupEndpointAutoConfiguration.ApplicationStartupCondition)

   StatsdMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.statsd.StatsdMeterRegistry' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor:
      Did not match:
         - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) found beans of type 'java.util.concurrent.Executor' asyncThreadPoolTaskExecutor (OnBeanCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration.DataAttributeDialectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.mxab.thymeleaf.extras.dataattribute.dialect.DataAttributeDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafReactiveConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ThymeleafAutoConfiguration.ThymeleafSecurityDialectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.extras.springsecurity5.dialect.SpringSecurityDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebFluxConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ThymeleafAutoConfiguration.ThymeleafWebLayoutConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'nz.net.ultraq.thymeleaf.LayoutDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration#resourceUrlEncodingFilter:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)

   WavefrontMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebClientMetricsConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebFluxEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   WebFluxMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport' org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)
         - Ancestor org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.client.core.WebServiceTemplate' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

    org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration



2022-08-30 11:12:20.882 [main] [DEBUG] o.s.b.c.p.s.ConfigurationPropertySourcesPropertyResolver$DefaultResolver - Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
2022-08-30 11:12:20.883 [main] [INFO ] com.test.springboot.SpringbootApplication - Started SpringbootApplication in 4.895 seconds (JVM running for 5.9)
2022-08-30 11:12:20.886 [main] [DEBUG] o.s.boot.availability.ApplicationAvailabilityBean - Application availability state LivenessState changed to CORRECT
2022-08-30 11:12:20.888 [main] [DEBUG] o.s.boot.availability.ApplicationAvailabilityBean - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2022-08-30 11:12:20.891 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Cluster ID: N_qWYp0DR-CyFe0Vu-kqrw
2022-08-30 11:12:20.892 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 11:12:20.894 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 11:12:20.900 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:12:20.903 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:12:20.909 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:12:20.962 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 11:12:21.344 [RMI TCP Connection(2)-192.168.9.100] [INFO ] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-08-30 11:12:21.345 [RMI TCP Connection(2)-192.168.9.100] [INFO ] org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-08-30 11:12:21.345 [RMI TCP Connection(2)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2022-08-30 11:12:21.345 [RMI TCP Connection(2)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2022-08-30 11:12:21.345 [RMI TCP Connection(2)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2022-08-30 11:12:21.346 [RMI TCP Connection(2)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@569e889b
2022-08-30 11:12:21.347 [RMI TCP Connection(2)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@44b5a612
2022-08-30 11:12:21.347 [RMI TCP Connection(2)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2022-08-30 11:12:21.347 [RMI TCP Connection(2)-192.168.9.100] [INFO ] org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2022-08-30 11:12:21.363 [RMI TCP Connection(3)-192.168.9.100] [INFO ] com.alibaba.druid.pool.DruidDataSource - {dataSource-1,mybatis} inited
2022-08-30 11:12:21.758 [RMI TCP Connection(3)-192.168.9.100] [INFO ] com.alibaba.druid.pool.DruidDataSource - {dataSource-2,springbootdb} inited
2022-08-30 11:12:22.100 [RMI TCP Connection(3)-192.168.9.100] [INFO ] org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:92}] to localhost:27017
2022-08-30 11:12:22.930 [registrationTask1] [WARN ] d.c.b.a.client.registration.ApplicationRegistrator - Failed to register application as Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/) at spring-boot-admin ([http://localhost:9002/instances]): I/O error on POST request for "http://localhost:9002/instances": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect. Further attempts are logged on DEBUG level
2022-08-30 11:12:24.051 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully joined group with generation Generation{generationId=101, memberId='consumer-test-consumer-1-e8655150-2c67-4506-9bda-975fa4023bd2', protocol='range'}
2022-08-30 11:12:24.052 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Finished assignment for group at generation 101: {consumer-test-consumer-1-e8655150-2c67-4506-9bda-975fa4023bd2=Assignment(partitions=[test-0])}
2022-08-30 11:12:24.080 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully synced group in generation Generation{generationId=101, memberId='consumer-test-consumer-1-e8655150-2c67-4506-9bda-975fa4023bd2', protocol='range'}
2022-08-30 11:12:24.081 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Notifying assignor about the new Assignment(partitions=[test-0])
2022-08-30 11:12:24.083 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Adding newly assigned partitions: test-0
2022-08-30 11:12:24.131 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Setting offset for partition test-0 to the committed offset FetchPosition{offset=73, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[110.40.220.207:9092 (id: 1 rack: null)], epoch=0}}
2022-08-30 11:12:24.132 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions assigned: [test-0]
2022-08-30 11:12:30.541 [http-nio-8081-exec-2] [DEBUG] org.springframework.web.servlet.DispatcherServlet - POST "/mongouser/muti", parameters={masked}
2022-08-30 11:12:30.545 [http-nio-8081-exec-2] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserBetween(String, String)
2022-08-30 11:12:30.605 [http-nio-8081-exec-2] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 11:12:30.605 [http-nio-8081-exec-2] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[]]
2022-08-30 11:12:30.609 [http-nio-8081-exec-2] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 11:12:30.901 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:12:30.901 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:12:30.902 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:12:37.228 [http-nio-8081-exec-3] [DEBUG] org.springframework.web.servlet.DispatcherServlet - POST "/mongouser/muti", parameters={masked}
2022-08-30 11:12:37.229 [http-nio-8081-exec-3] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserBetween(String, String)
2022-08-30 11:12:37.232 [http-nio-8081-exec-3] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 11:12:37.232 [http-nio-8081-exec-3] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[]]
2022-08-30 11:12:37.233 [http-nio-8081-exec-3] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 11:12:40.895 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:12:40.895 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:12:40.895 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:12:44.080 [http-nio-8081-exec-4] [DEBUG] org.springframework.web.servlet.DispatcherServlet - POST "/mongouser/muti", parameters={masked}
2022-08-30 11:12:44.081 [http-nio-8081-exec-4] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserBetween(String, String)
2022-08-30 11:12:44.083 [http-nio-8081-exec-4] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 11:12:44.084 [http-nio-8081-exec-4] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[]]
2022-08-30 11:12:44.085 [http-nio-8081-exec-4] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 11:12:50.893 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:12:50.893 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:12:50.894 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:13:00.892 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:13:00.892 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:13:00.892 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:13:08.824 [http-nio-8081-exec-5] [DEBUG] org.springframework.web.servlet.DispatcherServlet - POST "/mongouser/muti", parameters={masked}
2022-08-30 11:13:08.824 [http-nio-8081-exec-5] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserBetween(String, String)
2022-08-30 11:13:08.842 [http-nio-8081-exec-5] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 11:13:08.843 [http-nio-8081-exec-5] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[MongoUser{id='630c86bf4afab752d5a4792f', name='kent', age=19, description='this a test2'}]]
2022-08-30 11:13:08.845 [http-nio-8081-exec-5] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 11:13:10.900 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:13:10.900 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:13:10.901 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:13:20.904 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:13:20.904 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:13:20.905 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:13:30.900 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:13:30.900 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:13:30.900 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:13:40.904 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:13:40.904 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:13:40.905 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:13:47.069 [http-nio-8081-exec-6] [DEBUG] org.springframework.web.servlet.DispatcherServlet - POST "/mongouser/", parameters={masked}
2022-08-30 11:13:47.070 [http-nio-8081-exec-6] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#createUser(MongoUser)
2022-08-30 11:13:47.104 [http-nio-8081-exec-6] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 11:13:47.104 [http-nio-8081-exec-6] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [MongoUser{id='630d806b5d10f22d5517c421', name='eknt', age=26, description='ceces'}]
2022-08-30 11:13:47.105 [http-nio-8081-exec-6] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 11:13:50.902 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:13:50.902 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:13:50.902 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:13:56.902 [http-nio-8081-exec-7] [DEBUG] org.springframework.web.servlet.DispatcherServlet - POST "/mongouser/", parameters={masked}
2022-08-30 11:13:56.903 [http-nio-8081-exec-7] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#createUser(MongoUser)
2022-08-30 11:13:56.905 [http-nio-8081-exec-7] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 11:13:56.906 [http-nio-8081-exec-7] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [MongoUser{id='630d80745d10f22d5517c422', name='eknt', age=33, description='ceces'}]
2022-08-30 11:13:56.906 [http-nio-8081-exec-7] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 11:14:00.893 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:14:00.893 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:14:00.893 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:14:03.092 [http-nio-8081-exec-8] [DEBUG] org.springframework.web.servlet.DispatcherServlet - POST "/mongouser/", parameters={masked}
2022-08-30 11:14:03.093 [http-nio-8081-exec-8] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#createUser(MongoUser)
2022-08-30 11:14:03.096 [http-nio-8081-exec-8] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 11:14:03.096 [http-nio-8081-exec-8] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [MongoUser{id='630d807b5d10f22d5517c423', name='eknt', age=40, description='ceces'}]
2022-08-30 11:14:03.097 [http-nio-8081-exec-8] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 11:14:10.896 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:14:10.896 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:14:10.897 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:14:20.335 [http-nio-8081-exec-9] [DEBUG] org.springframework.web.servlet.DispatcherServlet - POST "/mongouser/muti", parameters={masked}
2022-08-30 11:14:20.335 [http-nio-8081-exec-9] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserBetween(String, String)
2022-08-30 11:14:20.338 [http-nio-8081-exec-9] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 11:14:20.338 [http-nio-8081-exec-9] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[MongoUser{id='630c86bf4afab752d5a4792f', name='kent', age=19, description='this a test2'}, MongoUse (truncated)...]
2022-08-30 11:14:20.339 [http-nio-8081-exec-9] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 11:14:20.902 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:14:20.902 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:14:20.902 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:14:25.583 [http-nio-8081-exec-10] [DEBUG] org.springframework.web.servlet.DispatcherServlet - POST "/mongouser/muti", parameters={masked}
2022-08-30 11:14:25.584 [http-nio-8081-exec-10] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserBetween(String, String)
2022-08-30 11:14:25.587 [http-nio-8081-exec-10] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 11:14:25.587 [http-nio-8081-exec-10] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[MongoUser{id='630c86bf4afab752d5a4792f', name='kent', age=19, description='this a test2'}, MongoUse (truncated)...]
2022-08-30 11:14:25.588 [http-nio-8081-exec-10] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 11:14:30.891 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:14:30.891 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:14:30.892 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:14:40.896 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:14:40.897 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:14:40.897 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:14:49.540 [http-nio-8081-exec-1] [DEBUG] org.springframework.web.servlet.DispatcherServlet - POST "/mongouser/muti", parameters={masked}
2022-08-30 11:14:49.541 [http-nio-8081-exec-1] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserBetween(String, String)
2022-08-30 11:14:49.544 [http-nio-8081-exec-1] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 11:14:49.544 [http-nio-8081-exec-1] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[MongoUser{id='630d806b5d10f22d5517c421', name='eknt', age=26, description='ceces'}, MongoUser{id='6 (truncated)...]
2022-08-30 11:14:49.545 [http-nio-8081-exec-1] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 11:14:50.903 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:14:50.903 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:14:50.903 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:15:00.891 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:15:00.891 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:15:00.891 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:15:10.906 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:15:10.906 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:15:10.906 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:15:20.901 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:15:20.902 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:15:20.902 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:15:30.904 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:15:30.904 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:15:30.906 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:15:40.892 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:15:40.892 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:15:40.892 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:15:50.906 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:15:50.906 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:15:50.907 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:16:00.901 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:16:00.901 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:16:00.901 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:16:10.899 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:16:10.900 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:16:10.900 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:16:20.895 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:16:20.895 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:16:20.895 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:16:30.904 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:16:30.905 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:16:30.905 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:16:40.901 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:16:40.901 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:16:40.901 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:16:50.904 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:16:50.904 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:16:50.904 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:17:00.905 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:17:00.905 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:17:00.905 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:17:10.905 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:17:10.906 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:17:10.906 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:17:20.903 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:17:20.903 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:17:20.904 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:17:30.903 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:17:30.903 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:17:30.904 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:17:40.903 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:17:40.904 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:17:40.904 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:17:50.895 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:17:50.896 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:17:50.896 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:18:00.892 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:18:00.892 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:18:00.892 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:18:10.896 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:18:10.896 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:18:10.896 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:18:20.904 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:18:20.905 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:18:20.905 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:18:30.899 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:18:30.899 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:18:30.899 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:18:40.894 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:18:40.894 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:18:40.895 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:18:50.901 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:18:50.902 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:18:50.902 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:19:00.900 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:19:00.900 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:19:00.900 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:19:10.899 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:19:10.899 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:19:10.899 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:19:20.898 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:19:20.898 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:19:20.898 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:19:30.906 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:19:30.907 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:19:30.908 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:19:40.900 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:19:40.901 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:19:40.901 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:19:50.906 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:19:50.906 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:19:50.906 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:20:00.905 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:20:00.905 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:20:00.905 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:20:10.896 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:20:10.896 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:20:10.896 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:20:20.897 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:20:20.897 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:20:20.897 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:20:30.899 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:20:30.899 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:20:30.899 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:20:40.899 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:20:40.899 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:20:40.899 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:20:50.895 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:20:50.896 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:20:50.896 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:21:00.903 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:21:00.904 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:21:00.904 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:21:10.895 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:21:10.895 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:21:10.895 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:21:20.407 [http-nio-8081-exec-4] [DEBUG] org.springframework.web.servlet.DispatcherServlet - POST "/mongouser/muti", parameters={masked}
2022-08-30 11:21:20.408 [http-nio-8081-exec-4] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserBetween(String, String)
2022-08-30 11:21:20.411 [http-nio-8081-exec-4] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 11:21:20.411 [http-nio-8081-exec-4] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[MongoUser{id='630d806b5d10f22d5517c421', name='eknt', age=26, description='ceces'}, MongoUser{id='6 (truncated)...]
2022-08-30 11:21:20.413 [http-nio-8081-exec-4] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 11:21:20.897 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:21:20.897 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:21:20.897 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:21:30.906 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:21:30.906 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:21:30.906 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:21:31.903 [http-nio-8081-exec-5] [DEBUG] org.springframework.web.servlet.DispatcherServlet - POST "/mongouser/muti", parameters={masked}
2022-08-30 11:21:31.904 [http-nio-8081-exec-5] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserBetween(String, String)
2022-08-30 11:21:31.906 [http-nio-8081-exec-5] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 11:21:31.906 [http-nio-8081-exec-5] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[MongoUser{id='630d806b5d10f22d5517c421', name='eknt', age=26, description='ceces'}, MongoUser{id='6 (truncated)...]
2022-08-30 11:21:31.907 [http-nio-8081-exec-5] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 11:21:40.904 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:21:40.904 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:21:40.904 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:21:52.906 [main] [INFO ] com.test.springboot.SpringbootApplication - Starting SpringbootApplication using Java 1.8.0_291 on gaofengkai with PID 12752 (D:\BackEnd\workspace\springboot\target\classes started by gaofengkai in D:\BackEnd\workspace\springboot)
2022-08-30 11:21:52.908 [main] [INFO ] com.test.springboot.SpringbootApplication - The following profiles are active: prod
2022-08-30 11:21:52.908 [main] [DEBUG] org.springframework.boot.SpringApplication - Loading source class com.test.springboot.SpringbootApplication
2022-08-30 11:21:52.935 [main] [DEBUG] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66f57048
2022-08-30 11:21:53.727 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-08-30 11:21:53.728 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-08-30 11:21:53.733 [main] [DEBUG] o.s.boot.autoconfigure.AutoConfigurationPackages - @EnableAutoConfiguration was declared on a class in the package 'com.test.springboot'. Automatic @Repository and @Entity scanning is enabled.
2022-08-30 11:21:53.777 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46 ms. Found 1 MongoDB repository interfaces.
2022-08-30 11:21:53.784 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-08-30 11:21:53.785 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-08-30 11:21:53.799 [main] [INFO ] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.test.springboot.mapper.mongodb.MongoUserDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-08-30 11:21:53.799 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2022-08-30 11:21:53.887 [main] [WARN ] org.mybatis.spring.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'mongoUserDao' and 'com.test.springboot.mapper.mongodb.MongoUserDao' mapperInterface. Bean already defined with the same name!
2022-08-30 11:21:54.385 [main] [DEBUG] o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: C:\Users\Administrator\.m2\repository\org\springframework\boot\spring-boot\2.5.7\spring-boot-2.5.7.jar
2022-08-30 11:21:54.385 [main] [DEBUG] o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: C:\Users\Administrator\.m2\repository\org\springframework\boot\spring-boot\2.5.7\spring-boot-2.5.7.jar
2022-08-30 11:21:54.385 [main] [DEBUG] o.s.b.w.e.tomcat.TomcatServletWebServerFactory - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2022-08-30 11:21:54.399 [main] [INFO ] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2022-08-30 11:21:54.406 [main] [INFO ] org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2022-08-30 11:21:54.407 [main] [INFO ] org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-08-30 11:21:54.407 [main] [INFO ] org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.55]
2022-08-30 11:21:54.483 [main] [INFO ] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-08-30 11:21:54.484 [main] [DEBUG] o.s.b.w.s.c.ServletWebServerApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2022-08-30 11:21:54.484 [main] [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1549 ms
2022-08-30 11:21:54.660 [main] [DEBUG] o.s.b.web.servlet.ServletContextInitializerBeans - Mapping filters: filterRegistrationBean urls=[/*] order=-2147483647, filterRegistrationBean urls=[/*] order=2147483647, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, httpTraceFilter urls=[/*] order=2147483637
2022-08-30 11:21:54.661 [main] [DEBUG] o.s.b.web.servlet.ServletContextInitializerBeans - Mapping servlets: dispatcherServlet urls=[/], statViewServlet urls=[/druid/*]
2022-08-30 11:21:54.675 [main] [DEBUG] o.s.b.a.metrics.web.servlet.WebMvcMetricsFilter - Filter 'webMvcMetricsFilter' configured for use
2022-08-30 11:21:54.675 [main] [DEBUG] o.s.b.w.s.filter.OrderedCharacterEncodingFilter - Filter 'characterEncodingFilter' configured for use
2022-08-30 11:21:54.675 [main] [DEBUG] o.s.boot.actuate.web.trace.servlet.HttpTraceFilter - Filter 'httpTraceFilter' configured for use
2022-08-30 11:21:55.169 [main] [INFO ] org.mongodb.driver.cluster - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2022-08-30 11:21:55.219 [cluster-rtt-ClusterId{value='630d8253dcb9351ddf1bc93b', description='null'}-localhost:27017] [INFO ] org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:106}] to localhost:27017
2022-08-30 11:21:55.220 [cluster-ClusterId{value='630d8253dcb9351ddf1bc93b', description='null'}-localhost:27017] [INFO ] org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:105}] to localhost:27017
2022-08-30 11:21:55.220 [cluster-ClusterId{value='630d8253dcb9351ddf1bc93b', description='null'}-localhost:27017] [INFO ] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17092700}
2022-08-30 11:21:55.337 [main] [DEBUG] o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2022-08-30 11:21:55.769 [main] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2022-08-30 11:21:55.903 [main] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 45 mappings in 'requestMappingHandlerMapping'
2022-08-30 11:21:56.233 [main] [INFO ] o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 16 endpoint(s) beneath base path '/monitor'
2022-08-30 11:21:56.314 [main] [INFO ] s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-08-30 11:21:56.416 [main] [DEBUG] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2022-08-30 11:21:56.966 [main] [INFO ] org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [110.40.220.207:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-test-consumer-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = test-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2022-08-30 11:21:57.022 [main] [INFO ] org.apache.kafka.common.utils.AppInfoParser - Kafka version: 2.7.2
2022-08-30 11:21:57.023 [main] [INFO ] org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: 37a1cc36bf4d76f3
2022-08-30 11:21:57.023 [main] [INFO ] org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1661829717020
2022-08-30 11:21:57.025 [main] [INFO ] org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Subscribed to topic(s): test
2022-08-30 11:21:57.032 [main] [INFO ] org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2022-08-30 11:21:57.040 [main] [INFO ] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2022-08-30 11:21:57.041 [main] [INFO ] s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2022-08-30 11:21:57.054 [main] [INFO ] s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 6 custom documentation plugin(s)
2022-08-30 11:21:57.089 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 11:21:57.208 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: testUsingGET_1
2022-08-30 11:21:57.210 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: test2UsingGET_1
2022-08-30 11:21:57.219 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 11:21:57.221 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: testAopUsingGET_1
2022-08-30 11:21:57.224 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 11:21:57.226 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getCityUsingPOST_1
2022-08-30 11:21:57.227 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getFirstStudentUsingPOST_1
2022-08-30 11:21:57.230 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 11:21:57.232 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonUsingPOST_1
2022-08-30 11:21:57.233 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingGET_1
2022-08-30 11:21:57.233 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingHEAD_1
2022-08-30 11:21:57.234 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingPOST_1
2022-08-30 11:21:57.234 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingPUT_1
2022-08-30 11:21:57.234 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingPATCH_1
2022-08-30 11:21:57.235 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingDELETE_1
2022-08-30 11:21:57.235 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingOPTIONS_1
2022-08-30 11:21:57.236 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingTRACE_1
2022-08-30 11:21:57.236 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingGET_1
2022-08-30 11:21:57.237 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingHEAD_1
2022-08-30 11:21:57.237 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingPOST_1
2022-08-30 11:21:57.237 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingPUT_1
2022-08-30 11:21:57.238 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingPATCH_1
2022-08-30 11:21:57.238 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingDELETE_1
2022-08-30 11:21:57.239 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingOPTIONS_1
2022-08-30 11:21:57.239 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingTRACE_1
2022-08-30 11:21:57.239 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingGET_1
2022-08-30 11:21:57.240 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingHEAD_1
2022-08-30 11:21:57.241 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingPOST_1
2022-08-30 11:21:57.241 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingPUT_1
2022-08-30 11:21:57.241 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingPATCH_1
2022-08-30 11:21:57.241 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingDELETE_1
2022-08-30 11:21:57.242 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingOPTIONS_1
2022-08-30 11:21:57.242 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingTRACE_1
2022-08-30 11:21:57.243 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: serializationUsingPOST_1
2022-08-30 11:21:57.244 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingGET_1
2022-08-30 11:21:57.245 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingHEAD_1
2022-08-30 11:21:57.245 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingPOST_1
2022-08-30 11:21:57.246 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingPUT_1
2022-08-30 11:21:57.246 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingPATCH_1
2022-08-30 11:21:57.247 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingDELETE_1
2022-08-30 11:21:57.247 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingOPTIONS_1
2022-08-30 11:21:57.247 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingTRACE_1
2022-08-30 11:21:57.250 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 11:21:57.252 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: addRedisUsingPOST_1
2022-08-30 11:21:57.253 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: deleteRedisUsingPOST_1
2022-08-30 11:21:57.254 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getRedisUsingPOST_1
2022-08-30 11:21:57.255 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateRedisUsingPOST_1
2022-08-30 11:21:57.258 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 11:21:57.258 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: addJdbcStudentUsingPOST_1
2022-08-30 11:21:57.260 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: queryStudentByIdUsingGET_1
2022-08-30 11:21:57.260 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: queryStudentById2UsingPOST_1
2022-08-30 11:21:57.261 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: queryStudentById3UsingPOST_1
2022-08-30 11:21:57.274 [main] [DEBUG] o.s.b.a.l.ConditionEvaluationReportLoggingListener - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   AuditEventsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.auditevents.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   AutoConfiguration matched:
      - @ConditionalOnProperty (helloworld=true) matched (OnPropertyCondition)

   BeansEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.beans.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration#beansEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.beans.BeansEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CacheMeterBinderProvidersConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.MeterBinder' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.RedisCacheMeterBinderProviderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.cache.RedisCache' (OnClassCondition)

   CacheMetricsAutoConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.cache.CacheManager; SearchStrategy: all) found bean 'cacheManager' (OnBeanCondition)

   CacheMetricsRegistrarConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'simpleMeterRegistry', 'redisCacheMeterBinderProvider' (OnBeanCondition)

   CachesEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint no property management.endpoint.caches.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   CachesEndpointAutoConfiguration#cachesEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CachesEndpointAutoConfiguration#cachesEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) found bean 'cachesEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CompositeMeterRegistryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.composite.CompositeMeterRegistry' (OnClassCondition)

   ConditionsReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.conditions.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ConditionsReportEndpointAutoConfiguration#conditionsReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.configprops.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) found bean 'configurationPropertiesReportEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration#dbHealthContributor matched:
      - @ConditionalOnMissingBean (names: dbHealthIndicator,dbHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'dynamicDataSource', 'simpleMeterRegistry', 'first', 'second' (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration.HikariDataSourceMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DiskSpaceHealthContributorAutoConfiguration matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   DiskSpaceHealthContributorAutoConfiguration#diskSpaceHealthIndicator matched:
      - @ConditionalOnMissingBean (names: diskSpaceHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   DruidDataSourceAutoConfigure matched:
      - @ConditionalOnClass found required class 'com.alibaba.druid.pool.DruidDataSource' (OnClassCondition)

   DruidStatViewServletConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.datasource.druid.stat-view-servlet.enabled=true) matched (OnPropertyCondition)

   DruidWebStatFilterConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.datasource.druid.web-stat-filter.enabled=true) matched (OnPropertyCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   EndpointAutoConfiguration#endpointCachingOperationInvokerAdvisor matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EndpointAutoConfiguration#endpointOperationParameterMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.env.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) found bean 'environmentEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HealthContributorAutoConfiguration#pingHealthContributor matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   HealthEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint found property management.endpoint.health.enabled with value true; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HealthEndpointConfiguration#healthContributorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpointGroups matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointGroups; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthHttpCodeStatusMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HttpCodeStatusMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthStatusAggregator matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.StatusAggregator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration#healthEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HeapDumpWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.heapdump.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HeapDumpWebEndpointAutoConfiguration#heapDumpWebEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.HeapDumpWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpClientMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (management.trace.http.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.trace.http.HttpTraceRepository; SearchStrategy: all) found bean 'buildHttpTraceRepository' (OnBeanCondition)

   HttpTraceAutoConfiguration#httpExchangeTracer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.trace.http.HttpExchangeTracer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceAutoConfiguration.ServletTraceFilterConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   HttpTraceAutoConfiguration.ServletTraceFilterConfiguration#httpTraceFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.httptrace.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HttpTraceEndpointAutoConfiguration#httpTraceEndpoint matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.trace.http.HttpTraceRepository; SearchStrategy: all) found bean 'buildHttpTraceRepository'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.trace.http.HttpTraceEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   InfoContributorAutoConfiguration#envInfoContributor matched:
      - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.info.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   InfoEndpointAutoConfiguration#infoEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.info.InfoEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxEndpointAutoConfiguration#endpointObjectNameFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.EndpointObjectNameFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxAnnotationEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.JmxEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxMBeanExporter matched:
      - @ConditionalOnSingleCandidate (types: javax.management.MBeanServer; SearchStrategy: all) found a primary bean from beans 'mbeanServer' (OnBeanCondition)

   JvmMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   JvmMetricsAutoConfiguration#classLoaderMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmGcMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmGcMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmMemoryMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmThreadMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAnnotationDrivenConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.kafka.annotation.EnableKafka' (OnClassCondition)

   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactoryConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   KafkaAutoConfiguration#kafkaAdmin matched:
      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.KafkaAdmin; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAutoConfiguration#kafkaProducerListener matched:
      - @ConditionalOnMissingBean (types: org.springframework.kafka.support.ProducerListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.kafka.KafkaClientMetrics', 'org.springframework.kafka.core.ProducerFactory' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   KafkaMetricsAutoConfiguration.KafkaStreamsMetricsConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.kafka.KafkaStreamsMetrics', 'org.springframework.kafka.config.StreamsBuilderFactoryBean' (OnClassCondition)

   LettuceConnectionConfiguration matched:
      - @ConditionalOnClass found required class 'io.lettuce.core.RedisClient' (OnClassCondition)
      - @ConditionalOnProperty (spring.redis.client-type=lettuce) matched (OnPropertyCondition)

   LettuceConnectionConfiguration#lettuceClientResources matched:
      - @ConditionalOnMissingBean (types: io.lettuce.core.resource.ClientResources; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration#redisConnectionFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LogFileWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.logfile.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   LogFileWebEndpointAutoConfiguration#logFileWebEndpoint matched:
      - Log File found logging.file.path var/log (LogFileWebEndpointAutoConfiguration.LogFileCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LogFileWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LogbackMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'ch.qos.logback.classic.LoggerContext', 'org.slf4j.LoggerFactory' (OnClassCondition)
      - LogbackLoggingCondition ILoggerFactory is a Logback LoggerContext (LogbackMetricsAutoConfiguration.LogbackLoggingCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   LogbackMetricsAutoConfiguration#logbackMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.logging.LogbackMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoggersEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.loggers.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   LoggersEndpointAutoConfiguration#loggersEndpoint matched:
      - Logging System enabled (LoggersEndpointAutoConfiguration.OnEnabledLoggingSystemCondition)
      - @ConditionalOnBean (types: org.springframework.boot.logging.LoggingSystem; SearchStrategy: all) found bean 'springBootLoggingSystem'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LoggersEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ManagementContextAutoConfiguration.SameManagementContextConfiguration matched:
      - Management Port actual port type (SAME) matched required type (OnManagementPortCondition)

   MappingsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.mappings.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration.SpringMvcConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   MetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)

   MetricsAutoConfiguration#micrometerClock matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MetricsEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint no property management.endpoint.metrics.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   MetricsEndpointAutoConfiguration#metricsEndpoint matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.MetricsEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.mongodb.client.MongoClient' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration#mongo matched:
      - @ConditionalOnMissingBean (types: com.mongodb.client.MongoClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration.MongoClientSettingsConfiguration matched:
      - @ConditionalOnMissingBean (types: com.mongodb.MongoClientSettings; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDataAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'com.mongodb.client.MongoClient', 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)

   MongoDataConfiguration#mongoCustomConversions matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.convert.MongoCustomConversions; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDataConfiguration#mongoMappingContext matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.mapping.MongoMappingContext; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryConfiguration matched:
      - @ConditionalOnSingleCandidate (types: com.mongodb.client.MongoClient; SearchStrategy: all) found a primary bean from beans 'mongo'; @ConditionalOnMissingBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) found bean 'mongoDatabaseFactory' (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#gridFsTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.gridfs.GridFsOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#mappingMongoConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.convert.MongoConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#mongoTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.MongoOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: org.springframework.data.mongodb.core.MongoTemplate; SearchStrategy: all) found bean 'mongoTemplate' (OnBeanCondition)

   MongoHealthContributorAutoConfiguration#mongoHealthContributor matched:
      - @ConditionalOnMissingBean (names: mongoHealthIndicator,mongoHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.mongodb.MongoClientSettings' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoCommandMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener' (OnClassCondition)
      - @ConditionalOnProperty (management.metrics.mongo.command.enabled=true) matched (OnPropertyCondition)

   MongoMetricsAutoConfiguration.MongoCommandMetricsConfiguration#mongoCommandTagsProvider matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoCommandTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoCommandMetricsConfiguration#mongoMetricsCommandListener matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoConnectionPoolMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener' (OnClassCondition)
      - @ConditionalOnProperty (management.metrics.mongo.connectionpool.enabled=true) matched (OnPropertyCondition)

   MongoMetricsAutoConfiguration.MongoConnectionPoolMetricsConfiguration#mongoConnectionPoolTagsProvider matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoConnectionPoolTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoConnectionPoolMetricsConfiguration#mongoMetricsConnectionPoolListener matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'com.mongodb.client.MongoClient', 'org.springframework.data.mongodb.repository.MongoRepository' (OnClassCondition)
      - @ConditionalOnRepositoryType configured type of 'AUTO' matched required type (OnRepositoryTypeCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean,org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisLanguageDriverAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.apache.ibatis.scripting.LanguageDriver' (OnClassCondition)

   NettyAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ReactiveHealthEndpointConfiguration matched:
      - @ConditionalOnClass found required class 'reactor.core.publisher.Flux' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)

   ReactiveHealthEndpointConfiguration#reactiveHealthContributorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisAutoConfiguration#stringRedisTemplate matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a primary bean from beans 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.core.StringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisCacheConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)
      - Cache org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration automatic cache type (CacheCondition)

   RedisHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory' (OnBeanCondition)

   RedisReactiveAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'org.springframework.data.redis.core.ReactiveRedisTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisReactiveAutoConfiguration#reactiveRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveAutoConfiguration#reactiveStringRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveStringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'reactor.core.publisher.Flux' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory' (OnBeanCondition)

   RedisReactiveHealthContributorAutoConfiguration#redisHealthContributor matched:
      - @ConditionalOnMissingBean (names: redisHealthIndicator,redisHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.redis.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.repository.Repository' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#metricsRepositoryMethodInvocationListener matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#repositoryTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)

   RestTemplateMetricsConfiguration#restTemplateExchangeTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.web.client.RestTemplateExchangeTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ScheduledTasksEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.scheduledtasks.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ScheduledTasksEndpointAutoConfiguration#scheduledTasksEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletEndpointManagementContextConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   ServletEndpointManagementContextConfiguration.WebMvcServletEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)

   ServletManagementContextAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.Servlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ShutdownEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint found property management.endpoint.shutdown.enabled with value true; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ShutdownEndpointAutoConfiguration#shutdownEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.ShutdownEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SimpleMetricsExportAutoConfiguration matched:
      - @ConditionalOnEnabledMetricsExport management.metrics.export.defaults.enabled is considered true (OnMetricsExportEnabledCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) found bean 'micrometerClock'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleMetricsExportAutoConfiguration#simpleConfig matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.simple.SimpleConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - matched (SpringBootAdminClientEnabledCondition)

   SpringBootAdminClientAutoConfiguration#registrationListener matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.RegistrationApplicationListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration#registrator matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.ApplicationRegistrator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration#startupDateMetadataContributor matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.metadata.StartupDateMetadataContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration.BlockingRegistrationClientConfig matched:
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration.BlockingRegistrationClientConfig#registrationClient matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.BlockingRegistrationClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration.ServletConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringBootAdminClientAutoConfiguration.ServletConfiguration#applicationFactory matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.ApplicationFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   Swagger2DocumentationConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   SystemMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   SystemMetricsAutoConfiguration#fileDescriptorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.FileDescriptorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#processorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.ProcessorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#uptimeMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.UptimeMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThreadDumpEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.threaddump.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ThreadDumpEndpointAutoConfiguration#dumpEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.ThreadDumpEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.thymeleaf.templatemode.TemplateMode', 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   ThymeleafAutoConfiguration.DefaultTemplateResolverConfiguration matched:
      - @ConditionalOnMissingBean (names: defaultTemplateResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafDefaultConfiguration#templateEngine matched:
      - @ConditionalOnMissingBean (types: org.thymeleaf.spring5.ISpringTemplateEngine; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafJava8TimeDialect matched:
      - @ConditionalOnClass found required class 'org.thymeleaf.extras.java8time.dialect.Java8TimeDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafJava8TimeDialect#java8TimeDialect matched:
      - @ConditionalOnMissingBean (types: org.thymeleaf.extras.java8time.dialect.Java8TimeDialect; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.thymeleaf.enabled) matched (OnPropertyCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration.ThymeleafViewResolverConfiguration#thymeleafViewResolver matched:
      - @ConditionalOnMissingBean (names: thymeleafViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TomcatMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.tomcat.TomcatMetrics', 'org.apache.catalina.Manager' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   TomcatMetricsAutoConfiguration#tomcatMetricsBinder matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.tomcat.TomcatMetrics,org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'firstTransactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a primary bean from beans 'firstTransactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration#controllerEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#endpointMediaTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#pathMappedEndpoints matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#webEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration#servletEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) found beans 'webEndpointDiscoverer', 'dispatcherServlet' (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#controllerEndpointHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#webEndpointServletHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   WebMvcMetricsAutoConfiguration#webMvcTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AppOpticsMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.appoptics.AppOpticsMeterRegistry' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AtlasMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.atlas.AtlasMeterRegistry' (OnClassCondition)

   AuditAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnProperty (management.auditevents.enabled) matched (OnPropertyCondition)

   AuditEventsEndpointAutoConfiguration#auditEventsEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)

   AvailabilityHealthContributorAutoConfiguration#livenessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.livenessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityHealthContributorAutoConfiguration#readinessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.readinessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityProbesAutoConfiguration:
      Did not match:
         - Probes availability not running on a supported cloud platform (AvailabilityProbesAutoConfiguration.ProbesCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: cacheResolver types: org.springframework.cache.CacheManager; SearchStrategy: all) found beans of type 'org.springframework.cache.CacheManager' cacheManager (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CacheMeterBinderProvidersConfiguration.CaffeineCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Cache' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.EhCache2CacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Ehcache' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.HazelcastCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'com.hazelcast.spring.cache.HazelcastCache', 'com.hazelcast.core.Hazelcast' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.JCacheCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.CacheManager' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (management.cloudfoundry.enabled) matched (OnPropertyCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CompositeMeterRegistryConfiguration:
      Did not match:
         - NoneNestedConditions 1 matched 1 did not; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.SingleInjectableMeterRegistry @ConditionalOnSingleCandidate (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found a primary bean from beans 'simpleMeterRegistry'; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.NoMeterRegistryCondition @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition)

   ConnectionFactoryHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   ConnectionPoolMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.pool.ConnectionPool' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceInitializationConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) did not find a primary bean from beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)

   DataSourcePoolMetricsAutoConfiguration.DataSourcePoolMetadataMetricsConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider (OnBeanCondition)

   DatadogMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.datadog.DatadogMeterRegistry' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   DruidDataSourceAutoConfigure#dataSource:
      Did not match:
         - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) found beans of type 'javax.sql.DataSource' first, second, dynamicDataSource (OnBeanCondition)

   DruidFilterConfiguration#commonsLogFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.commons-log.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#configFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.config.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#encodingConvertFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.encoding.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#log4j2Filter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.log4j2.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#log4jFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.log4j.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#slf4jLogFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.slf4j.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#statFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.stat.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#wallConfig:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.wall.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#wallFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.wall.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidSpringAopConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.aop-patterns) did not find property 'spring.datasource.druid.aop-patterns' (OnPropertyCondition)

   DynatraceMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.dynatrace.DynatraceMeterRegistry' (OnClassCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.elastic.ElasticMeterRegistry' (OnClassCondition)

   ElasticSearchReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ElasticSearchRestHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestHighLevelClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestHighLevelClient' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'de.flapdoodle.embed.mongo.MongodStarter' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FlywayEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GangliaMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.ganglia.GangliaMeterRegistry' (OnClassCondition)

   GraphiteMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.graphite.GraphiteMeterRegistry' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.WebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HealthEndpointReactiveWebExtensionConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManager' (OnClassCondition)

   HibernateMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManagerFactory' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HttpTraceAutoConfiguration.ReactiveTraceFilterConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   HumioMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.humio.HumioMeterRegistry' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxDbHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.influx.InfluxMeterRegistry' (OnClassCondition)

   InfoContributorAutoConfiguration#buildInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.BuildProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#gitInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.GitProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   IntegrationGraphEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.graph.IntegrationGraphServer' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JdbcTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) did not find a primary bean from beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)

   JedisConnectionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.apache.commons.pool2.impl.GenericObjectPool', 'redis.clients.jedis.Jedis' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JerseySameManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JerseyServerMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.jersey2.server.MetricsApplicationEventListener' (OnClassCondition)

   JerseyWebEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JettyMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.server.Server' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmsHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   JmxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.jmx.JmxMeterRegistry' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JolokiaEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jolokia.http.AgentServlet' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.Transaction' (OnClassCondition)

   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactory:
      Did not match:
         - @ConditionalOnMissingBean (names: kafkaListenerContainerFactory; SearchStrategy: all) found beans named kafkaListenerContainerFactory (OnBeanCondition)

   KafkaAnnotationDrivenConfiguration.EnableKafkaConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: org.springframework.kafka.config.internalKafkaListenerAnnotationProcessor; SearchStrategy: all) found beans named org.springframework.kafka.config.internalKafkaListenerAnnotationProcessor (OnBeanCondition)

   KafkaAutoConfiguration#kafkaConsumerFactory:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.kafka.core.ConsumerFactory; SearchStrategy: all) found beans of type 'org.springframework.kafka.core.ConsumerFactory' consumerFactory (OnBeanCondition)

   KafkaAutoConfiguration#kafkaJaasInitializer:
      Did not match:
         - @ConditionalOnProperty (spring.kafka.jaas.enabled) did not find property 'spring.kafka.jaas.enabled' (OnPropertyCondition)

   KafkaAutoConfiguration#kafkaProducerFactory:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.kafka.core.ProducerFactory; SearchStrategy: all) found beans of type 'org.springframework.kafka.core.ProducerFactory' producerFactory (OnBeanCondition)

   KafkaAutoConfiguration#kafkaTemplate:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.kafka.core.KafkaTemplate; SearchStrategy: all) found beans of type 'org.springframework.kafka.core.KafkaTemplate' kafkaTemplate (OnBeanCondition)

   KafkaAutoConfiguration#kafkaTransactionManager:
      Did not match:
         - @ConditionalOnProperty (spring.kafka.producer.transaction-id-prefix) did not find property 'spring.kafka.producer.transaction-id-prefix' (OnPropertyCondition)

   KafkaStreamsAnnotationDrivenConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.kafka.streams.StreamsBuilder' (OnClassCondition)

   KairosMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.kairos.KairosMeterRegistry' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.LdapOperations' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   LiquibaseEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.integration.spring.SpringLiquibase' (OnClassCondition)

   Log4J2MetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.logging.log4j.core.LoggerContext' (OnClassCondition)

   MailHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.mail.javamail.JavaMailSenderImpl; SearchStrategy: all) did not find any beans of type org.springframework.mail.javamail.JavaMailSenderImpl (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnClassCondition)
         - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.JndiNameProperty @ConditionalOnProperty (spring.mail.jndi-name) did not find property 'jndi-name'; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.HostProperty @ConditionalOnProperty (spring.mail.host) did not find property 'host' (MailSenderAutoConfiguration.MailSenderCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.mail.internet.MimeMessage', 'javax.activation.MimeType', 'org.springframework.mail.MailSender' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   ManagementContextAutoConfiguration.DifferentManagementContextConfiguration:
      Did not match:
         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)

   ManagementWebSecurityAutoConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter,org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) did not find any beans; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass did not find required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ReactiveWebConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.data.mongodb.core.ReactiveMongoTemplate; SearchStrategy: all) did not find any beans of type org.springframework.data.mongodb.core.ReactiveMongoTemplate (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'org.springframework.data.mongodb.core.ReactiveMongoTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)
         - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   MybatisAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) did not find a primary bean from beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.FreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver', 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriverConfig' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.LegacyFreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.LegacyVelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.velocity.Driver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.ThymeleafConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.thymeleaf.ThymeleafLanguageDriver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.VelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.velocity.VelocityLanguageDriver', 'org.mybatis.scripting.velocity.VelocityLanguageDriverConfig' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NewRelicMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.newrelic.NewRelicMeterRegistry' (OnClassCondition)

   NoOpMeterRegistryConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (OnBeanCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PrometheusMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.prometheus.PrometheusMeterRegistry' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   QuartzEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   RabbitHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.amqp.rabbit.core.RabbitTemplate' (OnClassCondition)

   RabbitMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.ConnectionFactory' (OnClassCondition)

   ReactiveCloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveManagementContextAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveManagementWebSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration#redisTemplate:
      Did not match:
         - @ConditionalOnMissingBean (names: redisTemplate; SearchStrategy: all) found beans named redisTemplate (OnBeanCondition)

   RedisHealthContributorAutoConfiguration#redisHealthContributor:
      Did not match:
         - @ConditionalOnMissingBean (names: redisHealthIndicator,redisHealthContributor; SearchStrategy: all) found beans named redisHealthContributor (OnBeanCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SecurityRequestMatchersManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.web.util.matcher.RequestMatcher' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletEndpointManagementContextConfiguration.JerseyServletEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   ServletManagementContextAutoConfiguration.ApplicationContextFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (management.server.add-application-context-header=true) did not find property 'add-application-context-header' (OnPropertyCondition)

   ServletWebServerFactoryAutoConfiguration#forwardedHeaderFilter:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SessionsEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.FindByIndexNameSessionRepository' (OnClassCondition)

   SignalFxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.signalfx.SignalFxMeterRegistry' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SolrHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.SolrClient' (OnClassCondition)

   SpringBootAdminClientAutoConfiguration.ReactiveConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   SpringBootAdminClientAutoConfiguration.ReactiveRegistrationClientConfig:
      Did not match:
         - @ConditionalOnBean did not find required type 'org.springframework.web.reactive.function.client.WebClient$Builder' (OnBeanCondition)
         - @ConditionalOnBean (types: org.springframework.web.reactive.function.client.WebClient$Builder; SearchStrategy: all) did not find any beans of type org.springframework.web.reactive.function.client.WebClient$Builder (OnBeanCondition)

   SpringBootAdminClientCloudFoundryAutoConfiguration:
      Did not match:
         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)
      Matched:
         - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
         - matched (SpringBootAdminClientEnabledCondition)

   StackdriverMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.stackdriver.StackdriverMeterRegistry' (OnClassCondition)

   StartupEndpointAutoConfiguration:
      Did not match:
         - ApplicationStartup configured applicationStartup is of type class org.springframework.core.metrics.DefaultApplicationStartup, expected BufferingApplicationStartup. (StartupEndpointAutoConfiguration.ApplicationStartupCondition)

   StatsdMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.statsd.StatsdMeterRegistry' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor:
      Did not match:
         - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) found beans of type 'java.util.concurrent.Executor' asyncThreadPoolTaskExecutor (OnBeanCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration.DataAttributeDialectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.mxab.thymeleaf.extras.dataattribute.dialect.DataAttributeDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafReactiveConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ThymeleafAutoConfiguration.ThymeleafSecurityDialectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.extras.springsecurity5.dialect.SpringSecurityDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebFluxConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ThymeleafAutoConfiguration.ThymeleafWebLayoutConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'nz.net.ultraq.thymeleaf.LayoutDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration#resourceUrlEncodingFilter:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)

   WavefrontMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebClientMetricsConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebFluxEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   WebFluxMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport' org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)
         - Ancestor org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.client.core.WebServiceTemplate' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

    org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration



2022-08-30 11:21:57.279 [main] [DEBUG] o.s.b.c.p.s.ConfigurationPropertySourcesPropertyResolver$DefaultResolver - Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
2022-08-30 11:21:57.280 [main] [INFO ] com.test.springboot.SpringbootApplication - Started SpringbootApplication in 4.7 seconds (JVM running for 5.326)
2022-08-30 11:21:57.283 [main] [DEBUG] o.s.boot.availability.ApplicationAvailabilityBean - Application availability state LivenessState changed to CORRECT
2022-08-30 11:21:57.285 [main] [DEBUG] o.s.boot.availability.ApplicationAvailabilityBean - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2022-08-30 11:21:57.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:21:57.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:21:57.307 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:21:57.314 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Cluster ID: N_qWYp0DR-CyFe0Vu-kqrw
2022-08-30 11:21:57.315 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 11:21:57.317 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 11:21:57.397 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 11:21:57.777 [RMI TCP Connection(5)-192.168.9.100] [INFO ] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-08-30 11:21:57.777 [RMI TCP Connection(5)-192.168.9.100] [INFO ] org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-08-30 11:21:57.778 [RMI TCP Connection(5)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2022-08-30 11:21:57.778 [RMI TCP Connection(5)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2022-08-30 11:21:57.778 [RMI TCP Connection(5)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2022-08-30 11:21:57.779 [RMI TCP Connection(5)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@173851c6
2022-08-30 11:21:57.779 [RMI TCP Connection(5)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@112a933b
2022-08-30 11:21:57.779 [RMI TCP Connection(5)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2022-08-30 11:21:57.780 [RMI TCP Connection(5)-192.168.9.100] [INFO ] org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2022-08-30 11:21:57.795 [RMI TCP Connection(4)-192.168.9.100] [INFO ] com.alibaba.druid.pool.DruidDataSource - {dataSource-1,mybatis} inited
2022-08-30 11:21:58.217 [RMI TCP Connection(4)-192.168.9.100] [INFO ] com.alibaba.druid.pool.DruidDataSource - {dataSource-2,springbootdb} inited
2022-08-30 11:21:58.633 [RMI TCP Connection(4)-192.168.9.100] [INFO ] org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:107}] to localhost:27017
2022-08-30 11:21:59.358 [registrationTask1] [WARN ] d.c.b.a.client.registration.ApplicationRegistrator - Failed to register application as Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/) at spring-boot-admin ([http://localhost:9002/instances]): I/O error on POST request for "http://localhost:9002/instances": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect. Further attempts are logged on DEBUG level
2022-08-30 11:21:59.535 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully joined group with generation Generation{generationId=102, memberId='consumer-test-consumer-1-cbaf453a-2f28-4cb9-95b2-dab04a1ed2b8', protocol='range'}
2022-08-30 11:21:59.537 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Finished assignment for group at generation 102: {consumer-test-consumer-1-cbaf453a-2f28-4cb9-95b2-dab04a1ed2b8=Assignment(partitions=[test-0])}
2022-08-30 11:21:59.568 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully synced group in generation Generation{generationId=102, memberId='consumer-test-consumer-1-cbaf453a-2f28-4cb9-95b2-dab04a1ed2b8', protocol='range'}
2022-08-30 11:21:59.568 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Notifying assignor about the new Assignment(partitions=[test-0])
2022-08-30 11:21:59.570 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Adding newly assigned partitions: test-0
2022-08-30 11:21:59.629 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Setting offset for partition test-0 to the committed offset FetchPosition{offset=73, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[110.40.220.207:9092 (id: 1 rack: null)], epoch=0}}
2022-08-30 11:21:59.629 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions assigned: [test-0]
2022-08-30 11:22:03.166 [http-nio-8081-exec-2] [DEBUG] org.springframework.web.servlet.DispatcherServlet - POST "/mongouser/muti", parameters={masked}
2022-08-30 11:22:03.170 [http-nio-8081-exec-2] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserBetween(String, String)
2022-08-30 11:22:03.229 [http-nio-8081-exec-2] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 11:22:03.230 [http-nio-8081-exec-2] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[MongoUser{id='630d806b5d10f22d5517c421', name='eknt', age=26, description='ceces'}, MongoUser{id='6 (truncated)...]
2022-08-30 11:22:03.234 [http-nio-8081-exec-2] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 11:22:07.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:22:07.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:22:07.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:22:08.943 [http-nio-8081-exec-3] [DEBUG] org.springframework.web.servlet.DispatcherServlet - POST "/mongouser/mutilike", parameters={masked}
2022-08-30 11:22:08.944 [http-nio-8081-exec-3] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserLike(String, String, String, String)
2022-08-30 11:22:08.951 [http-nio-8081-exec-3] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 11:22:08.952 [http-nio-8081-exec-3] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[MongoUser{id='630d806b5d10f22d5517c421', name='eknt', age=26, description='ceces'}, MongoUser{id='6 (truncated)...]
2022-08-30 11:22:08.952 [http-nio-8081-exec-3] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 11:22:17.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:22:17.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:22:17.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:22:27.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:22:27.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:22:27.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:22:32.995 [http-nio-8081-exec-4] [DEBUG] org.springframework.web.servlet.DispatcherServlet - POST "/mongouser/", parameters={masked}
2022-08-30 11:22:32.996 [http-nio-8081-exec-4] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#createUser(MongoUser)
2022-08-30 11:22:33.028 [http-nio-8081-exec-4] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 11:22:33.028 [http-nio-8081-exec-4] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [MongoUser{id='630d8279dcb9351ddf1bc93c', name='eknt', age=40, description='www'}]
2022-08-30 11:22:33.029 [http-nio-8081-exec-4] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 11:22:37.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:22:37.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:22:37.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:22:40.169 [http-nio-8081-exec-5] [DEBUG] org.springframework.web.servlet.DispatcherServlet - POST "/mongouser/", parameters={masked}
2022-08-30 11:22:40.169 [http-nio-8081-exec-5] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#createUser(MongoUser)
2022-08-30 11:22:40.171 [http-nio-8081-exec-5] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 11:22:40.171 [http-nio-8081-exec-5] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [MongoUser{id='630d8280dcb9351ddf1bc93d', name='eknt', age=40, description='wwww56'}]
2022-08-30 11:22:40.172 [http-nio-8081-exec-5] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 11:22:46.242 [http-nio-8081-exec-6] [DEBUG] org.springframework.web.servlet.DispatcherServlet - POST "/mongouser/mutilike", parameters={masked}
2022-08-30 11:22:46.243 [http-nio-8081-exec-6] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserLike(String, String, String, String)
2022-08-30 11:22:46.246 [http-nio-8081-exec-6] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 11:22:46.246 [http-nio-8081-exec-6] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[MongoUser{id='630d8279dcb9351ddf1bc93c', name='eknt', age=40, description='www'}, MongoUser{id='630 (truncated)...]
2022-08-30 11:22:46.247 [http-nio-8081-exec-6] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 11:22:47.288 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:22:47.288 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:22:47.288 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:22:51.840 [http-nio-8081-exec-7] [DEBUG] org.springframework.web.servlet.DispatcherServlet - POST "/mongouser/mutilike", parameters={masked}
2022-08-30 11:22:51.841 [http-nio-8081-exec-7] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserLike(String, String, String, String)
2022-08-30 11:22:51.843 [http-nio-8081-exec-7] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 11:22:51.843 [http-nio-8081-exec-7] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [[]]
2022-08-30 11:22:51.843 [http-nio-8081-exec-7] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 11:22:57.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:22:57.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:22:57.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:23:07.290 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:23:07.291 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:23:07.291 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:23:17.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:23:17.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:23:17.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:23:27.288 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:23:27.288 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:23:27.288 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:23:37.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:23:37.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:23:37.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:23:47.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:23:47.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:23:47.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:23:57.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:23:57.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:23:57.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:24:07.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:24:07.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:24:07.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:24:17.290 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:24:17.290 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:24:17.291 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:24:27.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:24:27.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:24:27.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:24:37.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:24:37.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:24:37.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:24:47.291 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:24:47.291 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:24:47.291 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:24:57.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:24:57.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:24:57.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:25:07.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:25:07.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:25:07.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:25:17.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:25:17.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:25:17.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:25:27.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:25:27.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:25:27.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:25:37.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:25:37.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:25:37.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:25:47.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:25:47.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:25:47.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:25:57.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:25:57.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:25:57.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:26:07.291 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:26:07.291 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:26:07.292 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:26:17.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:26:17.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:26:17.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:26:27.291 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:26:27.291 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:26:27.291 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:26:37.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:26:37.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:26:37.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:26:47.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:26:47.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:26:47.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:26:57.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:26:57.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:26:57.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:27:07.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:27:07.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:27:07.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:27:17.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:27:17.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:27:17.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:27:27.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:27:27.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:27:27.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:27:37.292 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:27:37.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:27:37.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:27:47.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:27:47.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:27:47.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:27:57.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:27:57.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:27:57.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:28:07.288 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:28:07.289 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:28:07.289 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:28:17.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:28:17.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:28:17.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:28:27.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:28:27.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:28:27.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:28:37.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:28:37.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:28:37.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:28:47.288 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:28:47.288 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:28:47.288 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:28:57.291 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:28:57.292 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:28:57.292 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:29:07.290 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:29:07.290 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:29:07.290 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:29:17.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:29:17.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:29:17.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:29:27.291 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:29:27.291 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:29:27.292 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:29:37.292 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:29:37.292 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:29:37.292 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:29:47.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:29:47.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:29:47.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:29:57.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:29:57.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:29:57.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:30:07.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:30:07.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:30:07.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:30:17.291 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:30:17.291 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:30:17.291 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:30:27.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:30:27.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:30:27.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:30:37.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:30:37.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:30:37.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:30:47.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:30:47.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:30:47.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:30:57.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:30:57.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:30:57.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:31:07.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:31:07.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:31:07.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:31:17.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:31:17.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:31:17.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:31:27.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:31:27.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:31:27.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:31:37.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:31:37.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:31:37.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:31:47.290 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:31:47.290 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:31:47.290 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:31:57.291 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:31:57.291 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:31:57.292 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:32:07.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:32:07.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:32:07.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:32:17.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:32:17.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:32:17.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:32:27.291 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:32:27.291 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:32:27.292 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:32:37.306 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:32:37.306 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:32:37.306 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:32:47.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:32:47.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:32:47.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:32:57.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:32:57.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:32:57.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:33:07.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:33:07.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:33:07.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:33:17.292 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:33:17.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:33:17.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:33:27.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:33:27.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:33:27.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:33:37.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:33:37.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:33:37.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:33:47.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:33:47.306 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:33:47.306 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:33:57.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:33:57.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:33:57.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:34:07.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:34:07.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:34:07.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:34:17.306 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:34:17.306 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:34:17.307 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:34:27.291 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:34:27.291 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:34:27.291 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:34:37.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:34:37.304 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:34:37.304 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:34:47.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:34:47.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:34:47.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:34:57.292 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:34:57.292 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:34:57.292 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:35:07.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:35:07.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:35:07.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:35:17.306 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:35:17.306 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:35:17.307 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:35:27.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:35:27.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:35:27.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:35:37.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:35:37.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:35:37.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:35:47.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:35:47.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:35:47.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:35:57.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:35:57.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:35:57.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:36:07.304 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:36:07.304 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:36:07.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:36:17.306 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:36:17.306 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:36:17.306 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:36:27.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:36:27.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:36:27.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:36:37.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:36:37.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:36:37.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:36:47.292 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:36:47.292 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:36:47.292 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:36:57.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:36:57.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:36:57.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:37:07.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:37:07.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:37:07.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:37:17.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:37:17.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:37:17.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:37:27.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:37:27.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:37:27.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:37:37.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:37:37.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:37:37.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:37:47.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:37:47.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:37:47.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:37:57.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:37:57.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:37:57.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:38:07.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:38:07.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:38:07.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:38:17.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:38:17.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:38:17.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:38:27.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:38:27.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:38:27.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:38:37.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:38:37.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:38:37.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:38:47.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:38:47.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:38:47.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:38:57.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:38:57.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:38:57.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:39:07.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:39:07.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:39:07.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:39:17.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:39:17.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:39:17.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:39:27.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:39:27.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:39:27.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:39:37.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:39:37.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:39:37.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:39:47.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:39:47.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:39:47.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:39:57.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:39:57.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:39:57.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:40:07.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:40:07.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:40:07.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:40:17.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:40:17.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:40:17.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:40:27.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:40:27.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:40:27.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:40:37.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:40:37.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:40:37.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:40:47.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:40:47.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:40:47.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:40:57.306 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:40:57.307 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:40:57.307 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:41:07.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:41:07.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:41:07.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:41:17.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:41:17.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:41:17.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:41:27.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:41:27.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:41:27.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:41:37.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:41:37.306 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:41:37.306 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:41:47.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:41:47.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:41:47.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:41:57.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:41:57.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:41:57.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:42:07.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:42:07.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:42:07.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:42:17.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:42:17.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:42:17.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:42:27.304 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:42:27.304 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:42:27.304 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:42:37.307 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:42:37.308 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:42:37.308 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:42:47.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:42:47.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:42:47.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:42:57.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:42:57.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:42:57.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:43:07.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:43:07.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:43:07.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:43:17.307 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:43:17.307 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:43:17.307 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:43:27.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:43:27.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:43:27.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:43:37.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:43:37.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:43:37.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:43:47.292 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:43:47.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:43:47.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:43:57.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:43:57.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:43:57.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:44:07.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:44:07.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:44:07.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:44:17.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:44:17.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:44:17.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:44:27.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:44:27.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:44:27.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:44:37.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:44:37.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:44:37.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:44:47.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:44:47.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:44:47.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:44:57.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:44:57.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:44:57.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:45:07.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:45:07.306 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:45:07.306 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:45:17.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:45:17.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:45:17.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:45:27.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:45:27.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:45:27.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:45:37.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:45:37.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:45:37.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:45:47.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:45:47.304 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:45:47.304 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:45:57.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:45:57.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:45:57.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:46:07.293 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:46:07.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:46:07.294 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:46:17.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:46:17.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:46:17.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:46:27.295 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:46:27.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:46:27.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:46:37.304 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:46:37.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:46:37.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:46:47.304 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:46:47.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:46:47.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:46:57.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:46:57.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:46:57.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:47:07.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:47:07.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:47:07.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:47:17.311 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:47:17.311 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:47:17.311 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:47:27.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:47:27.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:47:27.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:47:37.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:47:37.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:47:37.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:47:47.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:47:47.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:47:47.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:47:57.307 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:47:57.307 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:47:57.307 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:48:07.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:48:07.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:48:07.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:48:17.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:48:17.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:48:17.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:48:27.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:48:27.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:48:27.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:48:37.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:48:37.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:48:37.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:48:47.311 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:48:47.311 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:48:47.312 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:48:57.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:48:57.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:48:57.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:49:07.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:49:07.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:49:07.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:49:17.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:49:17.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:49:17.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:49:27.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:49:27.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:49:27.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:49:37.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:49:37.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:49:37.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:49:47.309 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:49:47.309 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:49:47.309 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:49:57.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:49:57.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:49:57.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:50:07.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:50:07.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:50:07.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:50:17.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:50:17.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:50:17.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:50:27.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:50:27.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:50:27.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:50:37.304 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:50:37.304 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:50:37.304 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:50:47.306 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:50:47.307 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:50:47.307 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:50:57.310 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:50:57.310 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:50:57.311 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:51:07.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:51:07.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:51:07.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:51:17.310 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:51:17.311 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:51:17.311 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:51:27.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:51:27.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:51:27.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:51:37.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:51:37.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:51:37.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:51:47.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:51:47.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:51:47.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:51:57.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:51:57.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:51:57.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:52:07.296 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:52:07.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:52:07.297 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:52:17.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:52:17.304 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:52:17.304 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:52:27.308 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:52:27.308 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:52:27.308 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:52:37.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:52:37.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:52:37.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:52:47.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:52:47.304 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:52:47.304 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:52:57.312 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:52:57.312 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:52:57.312 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:53:07.308 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:53:07.308 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:53:07.308 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:53:17.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:53:17.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:53:17.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:53:27.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:53:27.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:53:27.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:53:37.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:53:37.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:53:37.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:53:47.304 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:53:47.304 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:53:47.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:53:57.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:53:57.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:53:57.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:54:07.306 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:54:07.306 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:54:07.307 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:54:17.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:54:17.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:54:17.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:54:27.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:54:27.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:54:27.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:54:37.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:54:37.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:54:37.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:54:47.311 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:54:47.311 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:54:47.311 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:54:57.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:54:57.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:54:57.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:55:07.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:55:07.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:55:07.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:55:17.310 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:55:17.311 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:55:17.311 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:55:27.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:55:27.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:55:27.301 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:55:37.313 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:55:37.313 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:55:37.313 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:55:47.314 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:55:47.314 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:55:47.314 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:55:57.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:55:57.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:55:57.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:56:07.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:56:07.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:56:07.302 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:56:17.309 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:56:17.310 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:56:17.310 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:56:27.312 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:56:27.312 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:56:27.312 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:56:37.311 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:56:37.311 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:56:37.312 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:56:47.309 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:56:47.310 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:56:47.310 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:56:57.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:56:57.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:56:57.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:57:07.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:57:07.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:57:07.303 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:57:17.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:57:17.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:57:17.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:57:27.314 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:57:27.314 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:57:27.314 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:57:37.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:57:37.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:57:37.298 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:57:47.310 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:57:47.310 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:57:47.311 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:57:57.310 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:57:57.310 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:57:57.310 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:58:07.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:58:07.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:58:07.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:58:17.306 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:58:17.307 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:58:17.307 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:58:27.314 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:58:27.314 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:58:27.314 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:58:37.311 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:58:37.311 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:58:37.312 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:58:47.308 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:58:47.309 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:58:47.309 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:58:57.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:58:57.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:58:57.305 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:59:07.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:59:07.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:59:07.300 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 11:59:17.314 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 11:59:17.314 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 11:59:17.315 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:00:31.875 [kafka-coordinator-heartbeat-thread | test-consumer] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
2022-08-30 12:00:31.878 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Error sending fetch request (sessionId=1692672578, epoch=4280) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2022-08-30 12:00:31.987 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [WARN ] org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Connection to node 1 (/110.40.220.207:9092) could not be established. Broker may not be available.
2022-08-30 12:00:32.228 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [WARN ] org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Connection to node 1 (/110.40.220.207:9092) could not be established. Broker may not be available.
2022-08-30 12:00:32.468 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [WARN ] org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Connection to node 1 (/110.40.220.207:9092) could not be established. Broker may not be available.
2022-08-30 12:00:32.783 [lettuce-nioEventLoop-4-1] [INFO ] io.lettuce.core.protocol.CommandHandler - null Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:378)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2022-08-30 12:00:32.817 [lettuce-eventExecutorLoop-1-3] [INFO ] io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was /110.40.220.207:6379
2022-08-30 12:00:32.956 [lettuce-nioEventLoop-4-2] [INFO ] io.lettuce.core.protocol.ReconnectionHandler - Reconnected to 110.40.220.207:6379
2022-08-30 12:00:33.036 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 12:00:33.133 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Attempt to heartbeat with Generation{generationId=102, memberId='consumer-test-consumer-1-cbaf453a-2f28-4cb9-95b2-dab04a1ed2b8', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
2022-08-30 12:00:33.133 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
2022-08-30 12:00:33.133 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Lost previously assigned partitions test-0
2022-08-30 12:00:33.134 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions lost: [test-0]
2022-08-30 12:00:33.134 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions revoked: [test-0]
2022-08-30 12:00:33.135 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 12:00:33.179 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 12:00:33.213 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully joined group with generation Generation{generationId=104, memberId='consumer-test-consumer-1-9144bc6c-9c9a-415c-868c-08293417c287', protocol='range'}
2022-08-30 12:00:33.214 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Finished assignment for group at generation 104: {consumer-test-consumer-1-9144bc6c-9c9a-415c-868c-08293417c287=Assignment(partitions=[test-0])}
2022-08-30 12:00:33.245 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully synced group in generation Generation{generationId=104, memberId='consumer-test-consumer-1-9144bc6c-9c9a-415c-868c-08293417c287', protocol='range'}
2022-08-30 12:00:33.246 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Notifying assignor about the new Assignment(partitions=[test-0])
2022-08-30 12:00:33.246 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Adding newly assigned partitions: test-0
2022-08-30 12:00:33.309 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Setting offset for partition test-0 to the committed offset FetchPosition{offset=73, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[110.40.220.207:9092 (id: 1 rack: null)], epoch=0}}
2022-08-30 12:00:33.309 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions assigned: [test-0]
2022-08-30 12:00:35.584 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:00:35.584 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:00:35.584 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:00:37.630 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:00:37.631 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:00:37.631 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:00:39.669 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:00:39.669 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:00:39.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:00:41.716 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:00:41.716 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:00:41.716 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:00:43.746 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:00:43.747 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:00:43.747 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:00:45.793 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:00:45.794 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:00:45.794 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:00:47.830 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:00:47.831 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:00:47.831 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:00:49.860 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:00:49.861 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:00:49.861 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:00:51.887 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:00:51.887 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:00:51.888 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:00:57.097 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:00:57.098 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:00:57.098 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 12:01:07.099 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:01:07.100 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:01:07.100 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:01:17.101 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:01:17.101 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:01:17.101 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:01:21.537 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Error sending fetch request (sessionId=1015238303, epoch=73) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2022-08-30 12:01:21.538 [lettuce-nioEventLoop-4-2] [INFO ] io.lettuce.core.protocol.CommandHandler - null Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:378)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2022-08-30 12:01:21.540 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: null.isDisconnected: true. Rediscovery will be attempted.
2022-08-30 12:01:21.614 [lettuce-eventExecutorLoop-1-4] [INFO ] io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was /110.40.220.207:6379
2022-08-30 12:01:21.658 [lettuce-nioEventLoop-4-3] [INFO ] io.lettuce.core.protocol.ReconnectionHandler - Reconnected to 110.40.220.207:6379
2022-08-30 12:01:21.746 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 12:01:27.102 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:01:27.102 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:01:27.103 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:01:37.097 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:01:37.097 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:01:37.097 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:01:47.091 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:01:47.091 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:01:47.092 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:01:57.083 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:01:57.083 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:01:57.083 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:02:07.085 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:02:07.086 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:02:07.086 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:02:17.082 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:02:17.082 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:02:17.082 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:02:27.081 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:02:27.081 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:02:27.082 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:02:37.074 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:02:37.074 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:02:37.075 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:02:47.072 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:02:47.073 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:02:47.073 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:02:57.070 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:02:57.071 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:02:57.071 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:04:57.642 [kafka-coordinator-heartbeat-thread | test-consumer] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
2022-08-30 12:04:57.642 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Error sending fetch request (sessionId=255054623, epoch=187) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2022-08-30 12:04:57.706 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [WARN ] org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Connection to node 1 (/110.40.220.207:9092) could not be established. Broker may not be available.
2022-08-30 12:04:57.815 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [WARN ] org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Connection to node 1 (/110.40.220.207:9092) could not be established. Broker may not be available.
2022-08-30 12:04:58.225 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [WARN ] org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Connection to node 1 (/110.40.220.207:9092) could not be established. Broker may not be available.
2022-08-30 12:04:58.704 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [WARN ] org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Connection to node 1 (/110.40.220.207:9092) could not be established. Broker may not be available.
2022-08-30 12:04:58.881 [lettuce-nioEventLoop-4-3] [INFO ] io.lettuce.core.protocol.CommandHandler - null Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:378)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2022-08-30 12:04:58.898 [lettuce-eventExecutorLoop-1-5] [INFO ] io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was /110.40.220.207:6379
2022-08-30 12:04:58.955 [lettuce-nioEventLoop-4-4] [INFO ] io.lettuce.core.protocol.ReconnectionHandler - Reconnected to 110.40.220.207:6379
2022-08-30 12:04:59.803 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 12:04:59.877 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Attempt to heartbeat with Generation{generationId=104, memberId='consumer-test-consumer-1-9144bc6c-9c9a-415c-868c-08293417c287', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
2022-08-30 12:04:59.878 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
2022-08-30 12:04:59.878 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Lost previously assigned partitions test-0
2022-08-30 12:04:59.878 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions lost: [test-0]
2022-08-30 12:04:59.878 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions revoked: [test-0]
2022-08-30 12:04:59.878 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 12:04:59.904 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 12:04:59.936 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully joined group with generation Generation{generationId=106, memberId='consumer-test-consumer-1-33e87c98-31fa-4a66-bfda-2502969c19f8', protocol='range'}
2022-08-30 12:04:59.936 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Finished assignment for group at generation 106: {consumer-test-consumer-1-33e87c98-31fa-4a66-bfda-2502969c19f8=Assignment(partitions=[test-0])}
2022-08-30 12:04:59.961 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully synced group in generation Generation{generationId=106, memberId='consumer-test-consumer-1-33e87c98-31fa-4a66-bfda-2502969c19f8', protocol='range'}
2022-08-30 12:04:59.961 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Notifying assignor about the new Assignment(partitions=[test-0])
2022-08-30 12:04:59.961 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Adding newly assigned partitions: test-0
2022-08-30 12:05:00.011 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Setting offset for partition test-0 to the committed offset FetchPosition{offset=73, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[110.40.220.207:9092 (id: 1 rack: null)], epoch=0}}
2022-08-30 12:05:00.012 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions assigned: [test-0]
2022-08-30 12:05:03.741 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:05:03.742 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:05:03.742 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:05:05.769 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:05:05.769 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:05:05.769 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:05:07.798 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:05:07.798 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:05:07.799 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:05:09.840 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:05:09.840 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:05:09.840 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:05:11.875 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:05:11.875 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:05:11.876 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:05:13.896 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:05:13.897 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:05:13.897 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:05:15.913 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:05:15.913 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:05:15.913 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 12:05:17.924 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:05:17.924 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:05:17.924 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 12:05:19.950 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:05:19.950 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:05:19.950 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 12:05:21.968 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:05:21.968 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:05:21.968 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 12:05:23.991 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:05:23.992 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:05:23.992 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 12:05:26.021 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:05:26.022 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:05:26.022 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 12:05:28.043 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:05:28.044 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:05:28.044 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 12:05:30.066 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:05:30.067 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:05:30.067 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 12:05:32.109 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:05:32.109 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:05:32.110 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 12:05:36.874 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:05:36.874 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:05:36.874 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:05:46.868 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:05:46.868 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:05:46.868 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:05:56.861 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:05:56.861 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:05:56.861 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:06:06.861 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:06:06.861 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:06:06.861 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:06:16.872 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:06:16.872 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:06:16.872 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:06:21.258 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: null.isDisconnected: true. Rediscovery will be attempted.
2022-08-30 12:06:21.258 [lettuce-nioEventLoop-4-4] [INFO ] io.lettuce.core.protocol.CommandHandler - null Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:378)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2022-08-30 12:06:21.259 [kafka-coordinator-heartbeat-thread | test-consumer] [INFO ] org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Error sending fetch request (sessionId=2023392405, epoch=151) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2022-08-30 12:06:21.290 [lettuce-eventExecutorLoop-1-6] [INFO ] io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was /110.40.220.207:6379
2022-08-30 12:06:21.339 [lettuce-nioEventLoop-4-5] [INFO ] io.lettuce.core.protocol.ReconnectionHandler - Reconnected to 110.40.220.207:6379
2022-08-30 12:06:21.450 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 12:06:26.863 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:06:26.863 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:06:26.863 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:06:36.872 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:06:36.873 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:06:36.873 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:06:46.880 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:06:46.881 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:06:46.881 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:06:56.889 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:06:56.890 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:06:56.890 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:07:06.892 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:07:06.892 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:07:06.892 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:07:16.895 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:07:16.895 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:07:16.895 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:07:26.908 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:07:26.909 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:07:26.909 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:08:18.627 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Error sending fetch request (sessionId=1349924646, epoch=126) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2022-08-30 12:08:18.627 [kafka-coordinator-heartbeat-thread | test-consumer] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
2022-08-30 12:08:18.692 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [WARN ] org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Connection to node 1 (/110.40.220.207:9092) could not be established. Broker may not be available.
2022-08-30 12:08:18.800 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [WARN ] org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Connection to node 1 (/110.40.220.207:9092) could not be established. Broker may not be available.
2022-08-30 12:08:19.201 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [WARN ] org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Connection to node 1 (/110.40.220.207:9092) could not be established. Broker may not be available.
2022-08-30 12:08:19.612 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [WARN ] org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Connection to node 1 (/110.40.220.207:9092) could not be established. Broker may not be available.
2022-08-30 12:08:19.758 [lettuce-nioEventLoop-4-5] [INFO ] io.lettuce.core.protocol.CommandHandler - null Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:378)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2022-08-30 12:08:19.817 [lettuce-eventExecutorLoop-1-7] [INFO ] io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was /110.40.220.207:6379
2022-08-30 12:08:19.885 [lettuce-nioEventLoop-4-6] [INFO ] io.lettuce.core.protocol.ReconnectionHandler - Reconnected to 110.40.220.207:6379
2022-08-30 12:08:20.039 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:08:20.040 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:08:20.040 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:08:20.564 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 12:08:20.672 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Attempt to heartbeat with Generation{generationId=106, memberId='consumer-test-consumer-1-33e87c98-31fa-4a66-bfda-2502969c19f8', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
2022-08-30 12:08:20.672 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
2022-08-30 12:08:20.673 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Lost previously assigned partitions test-0
2022-08-30 12:08:20.673 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions lost: [test-0]
2022-08-30 12:08:20.673 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions revoked: [test-0]
2022-08-30 12:08:20.673 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 12:08:20.709 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 12:08:20.747 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully joined group with generation Generation{generationId=108, memberId='consumer-test-consumer-1-57f8e6b2-b736-461d-a906-8682431747a8', protocol='range'}
2022-08-30 12:08:20.748 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Finished assignment for group at generation 108: {consumer-test-consumer-1-57f8e6b2-b736-461d-a906-8682431747a8=Assignment(partitions=[test-0])}
2022-08-30 12:08:20.783 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully synced group in generation Generation{generationId=108, memberId='consumer-test-consumer-1-57f8e6b2-b736-461d-a906-8682431747a8', protocol='range'}
2022-08-30 12:08:20.784 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Notifying assignor about the new Assignment(partitions=[test-0])
2022-08-30 12:08:20.784 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Adding newly assigned partitions: test-0
2022-08-30 12:08:20.856 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Setting offset for partition test-0 to the committed offset FetchPosition{offset=73, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[110.40.220.207:9092 (id: 1 rack: null)], epoch=0}}
2022-08-30 12:08:20.856 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions assigned: [test-0]
2022-08-30 12:08:22.070 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:08:22.070 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:08:22.070 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:08:24.111 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:08:24.111 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:08:24.112 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:08:26.137 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:08:26.137 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:08:26.137 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:08:28.183 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:08:28.183 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:08:28.184 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:08:30.239 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:08:30.239 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:08:30.240 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:08:36.704 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:08:36.705 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:08:36.705 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 12:08:46.695 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:08:46.696 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:08:46.696 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 12:08:56.699 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:08:56.699 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:08:56.699 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:09:06.696 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:09:06.696 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:09:06.696 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:09:09.527 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Error sending fetch request (sessionId=530477055, epoch=91) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2022-08-30 12:09:09.527 [lettuce-nioEventLoop-4-6] [INFO ] io.lettuce.core.protocol.CommandHandler - null Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:378)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2022-08-30 12:09:09.530 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: true. Rediscovery will be attempted.
2022-08-30 12:09:09.616 [lettuce-eventExecutorLoop-1-8] [INFO ] io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was /110.40.220.207:6379
2022-08-30 12:09:09.666 [lettuce-nioEventLoop-4-7] [INFO ] io.lettuce.core.protocol.ReconnectionHandler - Reconnected to 110.40.220.207:6379
2022-08-30 12:09:09.726 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 12:09:16.706 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:09:16.706 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:09:16.706 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:09:26.715 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:09:26.715 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:09:26.715 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:09:36.723 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:09:36.723 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:09:36.723 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:09:46.735 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:09:46.736 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:09:46.736 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:09:56.741 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:09:56.741 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:09:56.741 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:10:06.756 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:10:06.756 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:10:06.756 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:10:16.773 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:10:16.773 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:10:16.773 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:10:26.782 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:10:26.782 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:10:26.783 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:10:36.786 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:10:36.786 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:10:36.786 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:10:46.809 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:10:46.811 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:10:46.811 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:11:35.677 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:11:35.678 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:11:35.678 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:11:35.691 [kafka-coordinator-heartbeat-thread | test-consumer] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
2022-08-30 12:11:35.691 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Error sending fetch request (sessionId=438756149, epoch=188) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2022-08-30 12:11:35.755 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [WARN ] org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Connection to node 1 (/110.40.220.207:9092) could not be established. Broker may not be available.
2022-08-30 12:11:35.927 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [WARN ] org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Connection to node 1 (/110.40.220.207:9092) could not be established. Broker may not be available.
2022-08-30 12:11:36.234 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [WARN ] org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Connection to node 1 (/110.40.220.207:9092) could not be established. Broker may not be available.
2022-08-30 12:11:36.712 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [WARN ] org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Connection to node 1 (/110.40.220.207:9092) could not be established. Broker may not be available.
2022-08-30 12:11:36.743 [lettuce-nioEventLoop-4-7] [INFO ] io.lettuce.core.protocol.CommandHandler - null Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:378)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2022-08-30 12:11:36.818 [lettuce-eventExecutorLoop-1-9] [INFO ] io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was /110.40.220.207:6379
2022-08-30 12:11:36.881 [lettuce-nioEventLoop-4-8] [INFO ] io.lettuce.core.protocol.ReconnectionHandler - Reconnected to 110.40.220.207:6379
2022-08-30 12:11:37.637 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 12:11:37.717 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Attempt to heartbeat with Generation{generationId=108, memberId='consumer-test-consumer-1-57f8e6b2-b736-461d-a906-8682431747a8', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
2022-08-30 12:11:37.717 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
2022-08-30 12:11:37.717 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Lost previously assigned partitions test-0
2022-08-30 12:11:37.717 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions lost: [test-0]
2022-08-30 12:11:37.717 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions revoked: [test-0]
2022-08-30 12:11:37.718 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 12:11:37.747 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 12:11:37.752 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:11:37.752 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:11:37.752 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:11:37.778 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully joined group with generation Generation{generationId=110, memberId='consumer-test-consumer-1-75b5e9bb-b8db-47de-a950-12d05c79716a', protocol='range'}
2022-08-30 12:11:37.778 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Finished assignment for group at generation 110: {consumer-test-consumer-1-75b5e9bb-b8db-47de-a950-12d05c79716a=Assignment(partitions=[test-0])}
2022-08-30 12:11:37.810 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully synced group in generation Generation{generationId=110, memberId='consumer-test-consumer-1-75b5e9bb-b8db-47de-a950-12d05c79716a', protocol='range'}
2022-08-30 12:11:37.810 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Notifying assignor about the new Assignment(partitions=[test-0])
2022-08-30 12:11:37.810 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Adding newly assigned partitions: test-0
2022-08-30 12:11:37.863 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Setting offset for partition test-0 to the committed offset FetchPosition{offset=73, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[110.40.220.207:9092 (id: 1 rack: null)], epoch=0}}
2022-08-30 12:11:37.863 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions assigned: [test-0]
2022-08-30 12:11:39.790 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:11:39.791 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:11:39.791 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:11:41.832 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:11:41.832 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:11:41.832 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.69.167:8081/monitor, healthUrl=http://192.168.69.167:8081/monitor/health, serviceUrl=http://192.168.69.167:8081/)] as "application/json"
2022-08-30 12:11:43.842 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:11:43.843 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:11:43.843 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.69.167:8081/monitor, healthUrl=http://192.168.69.167:8081/monitor/health, serviceUrl=http://192.168.69.167:8081/)] as "application/json"
2022-08-30 12:11:46.592 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:11:46.593 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:11:46.593 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.69.167:8081/monitor, healthUrl=http://192.168.69.167:8081/monitor/health, serviceUrl=http://192.168.69.167:8081/)] as "application/json"
2022-08-30 12:11:56.587 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:11:56.587 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:11:56.587 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 12:12:06.591 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:12:06.591 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:12:06.591 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:12:16.590 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:12:16.590 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:12:16.590 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:12:26.585 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:12:26.585 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:12:26.585 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:12:26.699 [kafka-coordinator-heartbeat-thread | test-consumer] [INFO ] org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Error sending fetch request (sessionId=2021159490, epoch=91) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2022-08-30 12:12:26.700 [kafka-coordinator-heartbeat-thread | test-consumer] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: true. Rediscovery will be attempted.
2022-08-30 12:12:26.701 [lettuce-nioEventLoop-4-8] [INFO ] io.lettuce.core.protocol.CommandHandler - null Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:378)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2022-08-30 12:12:26.716 [lettuce-eventExecutorLoop-1-10] [INFO ] io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was /110.40.220.207:6379
2022-08-30 12:12:26.775 [lettuce-nioEventLoop-4-9] [INFO ] io.lettuce.core.protocol.ReconnectionHandler - Reconnected to 110.40.220.207:6379
2022-08-30 12:12:26.880 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 12:12:36.624 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:12:36.624 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:12:36.624 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:12:46.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:12:46.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:12:46.670 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:12:56.720 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:12:56.720 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:12:56.721 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:13:06.767 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:13:06.767 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:13:06.768 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:13:16.817 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:13:16.817 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:13:16.817 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:13:26.865 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:13:26.866 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:13:26.866 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:13:36.904 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:13:36.904 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:13:36.904 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:13:46.946 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:13:46.946 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:13:46.946 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:13:56.997 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:13:56.998 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:13:56.998 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:16:01.548 [kafka-coordinator-heartbeat-thread | test-consumer] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response.isDisconnected: false. Rediscovery will be attempted.
2022-08-30 12:16:01.548 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Error sending fetch request (sessionId=1194717926, epoch=189) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2022-08-30 12:16:01.614 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [WARN ] org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Connection to node 1 (/110.40.220.207:9092) could not be established. Broker may not be available.
2022-08-30 12:16:01.721 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [WARN ] org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Connection to node 1 (/110.40.220.207:9092) could not be established. Broker may not be available.
2022-08-30 12:16:01.985 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [WARN ] org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Connection to node 1 (/110.40.220.207:9092) could not be established. Broker may not be available.
2022-08-30 12:16:02.464 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [WARN ] org.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Connection to node 1 (/110.40.220.207:9092) could not be established. Broker may not be available.
2022-08-30 12:16:02.610 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:16:02.611 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:16:02.611 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:16:02.808 [lettuce-nioEventLoop-4-9] [INFO ] io.lettuce.core.protocol.CommandHandler - null Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:378)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2022-08-30 12:16:02.838 [lettuce-eventExecutorLoop-1-11] [INFO ] io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was /110.40.220.207:6379
2022-08-30 12:16:02.903 [lettuce-nioEventLoop-4-10] [INFO ] io.lettuce.core.protocol.ReconnectionHandler - Reconnected to 110.40.220.207:6379
2022-08-30 12:16:03.566 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 12:16:03.664 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Attempt to heartbeat with Generation{generationId=110, memberId='consumer-test-consumer-1-75b5e9bb-b8db-47de-a950-12d05c79716a', protocol='range'} and group instance id Optional.empty failed due to UNKNOWN_MEMBER_ID, resetting generation
2022-08-30 12:16:03.664 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Giving away all assigned partitions as lost since generation has been reset,indicating that consumer is no longer part of the group
2022-08-30 12:16:03.664 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Lost previously assigned partitions test-0
2022-08-30 12:16:03.664 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions lost: [test-0]
2022-08-30 12:16:03.664 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions revoked: [test-0]
2022-08-30 12:16:03.665 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 12:16:03.699 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 12:16:03.732 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully joined group with generation Generation{generationId=112, memberId='consumer-test-consumer-1-8085651b-f5f1-431e-994c-cb63c0d75259', protocol='range'}
2022-08-30 12:16:03.732 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Finished assignment for group at generation 112: {consumer-test-consumer-1-8085651b-f5f1-431e-994c-cb63c0d75259=Assignment(partitions=[test-0])}
2022-08-30 12:16:03.766 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully synced group in generation Generation{generationId=112, memberId='consumer-test-consumer-1-8085651b-f5f1-431e-994c-cb63c0d75259', protocol='range'}
2022-08-30 12:16:03.766 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Notifying assignor about the new Assignment(partitions=[test-0])
2022-08-30 12:16:03.767 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Adding newly assigned partitions: test-0
2022-08-30 12:16:03.912 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Setting offset for partition test-0 to the committed offset FetchPosition{offset=73, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[110.40.220.207:9092 (id: 1 rack: null)], epoch=0}}
2022-08-30 12:16:04.097 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions assigned: [test-0]
2022-08-30 12:16:04.622 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:16:04.623 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:16:04.623 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:16:06.656 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:16:06.657 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:16:06.657 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:16:08.694 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:16:08.695 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:16:08.695 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.69.167:8081/monitor, healthUrl=http://192.168.69.167:8081/monitor/health, serviceUrl=http://192.168.69.167:8081/)] as "application/json"
2022-08-30 12:16:10.736 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:16:10.736 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:16:10.737 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.69.167:8081/monitor, healthUrl=http://192.168.69.167:8081/monitor/health, serviceUrl=http://192.168.69.167:8081/)] as "application/json"
2022-08-30 12:16:12.763 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:16:12.763 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:16:12.764 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.69.167:8081/monitor, healthUrl=http://192.168.69.167:8081/monitor/health, serviceUrl=http://192.168.69.167:8081/)] as "application/json"
2022-08-30 12:16:14.800 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:16:14.801 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:16:14.801 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.69.167:8081/monitor, healthUrl=http://192.168.69.167:8081/monitor/health, serviceUrl=http://192.168.69.167:8081/)] as "application/json"
2022-08-30 12:16:16.820 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:16:16.821 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:16:16.821 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.69.167:8081/monitor, healthUrl=http://192.168.69.167:8081/monitor/health, serviceUrl=http://192.168.69.167:8081/)] as "application/json"
2022-08-30 12:16:18.860 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:16:18.861 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:16:18.861 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.69.167:8081/monitor, healthUrl=http://192.168.69.167:8081/monitor/health, serviceUrl=http://192.168.69.167:8081/)] as "application/json"
2022-08-30 12:16:20.901 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:16:20.901 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:16:20.901 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 12:16:22.928 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:16:22.929 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:16:22.929 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 12:16:24.960 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:16:24.960 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:16:24.960 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 12:16:26.981 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:16:26.981 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:16:26.981 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 12:16:29.016 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:16:29.017 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:16:29.017 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 12:16:31.041 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:16:31.041 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:16:31.042 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://192.168.9.100:8081/monitor, healthUrl=http://192.168.9.100:8081/monitor/health, serviceUrl=http://192.168.9.100:8081/)] as "application/json"
2022-08-30 12:16:36.816 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:16:36.816 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:16:36.816 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:16:46.824 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:16:46.824 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:16:46.824 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:16:56.827 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:16:56.827 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:16:56.828 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:17:06.820 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:17:06.820 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:17:06.821 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:17:16.815 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:17:16.816 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:17:16.816 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:17:22.631 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] org.apache.kafka.clients.FetchSessionHandler - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Error sending fetch request (sessionId=1078526428, epoch=148) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2022-08-30 12:17:22.631 [lettuce-nioEventLoop-4-10] [INFO ] io.lettuce.core.protocol.CommandHandler - null Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:378)
	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
2022-08-30 12:17:22.632 [kafka-coordinator-heartbeat-thread | test-consumer] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable.isDisconnected: true. Rediscovery will be attempted.
2022-08-30 12:17:22.646 [lettuce-eventExecutorLoop-1-1] [INFO ] io.lettuce.core.protocol.ConnectionWatchdog - Reconnecting, last destination was /110.40.220.207:6379
2022-08-30 12:17:22.699 [lettuce-nioEventLoop-4-11] [INFO ] io.lettuce.core.protocol.ReconnectionHandler - Reconnected to 110.40.220.207:6379
2022-08-30 12:17:22.849 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 12:17:26.827 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:17:26.827 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:17:26.828 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:17:36.852 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:17:36.852 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:17:36.852 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:17:46.866 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:17:46.866 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:17:46.867 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:17:56.874 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:17:56.875 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:17:56.875 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:18:06.905 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:18:06.905 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:18:06.905 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:18:16.923 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:18:16.923 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:18:16.923 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:18:26.934 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:18:26.934 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:18:26.934 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:18:36.961 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:18:36.961 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:18:36.961 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:18:46.979 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:18:46.979 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:18:46.979 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:18:56.998 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:18:56.999 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:18:56.999 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:19:07.006 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:19:07.006 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:19:07.006 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:19:17.033 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:19:17.033 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:19:17.034 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:19:27.046 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:19:27.047 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:19:27.047 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:19:37.064 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:19:37.064 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:19:37.065 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:19:47.089 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:19:47.089 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:19:47.089 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:19:57.096 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:19:57.097 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:19:57.097 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:20:07.119 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:20:07.119 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:20:07.119 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:20:17.144 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:20:17.145 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:20:17.145 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:20:27.151 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:20:27.152 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:20:27.152 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:20:37.171 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:20:37.171 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:20:37.171 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:20:47.187 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:20:47.187 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:20:47.187 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:20:57.215 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:20:57.216 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:20:57.216 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:21:07.229 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:21:07.229 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:21:07.230 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:21:17.254 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:21:17.254 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:21:17.254 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:21:27.256 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:21:27.257 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:21:27.257 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:21:37.285 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:21:37.285 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:21:37.285 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:21:47.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:21:47.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:21:47.299 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:21:57.314 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:21:57.314 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:21:57.314 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:22:07.335 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:22:07.335 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:22:07.335 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:22:17.360 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:22:17.360 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:22:17.360 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:22:27.363 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:22:27.364 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:22:27.364 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:22:37.362 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:22:37.363 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:22:37.363 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:22:47.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:22:47.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:22:47.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:22:57.361 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:22:57.362 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:22:57.362 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:23:07.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:23:07.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:23:07.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:23:17.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:23:17.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:23:17.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:23:27.362 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:23:27.363 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:23:27.363 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:23:37.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:23:37.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:23:37.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:23:47.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:23:47.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:23:47.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:23:57.361 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:23:57.361 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:23:57.361 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:24:07.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:24:07.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:24:07.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:24:17.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:24:17.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:24:17.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:24:27.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:24:27.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:24:27.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:24:37.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:24:37.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:24:37.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:24:47.363 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:24:47.364 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:24:47.364 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:24:57.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:24:57.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:24:57.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:25:07.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:25:07.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:25:07.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:25:17.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:25:17.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:25:17.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:25:27.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:25:27.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:25:27.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:25:37.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:25:37.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:25:37.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:25:47.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:25:47.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:25:47.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:25:57.366 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:25:57.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:25:57.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:26:07.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:26:07.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:26:07.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:26:17.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:26:17.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:26:17.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:26:27.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:26:27.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:26:27.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:26:37.361 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:26:37.362 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:26:37.362 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:26:47.363 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:26:47.363 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:26:47.363 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:26:57.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:26:57.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:26:57.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:27:07.366 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:27:07.366 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:27:07.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:27:17.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:27:17.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:27:17.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:27:27.362 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:27:27.363 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:27:27.363 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:27:37.365 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:27:37.365 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:27:37.365 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:27:47.366 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:27:47.366 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:27:47.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:27:57.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:27:57.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:27:57.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:28:07.363 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:28:07.364 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:28:07.364 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:28:17.361 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:28:17.361 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:28:17.362 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:28:27.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:28:27.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:28:27.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:28:37.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:28:37.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:28:37.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:28:47.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:28:47.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:28:47.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:28:57.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:28:57.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:28:57.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:29:07.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:29:07.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:29:07.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:29:17.364 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:29:17.365 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:29:17.365 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:29:27.361 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:29:27.361 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:29:27.361 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:29:37.365 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:29:37.365 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:29:37.366 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:29:47.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:29:47.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:29:47.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:29:57.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:29:57.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:29:57.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:30:07.366 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:30:07.366 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:30:07.366 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:30:17.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:30:17.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:30:17.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:30:27.365 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:30:27.366 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:30:27.366 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:30:37.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:30:37.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:30:37.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:30:47.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:30:47.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:30:47.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:30:57.365 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:30:57.366 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:30:57.366 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:31:07.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:31:07.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:31:07.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:31:17.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:31:17.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:31:17.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:31:27.366 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:31:27.366 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:31:27.366 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:31:37.364 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:31:37.365 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:31:37.365 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:31:47.360 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:31:47.361 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:31:47.361 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:31:57.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:31:57.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:31:57.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:32:07.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:32:07.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:32:07.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:32:17.364 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:32:17.364 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:32:17.364 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:32:27.360 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:32:27.361 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:32:27.361 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:32:37.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:32:37.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:32:37.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:32:47.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:32:47.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:32:47.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:32:57.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:32:57.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:32:57.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:33:07.364 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:33:07.365 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:33:07.365 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:33:17.361 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:33:17.361 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:33:17.361 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:33:27.365 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:33:27.365 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:33:27.365 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:33:37.365 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:33:37.366 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:33:37.366 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:33:47.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:33:47.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:33:47.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:33:57.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:33:57.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:33:57.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:34:07.361 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:34:07.362 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:34:07.362 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:34:17.364 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:34:17.365 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:34:17.365 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:34:27.365 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:34:27.365 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:34:27.365 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:34:37.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:34:37.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:34:37.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:34:47.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:34:47.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:34:47.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:34:57.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:34:57.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:34:57.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:35:07.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:35:07.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:35:07.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:35:17.366 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:35:17.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:35:17.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:35:27.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:35:27.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:35:27.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:35:37.362 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:35:37.362 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:35:37.362 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:35:47.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:35:47.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:35:47.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:35:57.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:35:57.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:35:57.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:36:07.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:36:07.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:36:07.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:36:17.369 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:36:17.369 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:36:17.369 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:36:27.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:36:27.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:36:27.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:36:37.366 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:36:37.366 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:36:37.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:36:47.369 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:36:47.369 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:36:47.369 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:36:57.362 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:36:57.363 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:36:57.363 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:37:07.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:37:07.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:37:07.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:37:17.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:37:17.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:37:17.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:37:27.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:37:27.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:37:27.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:37:37.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:37:37.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:37:37.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:37:47.366 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:37:47.366 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:37:47.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:37:57.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:37:57.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:37:57.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:38:07.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:38:07.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:38:07.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:38:17.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:38:17.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:38:17.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:38:27.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:38:27.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:38:27.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:38:37.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:38:37.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:38:37.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:38:47.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:38:47.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:38:47.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:38:57.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:38:57.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:38:57.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:39:07.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:39:07.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:39:07.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:39:17.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:39:17.369 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:39:17.369 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:39:27.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:39:27.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:39:27.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:39:37.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:39:37.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:39:37.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:39:47.366 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:39:47.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:39:47.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:39:57.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:39:57.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:39:57.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:40:07.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:40:07.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:40:07.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:40:17.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:40:17.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:40:17.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:40:27.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:40:27.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:40:27.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:40:37.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:40:37.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:40:37.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:40:47.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:40:47.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:40:47.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:40:57.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:40:57.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:40:57.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:41:07.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:41:07.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:41:07.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:41:17.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:41:17.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:41:17.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:41:27.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:41:27.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:41:27.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:41:37.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:41:37.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:41:37.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:41:47.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:41:47.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:41:47.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:41:57.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:41:57.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:41:57.369 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:42:07.365 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:42:07.365 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:42:07.365 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:42:17.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:42:17.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:42:17.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:42:27.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:42:27.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:42:27.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:42:37.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:42:37.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:42:37.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:42:47.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:42:47.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:42:47.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:42:57.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:42:57.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:42:57.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:43:07.369 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:43:07.369 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:43:07.369 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:43:17.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:43:17.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:43:17.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:43:27.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:43:27.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:43:27.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:43:37.366 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:43:37.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:43:37.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:43:47.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:43:47.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:43:47.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:43:57.366 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:43:57.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:43:57.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:44:07.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:44:07.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:44:07.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:44:17.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:44:17.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:44:17.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:44:27.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:44:27.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:44:27.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:44:37.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:44:37.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:44:37.369 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:44:47.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:44:47.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:44:47.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:44:57.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:44:57.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:44:57.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:45:07.369 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:45:07.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:45:07.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:45:17.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:45:17.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:45:17.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:45:27.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:45:27.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:45:27.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:45:37.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:45:37.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:45:37.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:45:47.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:45:47.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:45:47.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:45:57.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:45:57.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:45:57.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:46:07.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:46:07.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:46:07.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:46:17.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:46:17.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:46:17.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:46:27.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:46:27.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:46:27.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:46:37.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:46:37.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:46:37.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:46:47.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:46:47.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:46:47.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:46:57.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:46:57.369 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:46:57.369 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:47:07.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:47:07.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:47:07.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:47:17.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:47:17.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:47:17.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:47:27.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:47:27.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:47:27.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:47:37.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:47:37.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:47:37.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:47:47.365 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:47:47.366 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:47:47.366 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:47:57.365 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:47:57.365 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:47:57.365 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:48:07.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:48:07.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:48:07.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:48:17.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:48:17.369 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:48:17.369 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:48:27.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:48:27.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:48:27.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:48:37.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:48:37.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:48:37.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:48:47.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:48:47.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:48:47.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:48:57.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:48:57.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:48:57.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:49:07.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:49:07.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:49:07.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:49:17.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:49:17.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:49:17.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:49:27.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:49:27.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:49:27.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:49:37.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:49:37.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:49:37.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:49:47.369 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:49:47.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:49:47.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:49:57.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:49:57.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:49:57.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:50:07.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:50:07.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:50:07.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:50:17.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:50:17.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:50:17.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:50:27.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:50:27.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:50:27.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:50:37.369 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:50:37.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:50:37.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:50:47.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:50:47.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:50:47.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:50:57.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:50:57.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:50:57.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:51:07.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:51:07.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:51:07.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:51:17.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:51:17.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:51:17.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:51:27.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:51:27.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:51:27.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:51:37.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:51:37.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:51:37.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:51:47.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:51:47.369 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:51:47.369 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:51:57.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:51:57.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:51:57.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:52:07.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:52:07.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:52:07.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:52:17.369 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:52:17.369 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:52:17.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:52:27.369 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:52:27.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:52:27.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:52:37.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:52:37.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:52:37.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:52:47.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:52:47.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:52:47.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:52:57.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:52:57.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:52:57.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:53:07.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:53:07.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:53:07.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:53:17.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:53:17.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:53:17.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:53:27.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:53:27.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:53:27.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:53:37.367 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:53:37.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:53:37.368 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:53:47.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:53:47.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:53:47.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:53:57.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:53:57.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:53:57.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:54:07.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:54:07.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:54:07.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:54:17.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:54:17.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:54:17.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:54:27.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:54:27.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:54:27.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:54:37.369 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:54:37.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:54:37.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:54:47.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:54:47.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:54:47.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:54:57.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:54:57.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:54:57.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:55:07.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:55:07.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:55:07.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:55:17.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:55:17.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:55:17.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:55:27.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:55:27.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:55:27.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:55:37.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:55:37.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:55:37.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:55:47.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:55:47.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:55:47.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:55:57.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:55:57.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:55:57.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:56:07.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:56:07.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:56:07.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:56:17.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:56:17.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:56:17.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:56:27.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:56:27.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:56:27.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:56:37.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:56:37.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:56:37.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:56:47.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:56:47.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:56:47.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:56:57.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:56:57.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:56:57.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:57:07.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:57:07.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:57:07.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:57:17.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:57:17.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:57:17.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:57:27.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:57:27.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:57:27.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:57:37.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:57:37.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:57:37.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:57:47.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:57:47.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:57:47.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:57:57.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:57:57.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:57:57.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:58:07.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:58:07.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:58:07.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:58:17.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:58:17.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:58:17.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:58:27.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:58:27.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:58:27.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:58:37.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:58:37.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:58:37.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:58:47.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:58:47.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:58:47.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:58:57.370 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:58:57.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:58:57.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:59:07.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:59:07.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:59:07.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:59:17.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:59:17.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:59:17.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:59:27.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:59:27.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:59:27.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:59:37.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:59:37.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:59:37.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:59:47.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:59:47.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:59:47.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 12:59:57.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 12:59:57.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 12:59:57.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:00:07.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:00:07.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:00:07.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:00:17.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:00:17.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:00:17.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:00:27.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:00:27.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:00:27.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:00:37.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:00:37.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:00:37.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:00:47.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:00:47.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:00:47.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:00:57.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:00:57.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:00:57.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:01:07.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:01:07.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:01:07.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:01:17.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:01:17.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:01:17.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:01:27.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:01:27.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:01:27.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:01:37.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:01:37.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:01:37.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:01:47.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:01:47.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:01:47.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:01:57.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:01:57.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:01:57.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:02:07.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:02:07.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:02:07.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:02:17.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:02:17.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:02:17.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:02:27.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:02:27.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:02:27.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:02:37.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:02:37.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:02:37.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:02:47.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:02:47.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:02:47.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:02:57.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:02:57.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:02:57.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:03:07.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:03:07.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:03:07.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:03:17.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:03:17.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:03:17.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:03:27.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:03:27.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:03:27.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:03:37.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:03:37.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:03:37.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:03:47.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:03:47.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:03:47.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:03:57.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:03:57.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:03:57.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:04:07.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:04:07.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:04:07.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:04:17.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:04:17.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:04:17.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:04:27.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:04:27.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:04:27.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:04:37.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:04:37.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:04:37.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:04:47.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:04:47.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:04:47.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:04:57.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:04:57.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:04:57.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:05:07.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:05:07.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:05:07.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:05:17.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:05:17.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:05:17.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:05:27.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:05:27.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:05:27.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:05:37.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:05:37.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:05:37.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:05:47.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:05:47.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:05:47.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:05:57.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:05:57.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:05:57.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:06:07.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:06:07.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:06:07.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:06:17.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:06:17.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:06:17.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:06:27.371 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:06:27.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:06:27.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:06:37.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:06:37.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:06:37.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:06:47.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:06:47.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:06:47.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:06:57.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:06:57.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:06:57.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:07:07.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:07:07.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:07:07.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:07:17.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:07:17.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:07:17.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:07:27.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:07:27.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:07:27.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:07:37.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:07:37.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:07:37.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:07:47.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:07:47.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:07:47.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:07:57.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:07:57.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:07:57.374 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:08:07.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:08:07.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:08:07.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:08:17.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:08:17.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:08:17.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:08:27.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:08:27.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:08:27.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:08:37.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:08:37.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:08:37.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:08:47.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:08:47.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:08:47.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:08:57.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:08:57.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:08:57.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:09:07.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:09:07.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:09:07.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:09:17.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:09:17.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:09:17.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:09:27.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:09:27.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:09:27.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:09:37.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:09:37.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:09:37.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:09:47.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:09:47.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:09:47.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:09:57.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:09:57.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:09:57.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:10:07.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:10:07.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:10:07.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:10:17.372 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:10:17.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:10:17.373 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:10:27.389 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:10:27.389 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:10:27.390 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:10:37.389 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:10:37.389 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:10:37.389 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:10:47.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:10:47.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:10:47.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:10:57.375 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:10:57.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:10:57.376 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:11:07.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:11:07.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:11:07.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:11:17.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:11:17.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:11:17.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:11:27.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:11:27.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:11:27.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:11:37.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:11:37.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:11:37.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:11:47.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:11:47.389 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:11:47.389 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:11:57.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:11:57.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:11:57.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:12:07.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:12:07.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:12:07.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:12:17.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:12:17.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:12:17.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:12:27.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:12:27.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:12:27.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:12:37.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:12:37.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:12:37.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:12:47.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:12:47.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:12:47.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:12:57.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:12:57.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:12:57.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:13:07.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:13:07.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:13:07.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:13:17.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:13:17.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:13:17.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:13:27.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:13:27.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:13:27.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:13:37.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:13:37.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:13:37.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:13:47.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:13:47.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:13:47.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:13:57.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:13:57.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:13:57.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:14:07.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:14:07.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:14:07.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:14:17.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:14:17.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:14:17.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:14:27.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:14:27.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:14:27.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:14:37.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:14:37.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:14:37.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:14:47.390 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:14:47.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:14:47.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:14:57.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:14:57.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:14:57.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:15:07.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:15:07.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:15:07.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:15:17.390 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:15:17.390 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:15:17.390 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:15:27.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:15:27.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:15:27.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:15:37.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:15:37.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:15:37.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:15:47.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:15:47.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:15:47.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:15:57.390 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:15:57.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:15:57.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:16:07.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:16:07.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:16:07.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:16:17.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:16:17.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:16:17.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:16:27.390 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:16:27.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:16:27.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:16:37.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:16:37.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:16:37.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:16:47.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:16:47.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:16:47.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:16:57.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:16:57.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:16:57.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:17:07.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:17:07.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:17:07.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:17:17.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:17:17.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:17:17.389 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:17:27.389 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:17:27.389 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:17:27.390 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:17:37.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:17:37.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:17:37.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:17:47.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:17:47.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:17:47.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:17:57.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:17:57.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:17:57.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:18:07.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:18:07.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:18:07.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:18:17.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:18:17.389 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:18:17.389 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:18:27.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:18:27.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:18:27.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:18:37.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:18:37.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:18:37.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:18:47.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:18:47.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:18:47.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:18:57.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:18:57.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:18:57.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:19:07.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:19:07.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:19:07.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:19:17.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:19:17.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:19:17.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:19:27.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:19:27.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:19:27.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:19:37.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:19:37.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:19:37.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:19:47.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:19:47.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:19:47.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:19:57.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:19:57.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:19:57.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:20:07.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:20:07.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:20:07.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:20:17.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:20:17.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:20:17.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:20:27.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:20:27.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:20:27.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:20:37.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:20:37.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:20:37.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:20:47.392 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:20:47.392 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:20:47.393 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:20:57.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:20:57.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:20:57.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:21:07.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:21:07.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:21:07.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:21:17.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:21:17.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:21:17.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:21:27.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:21:27.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:21:27.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:21:37.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:21:37.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:21:37.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:21:47.390 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:21:47.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:21:47.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:21:57.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:21:57.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:21:57.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:22:07.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:22:07.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:22:07.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:22:17.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:22:17.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:22:17.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:22:27.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:22:27.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:22:27.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:22:37.393 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:22:37.393 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:22:37.393 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:22:47.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:22:47.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:22:47.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:22:57.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:22:57.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:22:57.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:23:07.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:23:07.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:23:07.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:23:17.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:23:17.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:23:17.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:23:27.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:23:27.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:23:27.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:23:37.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:23:37.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:23:37.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:23:47.389 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:23:47.390 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:23:47.390 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:23:57.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:23:57.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:23:57.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:24:07.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:24:07.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:24:07.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:24:17.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:24:17.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:24:17.377 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:24:27.390 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:24:27.390 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:24:27.390 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:24:37.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:24:37.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:24:37.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:24:47.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:24:47.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:24:47.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:24:57.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:24:57.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:24:57.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:25:07.390 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:25:07.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:25:07.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:25:17.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:25:17.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:25:17.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:25:27.389 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:25:27.390 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:25:27.390 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:25:37.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:25:37.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:25:37.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:25:47.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:25:47.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:25:47.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:25:57.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:25:57.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:25:57.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:26:07.393 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:26:07.393 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:26:07.393 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:26:17.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:26:17.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:26:17.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:26:27.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:26:27.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:26:27.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:26:37.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:26:37.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:26:37.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:26:47.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:26:47.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:26:47.389 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:26:57.393 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:26:57.393 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:26:57.393 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:27:07.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:27:07.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:27:07.378 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:27:17.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:27:17.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:27:17.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:27:27.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:27:27.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:27:27.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:27:37.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:27:37.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:27:37.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:27:47.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:27:47.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:27:47.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:27:57.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:27:57.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:27:57.379 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:28:07.390 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:28:07.390 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:28:07.390 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:28:17.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:28:17.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:28:17.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:28:27.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:28:27.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:28:27.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:28:37.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:28:37.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:28:37.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:28:47.389 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:28:47.389 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:28:47.389 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:28:57.389 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:28:57.390 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:28:57.390 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:29:07.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:29:07.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:29:07.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:29:17.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:29:17.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:29:17.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:29:27.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:29:27.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:29:27.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:29:37.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:29:37.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:29:37.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:29:47.395 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:29:47.396 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:29:47.396 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:29:57.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:29:57.389 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:29:57.389 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:30:07.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:30:07.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:30:07.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:30:17.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:30:17.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:30:17.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:30:27.394 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:30:27.394 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:30:27.395 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:30:37.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:30:37.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:30:37.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:30:47.393 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:30:47.394 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:30:47.394 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:30:57.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:30:57.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:30:57.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:31:07.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:31:07.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:31:07.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:31:17.396 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:31:17.396 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:31:17.396 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:31:27.389 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:31:27.390 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:31:27.390 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:31:37.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:31:37.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:31:37.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:31:47.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:31:47.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:31:47.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:31:57.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:31:57.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:31:57.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:32:07.394 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:32:07.394 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:32:07.394 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:32:17.393 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:32:17.394 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:32:17.394 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:32:27.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:32:27.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:32:27.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:32:37.394 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:32:37.394 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:32:37.394 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:32:47.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:32:47.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:32:47.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:32:57.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:32:57.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:32:57.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:33:07.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:33:07.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:33:07.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:33:17.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:33:17.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:33:17.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:33:27.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:33:27.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:33:27.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:33:37.385 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:33:37.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:33:37.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:33:47.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:33:47.392 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:33:47.392 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:33:57.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:33:57.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:33:57.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:34:07.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:34:07.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:34:07.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:34:17.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:34:17.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:34:17.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:34:27.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:34:27.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:34:27.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:34:37.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:34:37.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:34:37.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:34:47.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:34:47.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:34:47.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:34:57.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:34:57.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:34:57.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:35:07.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:35:07.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:35:07.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:35:17.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:35:17.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:35:17.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:35:27.396 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:35:27.396 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:35:27.396 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:35:37.397 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:35:37.397 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:35:37.397 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:35:47.390 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:35:47.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:35:47.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:35:57.380 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:35:57.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:35:57.381 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:36:07.395 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:36:07.395 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:36:07.395 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:36:17.393 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:36:17.393 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:36:17.394 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:36:27.392 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:36:27.393 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:36:27.393 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:36:37.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:36:37.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:36:37.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:36:47.396 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:36:47.396 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:36:47.396 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:36:57.392 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:36:57.392 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:36:57.393 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:37:07.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:37:07.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:37:07.388 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:37:17.395 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:37:17.395 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:37:17.395 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:37:27.393 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:37:27.394 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:37:27.394 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:37:37.389 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:37:37.389 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:37:37.389 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:37:47.393 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:37:47.393 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:37:47.393 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:37:57.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:37:57.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:37:57.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:38:07.392 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:38:07.392 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:38:07.393 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:38:17.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:38:17.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:38:17.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:38:27.386 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:38:27.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:38:27.387 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:38:37.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:38:37.392 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:38:37.392 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:38:47.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:38:47.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:38:47.384 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:38:57.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:38:57.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:38:57.382 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:39:07.392 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:39:07.393 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:39:07.393 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:39:17.397 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:39:17.397 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:39:17.397 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:39:27.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:39:27.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:39:27.383 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:39:37.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:39:37.391 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:39:37.393 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:39:45.959 [main] [INFO ] com.test.springboot.SpringbootApplication - Starting SpringbootApplication using Java 1.8.0_291 on gaofengkai with PID 32588 (D:\BackEnd\workspace\springboot\target\classes started by gaofengkai in D:\BackEnd\workspace\springboot)
2022-08-30 13:39:45.964 [main] [INFO ] com.test.springboot.SpringbootApplication - The following profiles are active: prod
2022-08-30 13:39:45.965 [main] [DEBUG] org.springframework.boot.SpringApplication - Loading source class com.test.springboot.SpringbootApplication
2022-08-30 13:39:46.000 [main] [DEBUG] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4dbb42b7
2022-08-30 13:39:46.959 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-08-30 13:39:46.960 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-08-30 13:39:46.967 [main] [DEBUG] o.s.boot.autoconfigure.AutoConfigurationPackages - @EnableAutoConfiguration was declared on a class in the package 'com.test.springboot'. Automatic @Repository and @Entity scanning is enabled.
2022-08-30 13:39:47.008 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 1 MongoDB repository interfaces.
2022-08-30 13:39:47.014 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-08-30 13:39:47.015 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-08-30 13:39:47.027 [main] [INFO ] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.test.springboot.mapper.mongodb.MongoUserDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-08-30 13:39:47.028 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2022-08-30 13:39:47.101 [main] [WARN ] org.mybatis.spring.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'mongoUserDao' and 'com.test.springboot.mapper.mongodb.MongoUserDao' mapperInterface. Bean already defined with the same name!
2022-08-30 13:39:47.639 [main] [DEBUG] o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: C:\Users\Administrator\.m2\repository\org\springframework\boot\spring-boot\2.5.7\spring-boot-2.5.7.jar
2022-08-30 13:39:47.640 [main] [DEBUG] o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: C:\Users\Administrator\.m2\repository\org\springframework\boot\spring-boot\2.5.7\spring-boot-2.5.7.jar
2022-08-30 13:39:47.640 [main] [DEBUG] o.s.b.w.e.tomcat.TomcatServletWebServerFactory - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2022-08-30 13:39:47.657 [main] [INFO ] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2022-08-30 13:39:47.668 [main] [INFO ] org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2022-08-30 13:39:47.669 [main] [INFO ] org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-08-30 13:39:47.670 [main] [INFO ] org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.55]
2022-08-30 13:39:47.761 [main] [INFO ] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-08-30 13:39:47.762 [main] [DEBUG] o.s.b.w.s.c.ServletWebServerApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2022-08-30 13:39:47.762 [main] [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1762 ms
2022-08-30 13:39:47.960 [main] [DEBUG] o.s.b.web.servlet.ServletContextInitializerBeans - Mapping filters: filterRegistrationBean urls=[/*] order=-2147483647, filterRegistrationBean urls=[/*] order=2147483647, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, httpTraceFilter urls=[/*] order=2147483637
2022-08-30 13:39:47.961 [main] [DEBUG] o.s.b.web.servlet.ServletContextInitializerBeans - Mapping servlets: dispatcherServlet urls=[/], statViewServlet urls=[/druid/*]
2022-08-30 13:39:47.974 [main] [DEBUG] o.s.b.a.metrics.web.servlet.WebMvcMetricsFilter - Filter 'webMvcMetricsFilter' configured for use
2022-08-30 13:39:47.974 [main] [DEBUG] o.s.b.w.s.filter.OrderedCharacterEncodingFilter - Filter 'characterEncodingFilter' configured for use
2022-08-30 13:39:47.974 [main] [DEBUG] o.s.boot.actuate.web.trace.servlet.HttpTraceFilter - Filter 'httpTraceFilter' configured for use
2022-08-30 13:39:48.481 [main] [INFO ] org.mongodb.driver.cluster - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2022-08-30 13:39:48.521 [cluster-rtt-ClusterId{value='630da2a4d347d675f03c697f', description='null'}-localhost:27017] [INFO ] org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:113}] to localhost:27017
2022-08-30 13:39:48.521 [cluster-ClusterId{value='630da2a4d347d675f03c697f', description='null'}-localhost:27017] [INFO ] org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:114}] to localhost:27017
2022-08-30 13:39:48.521 [cluster-ClusterId{value='630da2a4d347d675f03c697f', description='null'}-localhost:27017] [INFO ] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=13533500}
2022-08-30 13:39:48.633 [main] [DEBUG] o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2022-08-30 13:39:49.079 [main] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2022-08-30 13:39:49.228 [main] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 46 mappings in 'requestMappingHandlerMapping'
2022-08-30 13:39:49.551 [main] [INFO ] o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 16 endpoint(s) beneath base path '/monitor'
2022-08-30 13:39:49.626 [main] [INFO ] s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-08-30 13:39:49.726 [main] [DEBUG] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2022-08-30 13:39:50.276 [main] [INFO ] org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [110.40.220.207:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-test-consumer-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = test-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2022-08-30 13:39:50.319 [main] [INFO ] org.apache.kafka.common.utils.AppInfoParser - Kafka version: 2.7.2
2022-08-30 13:39:50.320 [main] [INFO ] org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: 37a1cc36bf4d76f3
2022-08-30 13:39:50.320 [main] [INFO ] org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1661837990318
2022-08-30 13:39:50.321 [main] [INFO ] org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Subscribed to topic(s): test
2022-08-30 13:39:50.326 [main] [INFO ] org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2022-08-30 13:39:50.332 [main] [INFO ] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2022-08-30 13:39:50.333 [main] [INFO ] s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2022-08-30 13:39:50.345 [main] [INFO ] s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 6 custom documentation plugin(s)
2022-08-30 13:39:50.377 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 13:39:50.501 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: testUsingGET_1
2022-08-30 13:39:50.503 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: test2UsingGET_1
2022-08-30 13:39:50.512 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 13:39:50.514 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: testAopUsingGET_1
2022-08-30 13:39:50.518 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 13:39:50.519 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getCityUsingPOST_1
2022-08-30 13:39:50.521 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getFirstStudentUsingPOST_1
2022-08-30 13:39:50.524 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 13:39:50.526 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonUsingPOST_1
2022-08-30 13:39:50.527 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingGET_1
2022-08-30 13:39:50.527 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingHEAD_1
2022-08-30 13:39:50.528 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingPOST_1
2022-08-30 13:39:50.528 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingPUT_1
2022-08-30 13:39:50.528 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingPATCH_1
2022-08-30 13:39:50.529 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingDELETE_1
2022-08-30 13:39:50.529 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingOPTIONS_1
2022-08-30 13:39:50.529 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingTRACE_1
2022-08-30 13:39:50.530 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingGET_1
2022-08-30 13:39:50.531 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingHEAD_1
2022-08-30 13:39:50.531 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingPOST_1
2022-08-30 13:39:50.531 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingPUT_1
2022-08-30 13:39:50.532 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingPATCH_1
2022-08-30 13:39:50.532 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingDELETE_1
2022-08-30 13:39:50.532 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingOPTIONS_1
2022-08-30 13:39:50.533 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingTRACE_1
2022-08-30 13:39:50.533 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingGET_1
2022-08-30 13:39:50.534 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingHEAD_1
2022-08-30 13:39:50.534 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingPOST_1
2022-08-30 13:39:50.534 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingPUT_1
2022-08-30 13:39:50.535 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingPATCH_1
2022-08-30 13:39:50.535 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingDELETE_1
2022-08-30 13:39:50.535 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingOPTIONS_1
2022-08-30 13:39:50.535 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingTRACE_1
2022-08-30 13:39:50.536 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: serializationUsingPOST_1
2022-08-30 13:39:50.538 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingGET_1
2022-08-30 13:39:50.538 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingHEAD_1
2022-08-30 13:39:50.538 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingPOST_1
2022-08-30 13:39:50.539 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingPUT_1
2022-08-30 13:39:50.539 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingPATCH_1
2022-08-30 13:39:50.540 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingDELETE_1
2022-08-30 13:39:50.540 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingOPTIONS_1
2022-08-30 13:39:50.540 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingTRACE_1
2022-08-30 13:39:50.543 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 13:39:50.546 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: addRedisUsingPOST_1
2022-08-30 13:39:50.547 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: deleteRedisUsingPOST_1
2022-08-30 13:39:50.547 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getRedisUsingPOST_1
2022-08-30 13:39:50.548 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateRedisUsingPOST_1
2022-08-30 13:39:50.551 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 13:39:50.552 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: addJdbcStudentUsingPOST_1
2022-08-30 13:39:50.553 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: queryStudentByIdUsingGET_1
2022-08-30 13:39:50.554 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: queryStudentById2UsingPOST_1
2022-08-30 13:39:50.554 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: queryStudentById3UsingPOST_1
2022-08-30 13:39:50.568 [main] [DEBUG] o.s.b.a.l.ConditionEvaluationReportLoggingListener - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   AuditEventsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.auditevents.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   AutoConfiguration matched:
      - @ConditionalOnProperty (helloworld=true) matched (OnPropertyCondition)

   BeansEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.beans.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration#beansEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.beans.BeansEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CacheMeterBinderProvidersConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.MeterBinder' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.RedisCacheMeterBinderProviderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.cache.RedisCache' (OnClassCondition)

   CacheMetricsAutoConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.cache.CacheManager; SearchStrategy: all) found bean 'cacheManager' (OnBeanCondition)

   CacheMetricsRegistrarConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'simpleMeterRegistry', 'redisCacheMeterBinderProvider' (OnBeanCondition)

   CachesEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint no property management.endpoint.caches.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   CachesEndpointAutoConfiguration#cachesEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CachesEndpointAutoConfiguration#cachesEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) found bean 'cachesEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CompositeMeterRegistryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.composite.CompositeMeterRegistry' (OnClassCondition)

   ConditionsReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.conditions.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ConditionsReportEndpointAutoConfiguration#conditionsReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.configprops.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) found bean 'configurationPropertiesReportEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration#dbHealthContributor matched:
      - @ConditionalOnMissingBean (names: dbHealthIndicator,dbHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'dynamicDataSource', 'simpleMeterRegistry', 'first', 'second' (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration.HikariDataSourceMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DiskSpaceHealthContributorAutoConfiguration matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   DiskSpaceHealthContributorAutoConfiguration#diskSpaceHealthIndicator matched:
      - @ConditionalOnMissingBean (names: diskSpaceHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   DruidDataSourceAutoConfigure matched:
      - @ConditionalOnClass found required class 'com.alibaba.druid.pool.DruidDataSource' (OnClassCondition)

   DruidStatViewServletConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.datasource.druid.stat-view-servlet.enabled=true) matched (OnPropertyCondition)

   DruidWebStatFilterConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.datasource.druid.web-stat-filter.enabled=true) matched (OnPropertyCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   EndpointAutoConfiguration#endpointCachingOperationInvokerAdvisor matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EndpointAutoConfiguration#endpointOperationParameterMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.env.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) found bean 'environmentEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HealthContributorAutoConfiguration#pingHealthContributor matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   HealthEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint found property management.endpoint.health.enabled with value true; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   HealthEndpointConfiguration#healthContributorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpointGroups matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointGroups; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthHttpCodeStatusMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HttpCodeStatusMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthStatusAggregator matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.StatusAggregator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration#healthEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HeapDumpWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.heapdump.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   HeapDumpWebEndpointAutoConfiguration#heapDumpWebEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.HeapDumpWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpClientMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (management.trace.http.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.trace.http.HttpTraceRepository; SearchStrategy: all) found bean 'buildHttpTraceRepository' (OnBeanCondition)

   HttpTraceAutoConfiguration#httpExchangeTracer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.trace.http.HttpExchangeTracer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceAutoConfiguration.ServletTraceFilterConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   HttpTraceAutoConfiguration.ServletTraceFilterConfiguration#httpTraceFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.httptrace.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   HttpTraceEndpointAutoConfiguration#httpTraceEndpoint matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.trace.http.HttpTraceRepository; SearchStrategy: all) found bean 'buildHttpTraceRepository'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.trace.http.HttpTraceEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   InfoContributorAutoConfiguration#envInfoContributor matched:
      - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.info.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   InfoEndpointAutoConfiguration#infoEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.info.InfoEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxEndpointAutoConfiguration#endpointObjectNameFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.EndpointObjectNameFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxAnnotationEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.JmxEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxMBeanExporter matched:
      - @ConditionalOnSingleCandidate (types: javax.management.MBeanServer; SearchStrategy: all) found a primary bean from beans 'mbeanServer' (OnBeanCondition)

   JvmMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   JvmMetricsAutoConfiguration#classLoaderMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmGcMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmGcMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmMemoryMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmThreadMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAnnotationDrivenConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.kafka.annotation.EnableKafka' (OnClassCondition)

   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactoryConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   KafkaAutoConfiguration#kafkaAdmin matched:
      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.KafkaAdmin; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAutoConfiguration#kafkaProducerListener matched:
      - @ConditionalOnMissingBean (types: org.springframework.kafka.support.ProducerListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.kafka.KafkaClientMetrics', 'org.springframework.kafka.core.ProducerFactory' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   KafkaMetricsAutoConfiguration.KafkaStreamsMetricsConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.kafka.KafkaStreamsMetrics', 'org.springframework.kafka.config.StreamsBuilderFactoryBean' (OnClassCondition)

   LettuceConnectionConfiguration matched:
      - @ConditionalOnClass found required class 'io.lettuce.core.RedisClient' (OnClassCondition)
      - @ConditionalOnProperty (spring.redis.client-type=lettuce) matched (OnPropertyCondition)

   LettuceConnectionConfiguration#lettuceClientResources matched:
      - @ConditionalOnMissingBean (types: io.lettuce.core.resource.ClientResources; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration#redisConnectionFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LogFileWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.logfile.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   LogFileWebEndpointAutoConfiguration#logFileWebEndpoint matched:
      - Log File found logging.file.path var/log (LogFileWebEndpointAutoConfiguration.LogFileCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LogFileWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LogbackMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'ch.qos.logback.classic.LoggerContext', 'org.slf4j.LoggerFactory' (OnClassCondition)
      - LogbackLoggingCondition ILoggerFactory is a Logback LoggerContext (LogbackMetricsAutoConfiguration.LogbackLoggingCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   LogbackMetricsAutoConfiguration#logbackMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.logging.LogbackMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoggersEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.loggers.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   LoggersEndpointAutoConfiguration#loggersEndpoint matched:
      - Logging System enabled (LoggersEndpointAutoConfiguration.OnEnabledLoggingSystemCondition)
      - @ConditionalOnBean (types: org.springframework.boot.logging.LoggingSystem; SearchStrategy: all) found bean 'springBootLoggingSystem'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LoggersEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ManagementContextAutoConfiguration.SameManagementContextConfiguration matched:
      - Management Port actual port type (SAME) matched required type (OnManagementPortCondition)

   MappingsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.mappings.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration.SpringMvcConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   MetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)

   MetricsAutoConfiguration#micrometerClock matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MetricsEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint no property management.endpoint.metrics.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   MetricsEndpointAutoConfiguration#metricsEndpoint matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.MetricsEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.mongodb.client.MongoClient' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration#mongo matched:
      - @ConditionalOnMissingBean (types: com.mongodb.client.MongoClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration.MongoClientSettingsConfiguration matched:
      - @ConditionalOnMissingBean (types: com.mongodb.MongoClientSettings; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDataAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'com.mongodb.client.MongoClient', 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)

   MongoDataConfiguration#mongoCustomConversions matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.convert.MongoCustomConversions; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDataConfiguration#mongoMappingContext matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.mapping.MongoMappingContext; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryConfiguration matched:
      - @ConditionalOnSingleCandidate (types: com.mongodb.client.MongoClient; SearchStrategy: all) found a primary bean from beans 'mongo'; @ConditionalOnMissingBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) found bean 'mongoDatabaseFactory' (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#gridFsTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.gridfs.GridFsOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#mappingMongoConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.convert.MongoConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#mongoTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.MongoOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: org.springframework.data.mongodb.core.MongoTemplate; SearchStrategy: all) found bean 'mongoTemplate' (OnBeanCondition)

   MongoHealthContributorAutoConfiguration#mongoHealthContributor matched:
      - @ConditionalOnMissingBean (names: mongoHealthIndicator,mongoHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.mongodb.MongoClientSettings' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoCommandMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener' (OnClassCondition)
      - @ConditionalOnProperty (management.metrics.mongo.command.enabled=true) matched (OnPropertyCondition)

   MongoMetricsAutoConfiguration.MongoCommandMetricsConfiguration#mongoCommandTagsProvider matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoCommandTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoCommandMetricsConfiguration#mongoMetricsCommandListener matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoConnectionPoolMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener' (OnClassCondition)
      - @ConditionalOnProperty (management.metrics.mongo.connectionpool.enabled=true) matched (OnPropertyCondition)

   MongoMetricsAutoConfiguration.MongoConnectionPoolMetricsConfiguration#mongoConnectionPoolTagsProvider matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoConnectionPoolTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoConnectionPoolMetricsConfiguration#mongoMetricsConnectionPoolListener matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'com.mongodb.client.MongoClient', 'org.springframework.data.mongodb.repository.MongoRepository' (OnClassCondition)
      - @ConditionalOnRepositoryType configured type of 'AUTO' matched required type (OnRepositoryTypeCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean,org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisLanguageDriverAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.apache.ibatis.scripting.LanguageDriver' (OnClassCondition)

   NettyAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ReactiveHealthEndpointConfiguration matched:
      - @ConditionalOnClass found required class 'reactor.core.publisher.Flux' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)

   ReactiveHealthEndpointConfiguration#reactiveHealthContributorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisAutoConfiguration#stringRedisTemplate matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a primary bean from beans 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.core.StringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisCacheConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)
      - Cache org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration automatic cache type (CacheCondition)

   RedisHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory' (OnBeanCondition)

   RedisReactiveAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'org.springframework.data.redis.core.ReactiveRedisTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisReactiveAutoConfiguration#reactiveRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveAutoConfiguration#reactiveStringRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveStringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'reactor.core.publisher.Flux' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory' (OnBeanCondition)

   RedisReactiveHealthContributorAutoConfiguration#redisHealthContributor matched:
      - @ConditionalOnMissingBean (names: redisHealthIndicator,redisHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.redis.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.repository.Repository' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#metricsRepositoryMethodInvocationListener matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#repositoryTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)

   RestTemplateMetricsConfiguration#restTemplateExchangeTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.web.client.RestTemplateExchangeTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ScheduledTasksEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.scheduledtasks.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ScheduledTasksEndpointAutoConfiguration#scheduledTasksEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletEndpointManagementContextConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   ServletEndpointManagementContextConfiguration.WebMvcServletEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)

   ServletManagementContextAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.Servlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ShutdownEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint found property management.endpoint.shutdown.enabled with value true; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ShutdownEndpointAutoConfiguration#shutdownEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.ShutdownEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SimpleMetricsExportAutoConfiguration matched:
      - @ConditionalOnEnabledMetricsExport management.metrics.export.defaults.enabled is considered true (OnMetricsExportEnabledCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) found bean 'micrometerClock'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleMetricsExportAutoConfiguration#simpleConfig matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.simple.SimpleConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - matched (SpringBootAdminClientEnabledCondition)

   SpringBootAdminClientAutoConfiguration#registrationListener matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.RegistrationApplicationListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration#registrator matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.ApplicationRegistrator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration#startupDateMetadataContributor matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.metadata.StartupDateMetadataContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration.BlockingRegistrationClientConfig matched:
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration.BlockingRegistrationClientConfig#registrationClient matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.BlockingRegistrationClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration.ServletConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringBootAdminClientAutoConfiguration.ServletConfiguration#applicationFactory matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.ApplicationFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   Swagger2DocumentationConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   SystemMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   SystemMetricsAutoConfiguration#fileDescriptorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.FileDescriptorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#processorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.ProcessorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#uptimeMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.UptimeMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThreadDumpEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.threaddump.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)

   ThreadDumpEndpointAutoConfiguration#dumpEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.ThreadDumpEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.thymeleaf.templatemode.TemplateMode', 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   ThymeleafAutoConfiguration.DefaultTemplateResolverConfiguration matched:
      - @ConditionalOnMissingBean (names: defaultTemplateResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafDefaultConfiguration#templateEngine matched:
      - @ConditionalOnMissingBean (types: org.thymeleaf.spring5.ISpringTemplateEngine; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafJava8TimeDialect matched:
      - @ConditionalOnClass found required class 'org.thymeleaf.extras.java8time.dialect.Java8TimeDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafJava8TimeDialect#java8TimeDialect matched:
      - @ConditionalOnMissingBean (types: org.thymeleaf.extras.java8time.dialect.Java8TimeDialect; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.thymeleaf.enabled) matched (OnPropertyCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration.ThymeleafViewResolverConfiguration#thymeleafViewResolver matched:
      - @ConditionalOnMissingBean (names: thymeleafViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TomcatMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.tomcat.TomcatMetrics', 'org.apache.catalina.Manager' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   TomcatMetricsAutoConfiguration#tomcatMetricsBinder matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.tomcat.TomcatMetrics,org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'firstTransactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a primary bean from beans 'firstTransactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration#controllerEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#endpointMediaTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#pathMappedEndpoints matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#webEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration#servletEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) found beans 'webEndpointDiscoverer', 'dispatcherServlet' (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#controllerEndpointHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#webEndpointServletHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   WebMvcMetricsAutoConfiguration#webMvcTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AppOpticsMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.appoptics.AppOpticsMeterRegistry' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AtlasMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.atlas.AtlasMeterRegistry' (OnClassCondition)

   AuditAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnProperty (management.auditevents.enabled) matched (OnPropertyCondition)

   AuditEventsEndpointAutoConfiguration#auditEventsEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)

   AvailabilityHealthContributorAutoConfiguration#livenessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.livenessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityHealthContributorAutoConfiguration#readinessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.readinessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityProbesAutoConfiguration:
      Did not match:
         - Probes availability not running on a supported cloud platform (AvailabilityProbesAutoConfiguration.ProbesCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: cacheResolver types: org.springframework.cache.CacheManager; SearchStrategy: all) found beans of type 'org.springframework.cache.CacheManager' cacheManager (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CacheMeterBinderProvidersConfiguration.CaffeineCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Cache' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.EhCache2CacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Ehcache' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.HazelcastCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'com.hazelcast.spring.cache.HazelcastCache', 'com.hazelcast.core.Hazelcast' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.JCacheCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.CacheManager' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (management.cloudfoundry.enabled) matched (OnPropertyCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CompositeMeterRegistryConfiguration:
      Did not match:
         - NoneNestedConditions 1 matched 1 did not; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.SingleInjectableMeterRegistry @ConditionalOnSingleCandidate (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found a primary bean from beans 'simpleMeterRegistry'; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.NoMeterRegistryCondition @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition)

   ConnectionFactoryHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   ConnectionPoolMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.pool.ConnectionPool' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceInitializationConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) did not find a primary bean from beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)

   DataSourcePoolMetricsAutoConfiguration.DataSourcePoolMetadataMetricsConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider (OnBeanCondition)

   DatadogMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.datadog.DatadogMeterRegistry' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   DruidDataSourceAutoConfigure#dataSource:
      Did not match:
         - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) found beans of type 'javax.sql.DataSource' first, second, dynamicDataSource (OnBeanCondition)

   DruidFilterConfiguration#commonsLogFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.commons-log.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#configFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.config.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#encodingConvertFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.encoding.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#log4j2Filter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.log4j2.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#log4jFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.log4j.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#slf4jLogFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.slf4j.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#statFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.stat.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#wallConfig:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.wall.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#wallFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.wall.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidSpringAopConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.aop-patterns) did not find property 'spring.datasource.druid.aop-patterns' (OnPropertyCondition)

   DynatraceMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.dynatrace.DynatraceMeterRegistry' (OnClassCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.elastic.ElasticMeterRegistry' (OnClassCondition)

   ElasticSearchReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ElasticSearchRestHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestHighLevelClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestHighLevelClient' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'de.flapdoodle.embed.mongo.MongodStarter' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FlywayEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GangliaMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.ganglia.GangliaMeterRegistry' (OnClassCondition)

   GraphiteMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.graphite.GraphiteMeterRegistry' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.WebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HealthEndpointReactiveWebExtensionConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManager' (OnClassCondition)

   HibernateMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManagerFactory' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HttpTraceAutoConfiguration.ReactiveTraceFilterConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   HumioMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.humio.HumioMeterRegistry' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxDbHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.influx.InfluxMeterRegistry' (OnClassCondition)

   InfoContributorAutoConfiguration#buildInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.BuildProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#gitInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.GitProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   IntegrationGraphEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.graph.IntegrationGraphServer' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JdbcTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) did not find a primary bean from beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)

   JedisConnectionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.apache.commons.pool2.impl.GenericObjectPool', 'redis.clients.jedis.Jedis' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JerseySameManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JerseyServerMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.jersey2.server.MetricsApplicationEventListener' (OnClassCondition)

   JerseyWebEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JettyMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.server.Server' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmsHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   JmxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.jmx.JmxMeterRegistry' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JolokiaEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jolokia.http.AgentServlet' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.Transaction' (OnClassCondition)

   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactory:
      Did not match:
         - @ConditionalOnMissingBean (names: kafkaListenerContainerFactory; SearchStrategy: all) found beans named kafkaListenerContainerFactory (OnBeanCondition)

   KafkaAnnotationDrivenConfiguration.EnableKafkaConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: org.springframework.kafka.config.internalKafkaListenerAnnotationProcessor; SearchStrategy: all) found beans named org.springframework.kafka.config.internalKafkaListenerAnnotationProcessor (OnBeanCondition)

   KafkaAutoConfiguration#kafkaConsumerFactory:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.kafka.core.ConsumerFactory; SearchStrategy: all) found beans of type 'org.springframework.kafka.core.ConsumerFactory' consumerFactory (OnBeanCondition)

   KafkaAutoConfiguration#kafkaJaasInitializer:
      Did not match:
         - @ConditionalOnProperty (spring.kafka.jaas.enabled) did not find property 'spring.kafka.jaas.enabled' (OnPropertyCondition)

   KafkaAutoConfiguration#kafkaProducerFactory:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.kafka.core.ProducerFactory; SearchStrategy: all) found beans of type 'org.springframework.kafka.core.ProducerFactory' producerFactory (OnBeanCondition)

   KafkaAutoConfiguration#kafkaTemplate:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.kafka.core.KafkaTemplate; SearchStrategy: all) found beans of type 'org.springframework.kafka.core.KafkaTemplate' kafkaTemplate (OnBeanCondition)

   KafkaAutoConfiguration#kafkaTransactionManager:
      Did not match:
         - @ConditionalOnProperty (spring.kafka.producer.transaction-id-prefix) did not find property 'spring.kafka.producer.transaction-id-prefix' (OnPropertyCondition)

   KafkaStreamsAnnotationDrivenConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.kafka.streams.StreamsBuilder' (OnClassCondition)

   KairosMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.kairos.KairosMeterRegistry' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.LdapOperations' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   LiquibaseEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.integration.spring.SpringLiquibase' (OnClassCondition)

   Log4J2MetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.logging.log4j.core.LoggerContext' (OnClassCondition)

   MailHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.mail.javamail.JavaMailSenderImpl; SearchStrategy: all) did not find any beans of type org.springframework.mail.javamail.JavaMailSenderImpl (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnClassCondition)
         - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.JndiNameProperty @ConditionalOnProperty (spring.mail.jndi-name) did not find property 'jndi-name'; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.HostProperty @ConditionalOnProperty (spring.mail.host) did not find property 'host' (MailSenderAutoConfiguration.MailSenderCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.mail.internet.MimeMessage', 'javax.activation.MimeType', 'org.springframework.mail.MailSender' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   ManagementContextAutoConfiguration.DifferentManagementContextConfiguration:
      Did not match:
         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)

   ManagementWebSecurityAutoConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter,org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) did not find any beans; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass did not find required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ReactiveWebConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.data.mongodb.core.ReactiveMongoTemplate; SearchStrategy: all) did not find any beans of type org.springframework.data.mongodb.core.ReactiveMongoTemplate (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'org.springframework.data.mongodb.core.ReactiveMongoTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)
         - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   MybatisAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) did not find a primary bean from beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.FreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver', 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriverConfig' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.LegacyFreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.LegacyVelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.velocity.Driver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.ThymeleafConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.thymeleaf.ThymeleafLanguageDriver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.VelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.velocity.VelocityLanguageDriver', 'org.mybatis.scripting.velocity.VelocityLanguageDriverConfig' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NewRelicMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.newrelic.NewRelicMeterRegistry' (OnClassCondition)

   NoOpMeterRegistryConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (OnBeanCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PrometheusMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.prometheus.PrometheusMeterRegistry' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   QuartzEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   RabbitHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.amqp.rabbit.core.RabbitTemplate' (OnClassCondition)

   RabbitMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.ConnectionFactory' (OnClassCondition)

   ReactiveCloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveManagementContextAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveManagementWebSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration#redisTemplate:
      Did not match:
         - @ConditionalOnMissingBean (names: redisTemplate; SearchStrategy: all) found beans named redisTemplate (OnBeanCondition)

   RedisHealthContributorAutoConfiguration#redisHealthContributor:
      Did not match:
         - @ConditionalOnMissingBean (names: redisHealthIndicator,redisHealthContributor; SearchStrategy: all) found beans named redisHealthContributor (OnBeanCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SecurityRequestMatchersManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.web.util.matcher.RequestMatcher' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletEndpointManagementContextConfiguration.JerseyServletEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   ServletManagementContextAutoConfiguration.ApplicationContextFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (management.server.add-application-context-header=true) did not find property 'add-application-context-header' (OnPropertyCondition)

   ServletWebServerFactoryAutoConfiguration#forwardedHeaderFilter:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SessionsEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.FindByIndexNameSessionRepository' (OnClassCondition)

   SignalFxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.signalfx.SignalFxMeterRegistry' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SolrHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.SolrClient' (OnClassCondition)

   SpringBootAdminClientAutoConfiguration.ReactiveConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   SpringBootAdminClientAutoConfiguration.ReactiveRegistrationClientConfig:
      Did not match:
         - @ConditionalOnBean did not find required type 'org.springframework.web.reactive.function.client.WebClient$Builder' (OnBeanCondition)
         - @ConditionalOnBean (types: org.springframework.web.reactive.function.client.WebClient$Builder; SearchStrategy: all) did not find any beans of type org.springframework.web.reactive.function.client.WebClient$Builder (OnBeanCondition)

   SpringBootAdminClientCloudFoundryAutoConfiguration:
      Did not match:
         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)
      Matched:
         - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
         - matched (SpringBootAdminClientEnabledCondition)

   StackdriverMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.stackdriver.StackdriverMeterRegistry' (OnClassCondition)

   StartupEndpointAutoConfiguration:
      Did not match:
         - ApplicationStartup configured applicationStartup is of type class org.springframework.core.metrics.DefaultApplicationStartup, expected BufferingApplicationStartup. (StartupEndpointAutoConfiguration.ApplicationStartupCondition)

   StatsdMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.statsd.StatsdMeterRegistry' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor:
      Did not match:
         - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) found beans of type 'java.util.concurrent.Executor' asyncThreadPoolTaskExecutor (OnBeanCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration.DataAttributeDialectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.mxab.thymeleaf.extras.dataattribute.dialect.DataAttributeDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafReactiveConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ThymeleafAutoConfiguration.ThymeleafSecurityDialectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.extras.springsecurity5.dialect.SpringSecurityDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebFluxConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ThymeleafAutoConfiguration.ThymeleafWebLayoutConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'nz.net.ultraq.thymeleaf.LayoutDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration#resourceUrlEncodingFilter:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)

   WavefrontMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebClientMetricsConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebFluxEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   WebFluxMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport' org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)
         - Ancestor org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.client.core.WebServiceTemplate' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

    org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration



2022-08-30 13:39:50.572 [main] [DEBUG] o.s.b.c.p.s.ConfigurationPropertySourcesPropertyResolver$DefaultResolver - Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
2022-08-30 13:39:50.573 [main] [INFO ] com.test.springboot.SpringbootApplication - Started SpringbootApplication in 5.041 seconds (JVM running for 5.838)
2022-08-30 13:39:50.577 [main] [DEBUG] o.s.boot.availability.ApplicationAvailabilityBean - Application availability state LivenessState changed to CORRECT
2022-08-30 13:39:50.580 [main] [DEBUG] o.s.boot.availability.ApplicationAvailabilityBean - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2022-08-30 13:39:50.583 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Cluster ID: N_qWYp0DR-CyFe0Vu-kqrw
2022-08-30 13:39:50.584 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 13:39:50.585 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 13:39:50.592 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:39:50.595 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:39:50.601 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:39:50.670 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 13:39:51.359 [RMI TCP Connection(3)-192.168.9.100] [INFO ] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-08-30 13:39:51.359 [RMI TCP Connection(3)-192.168.9.100] [INFO ] org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-08-30 13:39:51.359 [RMI TCP Connection(3)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2022-08-30 13:39:51.359 [RMI TCP Connection(3)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2022-08-30 13:39:51.359 [RMI TCP Connection(3)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2022-08-30 13:39:51.360 [RMI TCP Connection(3)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@193e21
2022-08-30 13:39:51.361 [RMI TCP Connection(3)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@222fc672
2022-08-30 13:39:51.361 [RMI TCP Connection(3)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2022-08-30 13:39:51.361 [RMI TCP Connection(3)-192.168.9.100] [INFO ] org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2022-08-30 13:39:51.369 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully joined group with generation Generation{generationId=113, memberId='consumer-test-consumer-1-e4c49cef-6d5b-4808-a668-965390ae92cd', protocol='range'}
2022-08-30 13:39:51.371 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Finished assignment for group at generation 113: {consumer-test-consumer-1-e4c49cef-6d5b-4808-a668-965390ae92cd=Assignment(partitions=[test-0])}
2022-08-30 13:39:51.377 [RMI TCP Connection(2)-192.168.9.100] [INFO ] com.alibaba.druid.pool.DruidDataSource - {dataSource-1,mybatis} inited
2022-08-30 13:39:51.406 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully synced group in generation Generation{generationId=113, memberId='consumer-test-consumer-1-e4c49cef-6d5b-4808-a668-965390ae92cd', protocol='range'}
2022-08-30 13:39:51.406 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Notifying assignor about the new Assignment(partitions=[test-0])
2022-08-30 13:39:51.409 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Adding newly assigned partitions: test-0
2022-08-30 13:39:51.472 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Setting offset for partition test-0 to the committed offset FetchPosition{offset=73, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[110.40.220.207:9092 (id: 1 rack: null)], epoch=0}}
2022-08-30 13:39:51.472 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions assigned: [test-0]
2022-08-30 13:39:51.795 [RMI TCP Connection(2)-192.168.9.100] [INFO ] com.alibaba.druid.pool.DruidDataSource - {dataSource-2,springbootdb} inited
2022-08-30 13:39:52.126 [RMI TCP Connection(2)-192.168.9.100] [INFO ] org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:115}] to localhost:27017
2022-08-30 13:39:52.658 [registrationTask1] [WARN ] d.c.b.a.client.registration.ApplicationRegistrator - Failed to register application as Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/) at spring-boot-admin ([http://localhost:9002/instances]): I/O error on POST request for "http://localhost:9002/instances": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect. Further attempts are logged on DEBUG level
2022-08-30 13:40:00.588 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:40:00.588 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:40:00.588 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:40:10.587 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:40:10.588 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:40:10.588 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:40:20.586 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:40:20.587 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:40:20.587 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:40:30.582 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:40:30.583 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:40:30.583 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:40:40.597 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:40:40.597 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:40:40.598 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:40:50.584 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:40:50.584 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:40:50.585 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:41:00.596 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:41:00.597 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:41:00.597 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:41:10.590 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:41:10.590 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:41:10.591 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:41:20.592 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:41:20.592 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:41:20.593 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:41:30.581 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:41:30.581 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:41:30.581 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:41:40.587 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:41:40.587 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:41:40.587 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:41:50.587 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:41:50.588 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:41:50.588 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:42:00.586 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:42:00.586 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:42:00.586 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:42:10.592 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:42:10.593 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:42:10.593 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:42:19.034 [http-nio-8081-exec-2] [DEBUG] org.springframework.web.servlet.DispatcherServlet - GET "/condition?size=3&page=5", parameters={masked}
2022-08-30 13:42:19.039 [http-nio-8081-exec-2] [WARN ] org.springframework.web.servlet.PageNotFound - No mapping for GET /condition
2022-08-30 13:42:19.039 [http-nio-8081-exec-2] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2022-08-30 13:42:19.048 [http-nio-8081-exec-2] [DEBUG] org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error?size=3&page=5", parameters={masked}
2022-08-30 13:42:19.051 [http-nio-8081-exec-2] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2022-08-30 13:42:19.060 [http-nio-8081-exec-2] [DEBUG] o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 13:42:19.060 [http-nio-8081-exec-2] [DEBUG] o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{timestamp=Tue Aug 30 13:42:19 CST 2022, status=404, error=Not Found, path=/condition}]
2022-08-30 13:42:19.066 [http-nio-8081-exec-2] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2022-08-30 13:42:20.582 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:42:20.582 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:42:20.582 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:42:30.592 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:42:30.593 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:42:30.593 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:42:38.903 [http-nio-8081-exec-3] [DEBUG] org.springframework.web.servlet.DispatcherServlet - GET "/mongouser/condition?size=3&page=5", parameters={masked}
2022-08-30 13:42:38.904 [http-nio-8081-exec-3] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserByCondition(int, int, MongoUser)
2022-08-30 13:42:38.946 [http-nio-8081-exec-3] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 13:42:38.946 [http-nio-8081-exec-3] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 6 of 0 containing UNKNOWN instances]
2022-08-30 13:42:38.951 [http-nio-8081-exec-3] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 13:42:40.590 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:42:40.591 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:42:40.591 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:42:50.597 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:42:50.597 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:42:50.598 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:43:00.588 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:43:00.588 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:43:00.588 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:43:10.589 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:43:10.589 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:43:10.589 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:43:20.593 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:43:20.593 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:43:20.593 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:43:30.593 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:43:30.593 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:43:30.593 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:43:40.586 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:43:40.586 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:43:40.587 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:43:50.587 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:43:50.587 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:43:50.587 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:43:57.460 [http-nio-8081-exec-6] [DEBUG] org.springframework.web.servlet.DispatcherServlet - GET "/mongouser/condition?size=3&page=5&age=40", parameters={masked}
2022-08-30 13:43:57.461 [http-nio-8081-exec-6] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserByCondition(int, int, MongoUser)
2022-08-30 13:43:57.464 [http-nio-8081-exec-6] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 13:43:57.464 [http-nio-8081-exec-6] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 6 of 0 containing UNKNOWN instances]
2022-08-30 13:43:57.465 [http-nio-8081-exec-6] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 13:44:00.588 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:44:00.588 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:44:00.588 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:44:10.583 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:44:10.583 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:44:10.583 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:44:20.593 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:44:20.593 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:44:20.594 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:44:30.591 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:44:30.591 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:44:30.592 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:44:40.582 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:44:40.583 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:44:40.583 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:44:50.592 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:44:50.594 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:44:50.594 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:45:00.593 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:45:00.593 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:45:00.593 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:45:10.594 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:45:10.594 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:45:10.595 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:45:15.575 [http-nio-8081-exec-9] [DEBUG] org.springframework.web.servlet.DispatcherServlet - GET "/mongouser/condition?size=3&page=5", parameters={masked}
2022-08-30 13:45:15.576 [http-nio-8081-exec-9] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserByCondition(int, int, MongoUser)
2022-08-30 13:45:15.579 [http-nio-8081-exec-9] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 13:45:15.580 [http-nio-8081-exec-9] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 6 of 0 containing UNKNOWN instances]
2022-08-30 13:45:15.581 [http-nio-8081-exec-9] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 13:45:20.587 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:45:20.587 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:45:20.587 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:45:23.298 [http-nio-8081-exec-10] [DEBUG] org.springframework.web.servlet.DispatcherServlet - GET "/mongouser/condition?size=3&page=5", parameters={masked}
2022-08-30 13:45:23.299 [http-nio-8081-exec-10] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserByCondition(int, int, MongoUser)
2022-08-30 13:45:23.301 [http-nio-8081-exec-10] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 13:45:23.302 [http-nio-8081-exec-10] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 6 of 0 containing UNKNOWN instances]
2022-08-30 13:45:23.302 [http-nio-8081-exec-10] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 13:45:24.188 [http-nio-8081-exec-1] [DEBUG] org.springframework.web.servlet.DispatcherServlet - GET "/mongouser/condition?size=3&page=5", parameters={masked}
2022-08-30 13:45:24.189 [http-nio-8081-exec-1] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserByCondition(int, int, MongoUser)
2022-08-30 13:45:24.191 [http-nio-8081-exec-1] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 13:45:24.191 [http-nio-8081-exec-1] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 6 of 0 containing UNKNOWN instances]
2022-08-30 13:45:24.192 [http-nio-8081-exec-1] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 13:45:30.589 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:45:30.589 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:45:30.589 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:45:40.583 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:45:40.583 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:45:40.583 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:45:50.593 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:45:50.593 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:45:50.594 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:46:00.592 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:46:00.593 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:46:00.593 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:46:03.360 [http-nio-8081-exec-2] [DEBUG] org.springframework.web.servlet.DispatcherServlet - GET "/mongouser/condition?size=3&page=5", parameters={multipart}
2022-08-30 13:46:03.378 [http-nio-8081-exec-2] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserByCondition(int, int, MongoUser)
2022-08-30 13:46:03.386 [http-nio-8081-exec-2] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 13:46:03.387 [http-nio-8081-exec-2] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 6 of 0 containing UNKNOWN instances]
2022-08-30 13:46:03.387 [http-nio-8081-exec-2] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 13:46:10.589 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:46:10.589 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:46:10.590 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:46:20.588 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:46:20.589 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:46:20.589 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:46:30.586 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:46:30.586 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:46:30.586 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:46:40.597 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:46:40.598 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:46:40.598 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:46:50.593 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:46:50.593 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:46:50.593 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:47:01.223 [main] [INFO ] com.test.springboot.SpringbootApplication - Starting SpringbootApplication using Java 1.8.0_291 on gaofengkai with PID 15704 (D:\BackEnd\workspace\springboot\target\classes started by gaofengkai in D:\BackEnd\workspace\springboot)
2022-08-30 13:47:01.225 [main] [INFO ] com.test.springboot.SpringbootApplication - The following profiles are active: prod
2022-08-30 13:47:01.225 [main] [DEBUG] org.springframework.boot.SpringApplication - Loading source class com.test.springboot.SpringbootApplication
2022-08-30 13:47:01.254 [main] [DEBUG] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66f57048
2022-08-30 13:47:02.052 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-08-30 13:47:02.053 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2022-08-30 13:47:02.060 [main] [DEBUG] o.s.boot.autoconfigure.AutoConfigurationPackages - @EnableAutoConfiguration was declared on a class in the package 'com.test.springboot'. Automatic @Repository and @Entity scanning is enabled.
2022-08-30 13:47:02.102 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 1 MongoDB repository interfaces.
2022-08-30 13:47:02.108 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2022-08-30 13:47:02.109 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-08-30 13:47:02.121 [main] [INFO ] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.test.springboot.mapper.mongodb.MongoUserDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-08-30 13:47:02.121 [main] [INFO ] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2022-08-30 13:47:02.196 [main] [WARN ] org.mybatis.spring.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'mongoUserDao' and 'com.test.springboot.mapper.mongodb.MongoUserDao' mapperInterface. Bean already defined with the same name!
2022-08-30 13:47:02.668 [main] [DEBUG] o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: C:\Users\Administrator\.m2\repository\org\springframework\boot\spring-boot\2.5.7\spring-boot-2.5.7.jar
2022-08-30 13:47:02.669 [main] [DEBUG] o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: C:\Users\Administrator\.m2\repository\org\springframework\boot\spring-boot\2.5.7\spring-boot-2.5.7.jar
2022-08-30 13:47:02.669 [main] [DEBUG] o.s.b.w.e.tomcat.TomcatServletWebServerFactory - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2022-08-30 13:47:02.683 [main] [INFO ] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8081 (http)
2022-08-30 13:47:02.688 [main] [INFO ] org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8081"]
2022-08-30 13:47:02.688 [main] [INFO ] org.apache.catalina.core.StandardService - Starting service [Tomcat]
2022-08-30 13:47:02.689 [main] [INFO ] org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.55]
2022-08-30 13:47:02.757 [main] [INFO ] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2022-08-30 13:47:02.757 [main] [DEBUG] o.s.b.w.s.c.ServletWebServerApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2022-08-30 13:47:02.757 [main] [INFO ] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1503 ms
2022-08-30 13:47:02.902 [main] [DEBUG] o.s.b.web.servlet.ServletContextInitializerBeans - Mapping filters: filterRegistrationBean urls=[/*] order=-2147483647, filterRegistrationBean urls=[/*] order=2147483647, filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, httpTraceFilter urls=[/*] order=2147483637
2022-08-30 13:47:02.902 [main] [DEBUG] o.s.b.web.servlet.ServletContextInitializerBeans - Mapping servlets: dispatcherServlet urls=[/], statViewServlet urls=[/druid/*]
2022-08-30 13:47:02.915 [main] [DEBUG] o.s.b.a.metrics.web.servlet.WebMvcMetricsFilter - Filter 'webMvcMetricsFilter' configured for use
2022-08-30 13:47:02.916 [main] [DEBUG] o.s.b.w.s.filter.OrderedCharacterEncodingFilter - Filter 'characterEncodingFilter' configured for use
2022-08-30 13:47:02.916 [main] [DEBUG] o.s.boot.actuate.web.trace.servlet.HttpTraceFilter - Filter 'httpTraceFilter' configured for use
2022-08-30 13:47:03.384 [main] [INFO ] org.mongodb.driver.cluster - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2022-08-30 13:47:03.416 [cluster-ClusterId{value='630da457118e8628290c8e01', description='null'}-localhost:27017] [INFO ] org.mongodb.driver.connection - Opened connection [connectionId{localValue:1, serverValue:124}] to localhost:27017
2022-08-30 13:47:03.416 [cluster-ClusterId{value='630da457118e8628290c8e01', description='null'}-localhost:27017] [INFO ] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=11223600}
2022-08-30 13:47:03.416 [cluster-rtt-ClusterId{value='630da457118e8628290c8e01', description='null'}-localhost:27017] [INFO ] org.mongodb.driver.connection - Opened connection [connectionId{localValue:2, serverValue:123}] to localhost:27017
2022-08-30 13:47:03.523 [main] [DEBUG] o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application Admin MBean registered with name 'org.springframework.boot:type=Admin,name=SpringApplication'
2022-08-30 13:47:03.958 [main] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2022-08-30 13:47:04.084 [main] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - 46 mappings in 'requestMappingHandlerMapping'
2022-08-30 13:47:04.404 [main] [INFO ] o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 16 endpoint(s) beneath base path '/monitor'
2022-08-30 13:47:04.491 [main] [INFO ] s.d.s.w.PropertySourcedRequestMappingHandlerMapping - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2022-08-30 13:47:04.599 [main] [DEBUG] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2022-08-30 13:47:05.121 [main] [INFO ] org.apache.kafka.clients.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.offset.reset = latest
	bootstrap.servers = [110.40.220.207:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-test-consumer-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = test-consumer
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism = GSSAPI
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 10000
	socket.connection.setup.timeout.max.ms = 127000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.2
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.JsonDeserializer

2022-08-30 13:47:05.166 [main] [INFO ] org.apache.kafka.common.utils.AppInfoParser - Kafka version: 2.7.2
2022-08-30 13:47:05.167 [main] [INFO ] org.apache.kafka.common.utils.AppInfoParser - Kafka commitId: 37a1cc36bf4d76f3
2022-08-30 13:47:05.167 [main] [INFO ] org.apache.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1661838425165
2022-08-30 13:47:05.168 [main] [INFO ] org.apache.kafka.clients.consumer.KafkaConsumer - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Subscribed to topic(s): test
2022-08-30 13:47:05.173 [main] [INFO ] org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8081"]
2022-08-30 13:47:05.179 [main] [INFO ] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8081 (http) with context path ''
2022-08-30 13:47:05.180 [main] [INFO ] s.d.s.web.plugins.DocumentationPluginsBootstrapper - Context refreshed
2022-08-30 13:47:05.191 [main] [INFO ] s.d.s.web.plugins.DocumentationPluginsBootstrapper - Found 6 custom documentation plugin(s)
2022-08-30 13:47:05.223 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 13:47:05.344 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: testUsingGET_1
2022-08-30 13:47:05.346 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: test2UsingGET_1
2022-08-30 13:47:05.355 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 13:47:05.356 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: testAopUsingGET_1
2022-08-30 13:47:05.359 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 13:47:05.361 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getCityUsingPOST_1
2022-08-30 13:47:05.362 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getFirstStudentUsingPOST_1
2022-08-30 13:47:05.366 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 13:47:05.368 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonUsingPOST_1
2022-08-30 13:47:05.369 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingGET_1
2022-08-30 13:47:05.370 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingHEAD_1
2022-08-30 13:47:05.370 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingPOST_1
2022-08-30 13:47:05.370 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingPUT_1
2022-08-30 13:47:05.371 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingPATCH_1
2022-08-30 13:47:05.371 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingDELETE_1
2022-08-30 13:47:05.371 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingOPTIONS_1
2022-08-30 13:47:05.372 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getJsonViewUsingTRACE_1
2022-08-30 13:47:05.372 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingGET_1
2022-08-30 13:47:05.373 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingHEAD_1
2022-08-30 13:47:05.373 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingPOST_1
2022-08-30 13:47:05.373 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingPUT_1
2022-08-30 13:47:05.374 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingPATCH_1
2022-08-30 13:47:05.374 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingDELETE_1
2022-08-30 13:47:05.374 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingOPTIONS_1
2022-08-30 13:47:05.374 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonAsObjectUsingTRACE_1
2022-08-30 13:47:05.375 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingGET_1
2022-08-30 13:47:05.375 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingHEAD_1
2022-08-30 13:47:05.376 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingPOST_1
2022-08-30 13:47:05.376 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingPUT_1
2022-08-30 13:47:05.376 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingPATCH_1
2022-08-30 13:47:05.376 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingDELETE_1
2022-08-30 13:47:05.377 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingOPTIONS_1
2022-08-30 13:47:05.377 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: readJsonStringUsingTRACE_1
2022-08-30 13:47:05.378 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: serializationUsingPOST_1
2022-08-30 13:47:05.381 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingGET_1
2022-08-30 13:47:05.381 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingHEAD_1
2022-08-30 13:47:05.382 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingPOST_1
2022-08-30 13:47:05.383 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingPUT_1
2022-08-30 13:47:05.383 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingPATCH_1
2022-08-30 13:47:05.384 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingDELETE_1
2022-08-30 13:47:05.384 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingOPTIONS_1
2022-08-30 13:47:05.385 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateJsonUsingTRACE_1
2022-08-30 13:47:05.389 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 13:47:05.390 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: addRedisUsingPOST_1
2022-08-30 13:47:05.391 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: deleteRedisUsingPOST_1
2022-08-30 13:47:05.392 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: getRedisUsingPOST_1
2022-08-30 13:47:05.392 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: updateRedisUsingPOST_1
2022-08-30 13:47:05.396 [main] [INFO ] s.d.spring.web.scanners.ApiListingReferenceScanner - Scanning for api listing references
2022-08-30 13:47:05.397 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: addJdbcStudentUsingPOST_1
2022-08-30 13:47:05.398 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: queryStudentByIdUsingGET_1
2022-08-30 13:47:05.399 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: queryStudentById2UsingPOST_1
2022-08-30 13:47:05.400 [main] [INFO ] s.d.s.w.r.operation.CachingOperationNameGenerator - Generating unique operation named: queryStudentById3UsingPOST_1
2022-08-30 13:47:05.413 [main] [DEBUG] o.s.b.a.l.ConditionEvaluationReportLoggingListener - 


============================
CONDITIONS EVALUATION REPORT
============================


Positive matches:
-----------------

   AopAutoConfiguration matched:
      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:
      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   AuditEventsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.auditevents.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   AutoConfiguration matched:
      - @ConditionalOnProperty (helloworld=true) matched (OnPropertyCondition)

   BeansEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.beans.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   BeansEndpointAutoConfiguration#beansEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.beans.BeansEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CacheMeterBinderProvidersConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.MeterBinder' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.RedisCacheMeterBinderProviderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.cache.RedisCache' (OnClassCondition)

   CacheMetricsAutoConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.cache.CacheManager; SearchStrategy: all) found bean 'cacheManager' (OnBeanCondition)

   CacheMetricsRegistrarConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'simpleMeterRegistry', 'redisCacheMeterBinderProvider' (OnBeanCondition)

   CachesEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint no property management.endpoint.caches.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   CachesEndpointAutoConfiguration#cachesEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CachesEndpointAutoConfiguration#cachesEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.cache.CachesEndpoint; SearchStrategy: all) found bean 'cachesEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.cache.CachesEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   CompositeMeterRegistryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.composite.CompositeMeterRegistry' (OnClassCondition)

   ConditionsReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.conditions.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ConditionsReportEndpointAutoConfiguration#conditionsReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.configprops.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ConfigurationPropertiesReportEndpointAutoConfiguration#configurationPropertiesReportEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint; SearchStrategy: all) found bean 'configurationPropertiesReportEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.jdbc.core.JdbcTemplate', 'org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource; SearchStrategy: all) found beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)

   DataSourceHealthContributorAutoConfiguration#dbHealthContributor matched:
      - @ConditionalOnMissingBean (names: dbHealthIndicator,dbHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: javax.sql.DataSource,io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans 'dynamicDataSource', 'simpleMeterRegistry', 'first', 'second' (OnBeanCondition)

   DataSourcePoolMetricsAutoConfiguration.HikariDataSourceMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'com.zaxxer.hikari.HikariDataSource' (OnClassCondition)

   DiskSpaceHealthContributorAutoConfiguration matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   DiskSpaceHealthContributorAutoConfiguration#diskSpaceHealthIndicator matched:
      - @ConditionalOnMissingBean (names: diskSpaceHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   DispatcherServletAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - Default DispatcherServlet did not find dispatcher servlet beans (DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRegistration' (OnClassCondition)
      - DispatcherServlet Registration did not find servlet registration bean (DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition)

   DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration#dispatcherServletRegistration matched:
      - @ConditionalOnBean (names: dispatcherServlet types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   DruidDataSourceAutoConfigure matched:
      - @ConditionalOnClass found required class 'com.alibaba.druid.pool.DruidDataSource' (OnClassCondition)

   DruidStatViewServletConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.datasource.druid.stat-view-servlet.enabled=true) matched (OnPropertyCondition)

   DruidWebStatFilterConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.datasource.druid.web-stat-filter.enabled=true) matched (OnPropertyCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)

   EndpointAutoConfiguration#endpointCachingOperationInvokerAdvisor matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EndpointAutoConfiguration#endpointOperationParameterMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.env.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   EnvironmentEndpointAutoConfiguration#environmentEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.env.EnvironmentEndpoint; SearchStrategy: all) found bean 'environmentEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ErrorMvcAutoConfiguration#basicErrorController matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorController; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration#errorAttributes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.DefaultErrorViewResolverConfiguration#conventionErrorViewResolver matched:
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet'; @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration matched:
      - @ConditionalOnProperty (server.error.whitelabel.enabled) matched (OnPropertyCondition)
      - ErrorTemplate Missing did not find error template view (ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#beanNameViewResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.servlet.view.BeanNameViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration#defaultErrorView matched:
      - @ConditionalOnMissingBean (names: error; SearchStrategy: all) did not find any beans (OnBeanCondition)

   GenericCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)

   HealthContributorAutoConfiguration#pingHealthContributor matched:
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   HealthEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint found property management.endpoint.health.enabled with value true; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HealthEndpointConfiguration#healthContributorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthEndpointGroups matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointGroups; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthHttpCodeStatusMapper matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HttpCodeStatusMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointConfiguration#healthStatusAggregator matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.StatusAggregator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)

   HealthEndpointWebExtensionConfiguration#healthEndpointWebExtension matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HeapDumpWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.heapdump.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HeapDumpWebEndpointAutoConfiguration#heapDumpWebEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.HeapDumpWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpClientMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   HttpEncodingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.filter.CharacterEncodingFilter' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (server.servlet.encoding.enabled) matched (OnPropertyCondition)

   HttpEncodingAutoConfiguration#characterEncodingFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.filter.CharacterEncodingFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.HttpMessageConverter' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition)

   HttpMessageConvertersAutoConfiguration#messageConverters matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.http.HttpMessageConverters; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.StringHttpMessageConverter' (OnClassCondition)

   HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration#stringHttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.StringHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (management.trace.http.enabled) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.trace.http.HttpTraceRepository; SearchStrategy: all) found bean 'buildHttpTraceRepository' (OnBeanCondition)

   HttpTraceAutoConfiguration#httpExchangeTracer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.trace.http.HttpExchangeTracer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceAutoConfiguration.ServletTraceFilterConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   HttpTraceAutoConfiguration.ServletTraceFilterConfiguration#httpTraceFilter matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   HttpTraceEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.httptrace.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   HttpTraceEndpointAutoConfiguration#httpTraceEndpoint matched:
      - @ConditionalOnBean (types: org.springframework.boot.actuate.trace.http.HttpTraceRepository; SearchStrategy: all) found bean 'buildHttpTraceRepository'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.trace.http.HttpTraceEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   InfoContributorAutoConfiguration#envInfoContributor matched:
      - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.info.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   InfoEndpointAutoConfiguration#infoEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.info.InfoEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)

   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)

   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)

   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:
      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration matched:
      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)
      - @ConditionalOnProperty (spring.mvc.converters.preferred-json-mapper=jackson) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2HttpMessageConverterConfiguration#mappingJackson2HttpMessageConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.MappingJackson2HttpMessageConverter ignored: org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter,org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.jmx.export.MBeanExporter' (OnClassCondition)
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxAutoConfiguration#mbeanExporter matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.MBeanExporter; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#mbeanServer matched:
      - @ConditionalOnMissingBean (types: javax.management.MBeanServer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxAutoConfiguration#objectNamingStrategy matched:
      - @ConditionalOnMissingBean (types: org.springframework.jmx.export.naming.ObjectNamingStrategy; SearchStrategy: current) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration matched:
      - @ConditionalOnProperty (spring.jmx.enabled=true) matched (OnPropertyCondition)

   JmxEndpointAutoConfiguration#endpointObjectNameFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.EndpointObjectNameFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxAnnotationEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.jmx.JmxEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JmxEndpointAutoConfiguration#jmxMBeanExporter matched:
      - @ConditionalOnSingleCandidate (types: javax.management.MBeanServer; SearchStrategy: all) found a primary bean from beans 'mbeanServer' (OnBeanCondition)

   JvmMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   JvmMetricsAutoConfiguration#classLoaderMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmGcMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmGcMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmMemoryMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   JvmMetricsAutoConfiguration#jvmThreadMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAnnotationDrivenConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.kafka.annotation.EnableKafka' (OnClassCondition)

   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactoryConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.kafka.core.KafkaTemplate' (OnClassCondition)

   KafkaAutoConfiguration#kafkaAdmin matched:
      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.KafkaAdmin; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAutoConfiguration#kafkaProducerListener matched:
      - @ConditionalOnMissingBean (types: org.springframework.kafka.support.ProducerListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.kafka.KafkaClientMetrics', 'org.springframework.kafka.core.ProducerFactory' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   KafkaMetricsAutoConfiguration.KafkaStreamsMetricsConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.kafka.KafkaStreamsMetrics', 'org.springframework.kafka.config.StreamsBuilderFactoryBean' (OnClassCondition)

   LettuceConnectionConfiguration matched:
      - @ConditionalOnClass found required class 'io.lettuce.core.RedisClient' (OnClassCondition)
      - @ConditionalOnProperty (spring.redis.client-type=lettuce) matched (OnPropertyCondition)

   LettuceConnectionConfiguration#lettuceClientResources matched:
      - @ConditionalOnMissingBean (types: io.lettuce.core.resource.ClientResources; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration#redisConnectionFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LifecycleAutoConfiguration#defaultLifecycleProcessor matched:
      - @ConditionalOnMissingBean (names: lifecycleProcessor; SearchStrategy: current) did not find any beans (OnBeanCondition)

   LogFileWebEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.logfile.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   LogFileWebEndpointAutoConfiguration#logFileWebEndpoint matched:
      - Log File found logging.file.path var/log (LogFileWebEndpointAutoConfiguration.LogFileCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LogFileWebEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LogbackMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'ch.qos.logback.classic.LoggerContext', 'org.slf4j.LoggerFactory' (OnClassCondition)
      - LogbackLoggingCondition ILoggerFactory is a Logback LoggerContext (LogbackMetricsAutoConfiguration.LogbackLoggingCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   LogbackMetricsAutoConfiguration#logbackMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.logging.LogbackMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LoggersEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.loggers.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   LoggersEndpointAutoConfiguration#loggersEndpoint matched:
      - Logging System enabled (LoggersEndpointAutoConfiguration.OnEnabledLoggingSystemCondition)
      - @ConditionalOnBean (types: org.springframework.boot.logging.LoggingSystem; SearchStrategy: all) found bean 'springBootLoggingSystem'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.logging.LoggersEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ManagementContextAutoConfiguration.SameManagementContextConfiguration matched:
      - Management Port actual port type (SAME) matched required type (OnManagementPortCondition)

   MappingsEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.mappings.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ServletWebConfiguration.SpringMvcConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet; SearchStrategy: all) found bean 'dispatcherServlet' (OnBeanCondition)

   MetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)

   MetricsAutoConfiguration#micrometerClock matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MetricsEndpointAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)
      - @ConditionalOnAvailableEndpoint no property management.endpoint.metrics.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   MetricsEndpointAutoConfiguration#metricsEndpoint matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.MetricsEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.mongodb.client.MongoClient' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration#mongo matched:
      - @ConditionalOnMissingBean (types: com.mongodb.client.MongoClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoAutoConfiguration.MongoClientSettingsConfiguration matched:
      - @ConditionalOnMissingBean (types: com.mongodb.MongoClientSettings; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDataAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'com.mongodb.client.MongoClient', 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)

   MongoDataConfiguration#mongoCustomConversions matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.convert.MongoCustomConversions; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDataConfiguration#mongoMappingContext matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.mapping.MongoMappingContext; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryConfiguration matched:
      - @ConditionalOnSingleCandidate (types: com.mongodb.client.MongoClient; SearchStrategy: all) found a primary bean from beans 'mongo'; @ConditionalOnMissingBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.data.mongodb.MongoDatabaseFactory; SearchStrategy: all) found bean 'mongoDatabaseFactory' (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#gridFsTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.gridfs.GridFsOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#mappingMongoConverter matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.convert.MongoConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoDatabaseFactoryDependentConfiguration#mongoTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.MongoOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: org.springframework.data.mongodb.core.MongoTemplate; SearchStrategy: all) found bean 'mongoTemplate' (OnBeanCondition)

   MongoHealthContributorAutoConfiguration#mongoHealthContributor matched:
      - @ConditionalOnMissingBean (names: mongoHealthIndicator,mongoHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'com.mongodb.MongoClientSettings' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoCommandMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener' (OnClassCondition)
      - @ConditionalOnProperty (management.metrics.mongo.command.enabled=true) matched (OnPropertyCondition)

   MongoMetricsAutoConfiguration.MongoCommandMetricsConfiguration#mongoCommandTagsProvider matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoCommandTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoCommandMetricsConfiguration#mongoMetricsCommandListener matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoConnectionPoolMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener' (OnClassCondition)
      - @ConditionalOnProperty (management.metrics.mongo.connectionpool.enabled=true) matched (OnPropertyCondition)

   MongoMetricsAutoConfiguration.MongoConnectionPoolMetricsConfiguration#mongoConnectionPoolTagsProvider matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoConnectionPoolTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoMetricsAutoConfiguration.MongoConnectionPoolMetricsConfiguration#mongoMetricsConnectionPoolListener matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MongoRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'com.mongodb.client.MongoClient', 'org.springframework.data.mongodb.repository.MongoRepository' (OnClassCondition)
      - @ConditionalOnRepositoryType configured type of 'AUTO' matched required type (OnRepositoryTypeCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean,org.springframework.data.mongodb.repository.config.MongoRepositoryConfigurationExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.multipart.support.StandardServletMultipartResolver', 'javax.servlet.MultipartConfigElement' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.servlet.multipart.enabled) matched (OnPropertyCondition)

   MultipartAutoConfiguration#multipartConfigElement matched:
      - @ConditionalOnMissingBean (types: javax.servlet.MultipartConfigElement,org.springframework.web.multipart.commons.CommonsMultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MultipartAutoConfiguration#multipartResolver matched:
      - @ConditionalOnMissingBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   MybatisLanguageDriverAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.apache.ibatis.scripting.LanguageDriver' (OnClassCondition)

   NettyAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.netty.util.NettyRuntime' (OnClassCondition)

   NoOpCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)

   PersistenceExceptionTranslationAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)

   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:
      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)
      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ReactiveHealthEndpointConfiguration matched:
      - @ConditionalOnClass found required class 'reactor.core.publisher.Flux' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)

   ReactiveHealthEndpointConfiguration#reactiveHealthContributorRegistry matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.core.RedisOperations' (OnClassCondition)

   RedisAutoConfiguration#stringRedisTemplate matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a primary bean from beans 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.core.StringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisCacheConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)
      - Cache org.springframework.boot.autoconfigure.cache.RedisCacheConfiguration automatic cache type (CacheCondition)

   RedisHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.connection.RedisConnectionFactory' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory' (OnBeanCondition)

   RedisReactiveAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'org.springframework.data.redis.core.ReactiveRedisTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)

   RedisReactiveAutoConfiguration#reactiveRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveAutoConfiguration#reactiveStringRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveStringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'reactor.core.publisher.Flux' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory' (OnBeanCondition)

   RedisReactiveHealthContributorAutoConfiguration#redisHealthContributor matched:
      - @ConditionalOnMissingBean (names: redisHealthIndicator,redisHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisRepositoriesAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.redis.repository.configuration.EnableRedisRepositories' (OnClassCondition)
      - @ConditionalOnProperty (spring.data.redis.repositories.enabled=true) matched (OnPropertyCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (types: org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.data.repository.Repository' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#metricsRepositoryMethodInvocationListener matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RepositoryMetricsAutoConfiguration#repositoryTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.ReactiveWebApplication did not find reactive web application classes (RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition)

   RestTemplateAutoConfiguration#restTemplateBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateAutoConfiguration#restTemplateBuilderConfigurer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RestTemplateMetricsConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.client.RestTemplate' (OnClassCondition)
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)

   RestTemplateMetricsConfiguration#restTemplateExchangeTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.web.client.RestTemplateExchangeTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ScheduledTasksEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.scheduledtasks.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ScheduledTasksEndpointAutoConfiguration#scheduledTasksEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ServletEndpointManagementContextConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   ServletEndpointManagementContextConfiguration.WebMvcServletEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)

   ServletManagementContextAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.Servlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration matched:
      - @ConditionalOnClass found required class 'javax.servlet.ServletRequest' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   ServletWebServerFactoryAutoConfiguration#tomcatServletWebServerFactoryCustomizer matched:
      - @ConditionalOnClass found required class 'org.apache.catalina.startup.Tomcat' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedTomcat matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.apache.catalina.startup.Tomcat', 'org.apache.coyote.UpgradeProtocol' (OnClassCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.web.servlet.server.ServletWebServerFactory; SearchStrategy: current) did not find any beans (OnBeanCondition)

   ShutdownEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint found property management.endpoint.shutdown.enabled with value true; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ShutdownEndpointAutoConfiguration#shutdownEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.context.ShutdownEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleCacheConfiguration matched:
      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)

   SimpleMetricsExportAutoConfiguration matched:
      - @ConditionalOnEnabledMetricsExport management.metrics.export.defaults.enabled is considered true (OnMetricsExportEnabledCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) found bean 'micrometerClock'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SimpleMetricsExportAutoConfiguration#simpleConfig matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.simple.SimpleConfig; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringApplicationAdminJmxAutoConfiguration matched:
      - @ConditionalOnProperty (spring.application.admin.enabled=true) matched (OnPropertyCondition)

   SpringApplicationAdminJmxAutoConfiguration#springApplicationAdminRegistrar matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
      - matched (SpringBootAdminClientEnabledCondition)

   SpringBootAdminClientAutoConfiguration#registrationListener matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.RegistrationApplicationListener; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration#registrator matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.ApplicationRegistrator; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration#startupDateMetadataContributor matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.metadata.StartupDateMetadataContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration.BlockingRegistrationClientConfig matched:
      - @ConditionalOnBean (types: org.springframework.boot.web.client.RestTemplateBuilder; SearchStrategy: all) found bean 'restTemplateBuilder' (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration.BlockingRegistrationClientConfig#registrationClient matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.BlockingRegistrationClient; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringBootAdminClientAutoConfiguration.ServletConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   SpringBootAdminClientAutoConfiguration.ServletConfiguration#applicationFactory matched:
      - @ConditionalOnMissingBean (types: de.codecentric.boot.admin.client.registration.ApplicationFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.web.PageableHandlerMethodArgumentResolver', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnMissingBean (types: org.springframework.data.web.PageableHandlerMethodArgumentResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#pageableCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SpringDataWebAutoConfiguration#sortCustomizer matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SqlInitializationAutoConfiguration matched:
      - @ConditionalOnProperty (spring.sql.init.enabled) matched (OnPropertyCondition)
      - NoneNestedConditions 0 matched 1 did not; NestedCondition on SqlInitializationAutoConfiguration.SqlInitializationModeCondition.ModeIsNever @ConditionalOnProperty (spring.sql.init.mode=never) did not find property 'mode' (SqlInitializationAutoConfiguration.SqlInitializationModeCondition)
      - @ConditionalOnMissingBean (types: org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer; SearchStrategy: all) did not find any beans (OnBeanCondition)

   Swagger2DocumentationConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   SystemMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   SystemMetricsAutoConfiguration#fileDescriptorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.FileDescriptorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#processorMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.ProcessorMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   SystemMetricsAutoConfiguration#uptimeMetrics matched:
      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.system.UptimeMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskExecutionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor' (OnClassCondition)

   TaskExecutionAutoConfiguration#taskExecutorBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskExecutorBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TaskSchedulingAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler' (OnClassCondition)

   TaskSchedulingAutoConfiguration#taskSchedulerBuilder matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.task.TaskSchedulerBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThreadDumpEndpointAutoConfiguration matched:
      - @ConditionalOnAvailableEndpoint no property management.endpoint.threaddump.enabled found so using endpoint default; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.jmx.exposure' property (OnAvailableEndpointCondition)

   ThreadDumpEndpointAutoConfiguration#dumpEndpoint matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.management.ThreadDumpEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.thymeleaf.templatemode.TemplateMode', 'org.thymeleaf.spring5.SpringTemplateEngine' (OnClassCondition)

   ThymeleafAutoConfiguration.DefaultTemplateResolverConfiguration matched:
      - @ConditionalOnMissingBean (names: defaultTemplateResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafDefaultConfiguration#templateEngine matched:
      - @ConditionalOnMissingBean (types: org.thymeleaf.spring5.ISpringTemplateEngine; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafJava8TimeDialect matched:
      - @ConditionalOnClass found required class 'org.thymeleaf.extras.java8time.dialect.Java8TimeDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafJava8TimeDialect#java8TimeDialect matched:
      - @ConditionalOnMissingBean (types: org.thymeleaf.extras.java8time.dialect.Java8TimeDialect; SearchStrategy: all) did not find any beans (OnBeanCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnProperty (spring.thymeleaf.enabled) matched (OnPropertyCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration.ThymeleafViewResolverConfiguration#thymeleafViewResolver matched:
      - @ConditionalOnMissingBean (names: thymeleafViewResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TomcatMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.binder.tomcat.TomcatMetrics', 'org.apache.catalina.Manager' (OnClassCondition)
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   TomcatMetricsAutoConfiguration#tomcatMetricsBinder matched:
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry'; @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.tomcat.TomcatMetrics,org.springframework.boot.actuate.metrics.web.tomcat.TomcatMetricsBinder; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.transaction.PlatformTransactionManager' (OnClassCondition)

   TransactionAutoConfiguration#platformTransactionManagerCustomizers matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration matched:
      - @ConditionalOnBean (types: org.springframework.transaction.TransactionManager; SearchStrategy: all) found bean 'firstTransactionManager'; @ConditionalOnMissingBean (types: org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration matched:
      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.transaction.PlatformTransactionManager; SearchStrategy: all) found a primary bean from beans 'firstTransactionManager' (OnBeanCondition)

   TransactionAutoConfiguration.TransactionTemplateConfiguration#transactionTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.transaction.support.TransactionOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration matched:
      - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration#controllerEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#endpointMediaTypes matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#pathMappedEndpoints matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration#webEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration matched:
      - found 'session' scope (OnWebApplicationCondition)

   WebEndpointAutoConfiguration.WebEndpointServletConfiguration#servletEndpointDiscoverer matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: org.springframework.web.servlet.DispatcherServlet,org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier; SearchStrategy: all) found beans 'webEndpointDiscoverer', 'dispatcherServlet' (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#controllerEndpointHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcEndpointManagementContextConfiguration#webEndpointServletHandlerMapping matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcMetricsAutoConfiguration matched:
      - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)
      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)

   WebMvcMetricsAutoConfiguration#webMvcTagsProvider matched:
      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebSocketServletAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'javax.websocket.server.ServerContainer' (OnClassCondition)
      - found 'session' scope (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration matched:
      - @ConditionalOnClass found required classes 'org.apache.catalina.startup.Tomcat', 'org.apache.tomcat.websocket.server.WsSci' (OnClassCondition)

   WebSocketServletAutoConfiguration.TomcatWebSocketConfiguration#websocketServletWebServerCustomizer matched:
      - @ConditionalOnMissingBean (names: websocketServletWebServerCustomizer; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   ActiveMQAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AopAutoConfiguration.AspectJAutoProxyingConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   AopAutoConfiguration.ClassProxyingConfiguration:
      Did not match:
         - @ConditionalOnMissingClass found unwanted class 'org.aspectj.weaver.Advice' (OnClassCondition)

   AppOpticsMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.appoptics.AppOpticsMeterRegistry' (OnClassCondition)

   ArtemisAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   AtlasMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.atlas.AtlasMeterRegistry' (OnClassCondition)

   AuditAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)
      Matched:
         - @ConditionalOnProperty (management.auditevents.enabled) matched (OnPropertyCondition)

   AuditEventsEndpointAutoConfiguration#auditEventsEndpoint:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.actuate.audit.AuditEventRepository; SearchStrategy: all) did not find any beans of type org.springframework.boot.actuate.audit.AuditEventRepository (OnBeanCondition)

   AvailabilityHealthContributorAutoConfiguration#livenessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.livenessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityHealthContributorAutoConfiguration#readinessStateHealthIndicator:
      Did not match:
         - @ConditionalOnProperty (management.health.readinessstate.enabled=true) did not find property 'enabled' (OnPropertyCondition)

   AvailabilityProbesAutoConfiguration:
      Did not match:
         - Probes availability not running on a supported cloud platform (AvailabilityProbesAutoConfiguration.ProbesCondition)

   BatchAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.batch.core.launch.JobLauncher' (OnClassCondition)

   CacheAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: cacheResolver types: org.springframework.cache.CacheManager; SearchStrategy: all) found beans of type 'org.springframework.cache.CacheManager' cacheManager (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.cache.CacheManager' (OnClassCondition)

   CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean' (OnClassCondition)
         - Ancestor org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   CacheMeterBinderProvidersConfiguration.CaffeineCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Cache' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.EhCache2CacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Ehcache' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.HazelcastCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'com.hazelcast.spring.cache.HazelcastCache', 'com.hazelcast.core.Hazelcast' (OnClassCondition)

   CacheMeterBinderProvidersConfiguration.JCacheCacheMeterBinderProviderConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.CacheManager' (OnClassCondition)

   CaffeineCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.benmanes.caffeine.cache.Caffeine' (OnClassCondition)

   CassandraAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   CassandraReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.cassandra.ReactiveSession' (OnClassCondition)

   CassandraRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.datastax.oss.driver.api.core.CqlSession' (OnClassCondition)

   ClientHttpConnectorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.web.servlet.DispatcherServlet' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)
         - @ConditionalOnProperty (management.cloudfoundry.enabled) matched (OnPropertyCondition)

   CodecsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   CompositeMeterRegistryConfiguration:
      Did not match:
         - NoneNestedConditions 1 matched 1 did not; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.SingleInjectableMeterRegistry @ConditionalOnSingleCandidate (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found a primary bean from beans 'simpleMeterRegistry'; NestedCondition on CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition.NoMeterRegistryCondition @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (CompositeMeterRegistryConfiguration.MultipleNonPrimaryMeterRegistriesCondition)

   ConnectionFactoryHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   ConnectionPoolMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.pool.ConnectionPool' (OnClassCondition)

   CouchbaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   CouchbaseHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Cluster' (OnClassCondition)

   CouchbaseRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.couchbase.client.java.Bucket' (OnClassCondition)

   DataSourceInitializationConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) did not find a primary bean from beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.jdbc.datasource.init.DatabasePopulator' (OnClassCondition)

   DataSourcePoolMetricsAutoConfiguration.DataSourcePoolMetadataMetricsConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider; SearchStrategy: all) did not find any beans of type org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider (OnBeanCondition)

   DatadogMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.datadog.DatadogMeterRegistry' (OnClassCondition)

   DispatcherServletAutoConfiguration.DispatcherServletConfiguration#multipartResolver:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.web.multipart.MultipartResolver; SearchStrategy: all) did not find any beans of type org.springframework.web.multipart.MultipartResolver (OnBeanCondition)

   DruidDataSourceAutoConfigure#dataSource:
      Did not match:
         - @ConditionalOnMissingBean (types: javax.sql.DataSource; SearchStrategy: all) found beans of type 'javax.sql.DataSource' first, second, dynamicDataSource (OnBeanCondition)

   DruidFilterConfiguration#commonsLogFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.commons-log.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#configFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.config.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#encodingConvertFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.encoding.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#log4j2Filter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.log4j2.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#log4jFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.log4j.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#slf4jLogFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.slf4j.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#statFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.stat.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#wallConfig:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.wall.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidFilterConfiguration#wallFilter:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.filter.wall.enabled) did not find property 'enabled' (OnPropertyCondition)

   DruidSpringAopConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.druid.aop-patterns) did not find property 'spring.datasource.druid.aop-patterns' (OnPropertyCondition)

   DynatraceMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.dynatrace.DynatraceMeterRegistry' (OnClassCondition)

   EhCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'net.sf.ehcache.Cache' (OnClassCondition)

   ElasticMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.elastic.ElasticMeterRegistry' (OnClassCondition)

   ElasticSearchReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ElasticSearchRestHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestHighLevelClient' (OnClassCondition)

   ElasticsearchDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate' (OnClassCondition)

   ElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.Client' (OnClassCondition)

   ElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.elasticsearch.client.RestHighLevelClient' (OnClassCondition)

   EmbeddedLdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.unboundid.ldap.listener.InMemoryDirectoryServer' (OnClassCondition)

   EmbeddedMongoAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'de.flapdoodle.embed.mongo.MongodStarter' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)

   EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   ErrorWebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   FlywayAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FlywayEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.flywaydb.core.Flyway' (OnClassCondition)

   FreeMarkerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'freemarker.template.Configuration' (OnClassCondition)

   GangliaMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.ganglia.GangliaMeterRegistry' (OnClassCondition)

   GraphiteMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.graphite.GraphiteMeterRegistry' (OnClassCondition)

   GroovyTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'groovy.text.markup.MarkupTemplateEngine' (OnClassCondition)

   GsonAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   GsonHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.google.gson.Gson' (OnClassCondition)

   H2ConsoleAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.h2.server.web.WebServlet' (OnClassCondition)

   HazelcastAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HazelcastJpaDependencyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.hazelcast.core.HazelcastInstance' (OnClassCondition)

   HealthEndpointReactiveWebExtensionConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   HibernateJpaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManager' (OnClassCondition)

   HibernateMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.persistence.EntityManagerFactory' (OnClassCondition)

   HttpHandlerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   HttpTraceAutoConfiguration.ReactiveTraceFilterConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   HumioMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.humio.HumioMeterRegistry' (OnClassCondition)

   HypermediaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.hateoas.EntityModel' (OnClassCondition)

   InfinispanCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager' (OnClassCondition)

   InfluxDbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxDbHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.influxdb.InfluxDB' (OnClassCondition)

   InfluxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.influx.InfluxMeterRegistry' (OnClassCondition)

   InfoContributorAutoConfiguration#buildInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.BuildProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   InfoContributorAutoConfiguration#gitInfoContributor:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.boot.info.GitProperties; SearchStrategy: all) did not find any beans (OnBeanCondition)
      Matched:
         - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)

   IntegrationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.config.EnableIntegration' (OnClassCondition)

   IntegrationGraphEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.integration.graph.IntegrationGraphServer' (OnClassCondition)

   JCacheCacheConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.cache.Caching' (OnClassCondition)

   JacksonHttpMessageConvertersConfiguration.MappingJackson2XmlHttpMessageConverterConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.fasterxml.jackson.dataformat.xml.XmlMapper' (OnClassCondition)

   JdbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration' (OnClassCondition)

   JdbcTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) did not find a primary bean from beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.core.JdbcTemplate' (OnClassCondition)

   JedisConnectionConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.apache.commons.pool2.impl.GenericObjectPool', 'redis.clients.jedis.Jedis' (OnClassCondition)

   JerseyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.spring.SpringComponentProvider' (OnClassCondition)

   JerseySameManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JerseyServerMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.jersey2.server.MetricsApplicationEventListener' (OnClassCondition)

   JerseyWebEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   JettyMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.server.Server' (OnClassCondition)

   JmsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.Message' (OnClassCondition)

   JmsHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.jms.ConnectionFactory' (OnClassCondition)

   JmxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.jmx.JmxMeterRegistry' (OnClassCondition)

   JndiConnectionFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.jms.core.JmsTemplate' (OnClassCondition)

   JndiDataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.datasource.jndi-name) did not find property 'jndi-name' (OnPropertyCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.sql.DataSource', 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType' (OnClassCondition)

   JolokiaEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jolokia.http.AgentServlet' (OnClassCondition)

   JooqAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.jooq.DSLContext' (OnClassCondition)

   JpaRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.jpa.repository.JpaRepository' (OnClassCondition)

   JsonbAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JsonbHttpMessageConvertersConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.json.bind.Jsonb' (OnClassCondition)

   JtaAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.Transaction' (OnClassCondition)

   KafkaAnnotationDrivenConfiguration#kafkaListenerContainerFactory:
      Did not match:
         - @ConditionalOnMissingBean (names: kafkaListenerContainerFactory; SearchStrategy: all) found beans named kafkaListenerContainerFactory (OnBeanCondition)

   KafkaAnnotationDrivenConfiguration.EnableKafkaConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (names: org.springframework.kafka.config.internalKafkaListenerAnnotationProcessor; SearchStrategy: all) found beans named org.springframework.kafka.config.internalKafkaListenerAnnotationProcessor (OnBeanCondition)

   KafkaAutoConfiguration#kafkaConsumerFactory:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.kafka.core.ConsumerFactory; SearchStrategy: all) found beans of type 'org.springframework.kafka.core.ConsumerFactory' consumerFactory (OnBeanCondition)

   KafkaAutoConfiguration#kafkaJaasInitializer:
      Did not match:
         - @ConditionalOnProperty (spring.kafka.jaas.enabled) did not find property 'spring.kafka.jaas.enabled' (OnPropertyCondition)

   KafkaAutoConfiguration#kafkaProducerFactory:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.kafka.core.ProducerFactory; SearchStrategy: all) found beans of type 'org.springframework.kafka.core.ProducerFactory' producerFactory (OnBeanCondition)

   KafkaAutoConfiguration#kafkaTemplate:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.kafka.core.KafkaTemplate; SearchStrategy: all) found beans of type 'org.springframework.kafka.core.KafkaTemplate' kafkaTemplate (OnBeanCondition)

   KafkaAutoConfiguration#kafkaTransactionManager:
      Did not match:
         - @ConditionalOnProperty (spring.kafka.producer.transaction-id-prefix) did not find property 'spring.kafka.producer.transaction-id-prefix' (OnPropertyCondition)

   KafkaStreamsAnnotationDrivenConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.kafka.streams.StreamsBuilder' (OnClassCondition)

   KairosMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.kairos.KairosMeterRegistry' (OnClassCondition)

   LdapAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.ContextSource' (OnClassCondition)

   LdapHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ldap.core.LdapOperations' (OnClassCondition)

   LdapRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.ldap.repository.LdapRepository' (OnClassCondition)

   LiquibaseAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.change.DatabaseChange' (OnClassCondition)

   LiquibaseEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'liquibase.integration.spring.SpringLiquibase' (OnClassCondition)

   Log4J2MetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.logging.log4j.core.LoggerContext' (OnClassCondition)

   MailHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.mail.javamail.JavaMailSenderImpl; SearchStrategy: all) did not find any beans of type org.springframework.mail.javamail.JavaMailSenderImpl (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required class 'org.springframework.mail.javamail.JavaMailSenderImpl' (OnClassCondition)
         - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   MailSenderAutoConfiguration:
      Did not match:
         - AnyNestedCondition 0 matched 2 did not; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.JndiNameProperty @ConditionalOnProperty (spring.mail.jndi-name) did not find property 'jndi-name'; NestedCondition on MailSenderAutoConfiguration.MailSenderCondition.HostProperty @ConditionalOnProperty (spring.mail.host) did not find property 'host' (MailSenderAutoConfiguration.MailSenderCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.mail.internet.MimeMessage', 'javax.activation.MimeType', 'org.springframework.mail.MailSender' (OnClassCondition)

   MailSenderValidatorAutoConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.mail.test-connection) did not find property 'test-connection' (OnPropertyCondition)

   ManagementContextAutoConfiguration.DifferentManagementContextConfiguration:
      Did not match:
         - Management Port actual port type (SAME) did not match required type (DIFFERENT) (OnManagementPortCondition)

   ManagementWebSecurityAutoConfiguration:
      Did not match:
         - AllNestedConditions 1 matched 1 did not; NestedCondition on DefaultWebSecurityCondition.Beans @ConditionalOnMissingBean (types: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter,org.springframework.security.web.SecurityFilterChain; SearchStrategy: all) did not find any beans; NestedCondition on DefaultWebSecurityCondition.Classes @ConditionalOnClass did not find required classes 'org.springframework.security.web.SecurityFilterChain', 'org.springframework.security.config.annotation.web.builders.HttpSecurity' (DefaultWebSecurityCondition)
      Matched:
         - found 'session' scope (OnWebApplicationCondition)

   MappingsEndpointAutoConfiguration.ReactiveWebConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   MessageSourceAutoConfiguration:
      Did not match:
         - ResourceBundle did not find bundle with basename messages (MessageSourceAutoConfiguration.ResourceBundleCondition)

   MongoReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MongoReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.data.mongodb.core.ReactiveMongoTemplate; SearchStrategy: all) did not find any beans of type org.springframework.data.mongodb.core.ReactiveMongoTemplate (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'org.springframework.data.mongodb.core.ReactiveMongoTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)
         - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   MongoReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.mongodb.reactivestreams.client.MongoClient' (OnClassCondition)

   MustacheAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.samskivert.mustache.Mustache' (OnClassCondition)

   MybatisAutoConfiguration:
      Did not match:
         - @ConditionalOnSingleCandidate (types: javax.sql.DataSource; SearchStrategy: all) did not find a primary bean from beans 'dynamicDataSource', 'first', 'second' (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'org.apache.ibatis.session.SqlSessionFactory', 'org.mybatis.spring.SqlSessionFactoryBean' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.FreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver', 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriverConfig' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.LegacyFreeMarkerConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.freemarker.FreeMarkerLanguageDriver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.LegacyVelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.velocity.Driver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.ThymeleafConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.mybatis.scripting.thymeleaf.ThymeleafLanguageDriver' (OnClassCondition)

   MybatisLanguageDriverAutoConfiguration.VelocityConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.mybatis.scripting.velocity.VelocityLanguageDriver', 'org.mybatis.scripting.velocity.VelocityLanguageDriverConfig' (OnClassCondition)

   Neo4jAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jReactiveRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   Neo4jRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.neo4j.driver.Driver' (OnClassCondition)

   NewRelicMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.newrelic.NewRelicMeterRegistry' (OnClassCondition)

   NoOpMeterRegistryConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found beans of type 'io.micrometer.core.instrument.MeterRegistry' simpleMeterRegistry (OnBeanCondition)

   OAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.configuration.EnableWebSecurity' (OnClassCondition)

   OAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.oauth2.server.resource.BearerTokenAuthenticationToken' (OnClassCondition)

   ProjectInfoAutoConfiguration#buildProperties:
      Did not match:
         - @ConditionalOnResource did not find resource '${spring.info.build.location:classpath:META-INF/build-info.properties}' (OnResourceCondition)

   ProjectInfoAutoConfiguration#gitProperties:
      Did not match:
         - GitResource did not find git info at classpath:git.properties (ProjectInfoAutoConfiguration.GitResourceAvailableCondition)

   PrometheusMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.prometheus.PrometheusMeterRegistry' (OnClassCondition)

   QuartzAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   QuartzEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.quartz.Scheduler' (OnClassCondition)

   R2dbcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcDataAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.r2dbc.core.R2dbcEntityTemplate' (OnClassCondition)

   R2dbcInitializationConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.r2dbc.spi.ConnectionFactory', 'org.springframework.r2dbc.connection.init.DatabasePopulator' (OnClassCondition)

   R2dbcRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.r2dbc.spi.ConnectionFactory' (OnClassCondition)

   R2dbcTransactionManagerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.r2dbc.connection.R2dbcTransactionManager' (OnClassCondition)

   RSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketRequesterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RSocketSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor' (OnClassCondition)

   RSocketServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.core.RSocketServer' (OnClassCondition)

   RSocketStrategiesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.rsocket.RSocket' (OnClassCondition)

   RabbitAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.Channel' (OnClassCondition)

   RabbitHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.amqp.rabbit.core.RabbitTemplate' (OnClassCondition)

   RabbitMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.rabbitmq.client.ConnectionFactory' (OnClassCondition)

   ReactiveCloudFoundryActuatorAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveElasticsearchRepositoriesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.elasticsearch.client.reactive.ReactiveElasticsearchClient' (OnClassCondition)

   ReactiveElasticsearchRestClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)

   ReactiveManagementContextAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   ReactiveManagementWebSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveOAuth2ResourceServerAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveSecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity' (OnClassCondition)

   ReactiveUserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.ReactiveAuthenticationManager' (OnClassCondition)

   ReactiveWebServerFactoryAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   RedisAutoConfiguration#redisTemplate:
      Did not match:
         - @ConditionalOnMissingBean (names: redisTemplate; SearchStrategy: all) found beans named redisTemplate (OnBeanCondition)

   RedisHealthContributorAutoConfiguration#redisHealthContributor:
      Did not match:
         - @ConditionalOnMissingBean (names: redisHealthIndicator,redisHealthContributor; SearchStrategy: all) found beans named redisHealthContributor (OnBeanCondition)

   RepositoryRestMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration' (OnClassCondition)

   Saml2RelyingPartyAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository' (OnClassCondition)

   SecurityAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.DefaultAuthenticationEventPublisher' (OnClassCondition)

   SecurityFilterAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.config.http.SessionCreationPolicy' (OnClassCondition)

   SecurityRequestMatchersManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.web.util.matcher.RequestMatcher' (OnClassCondition)

   SendGridAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.sendgrid.SendGrid' (OnClassCondition)

   ServletEndpointManagementContextConfiguration.JerseyServletEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.glassfish.jersey.server.ResourceConfig' (OnClassCondition)

   ServletManagementContextAutoConfiguration.ApplicationContextFilterConfiguration:
      Did not match:
         - @ConditionalOnProperty (management.server.add-application-context-header=true) did not find property 'add-application-context-header' (OnPropertyCondition)

   ServletWebServerFactoryAutoConfiguration#forwardedHeaderFilter:
      Did not match:
         - @ConditionalOnProperty (server.forward-headers-strategy=framework) did not find property 'server.forward-headers-strategy' (OnPropertyCondition)

   ServletWebServerFactoryConfiguration.EmbeddedJetty:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.server.Server', 'org.eclipse.jetty.util.Loader', 'org.eclipse.jetty.webapp.WebAppContext' (OnClassCondition)

   ServletWebServerFactoryConfiguration.EmbeddedUndertow:
      Did not match:
         - @ConditionalOnClass did not find required classes 'io.undertow.Undertow', 'org.xnio.SslClientAuthMode' (OnClassCondition)

   SessionAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.Session' (OnClassCondition)

   SessionsEndpointAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.session.FindByIndexNameSessionRepository' (OnClassCondition)

   SignalFxMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.signalfx.SignalFxMeterRegistry' (OnClassCondition)

   SolrAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.impl.CloudSolrClient' (OnClassCondition)

   SolrHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.apache.solr.client.solrj.SolrClient' (OnClassCondition)

   SpringBootAdminClientAutoConfiguration.ReactiveConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   SpringBootAdminClientAutoConfiguration.ReactiveRegistrationClientConfig:
      Did not match:
         - @ConditionalOnBean did not find required type 'org.springframework.web.reactive.function.client.WebClient$Builder' (OnBeanCondition)
         - @ConditionalOnBean (types: org.springframework.web.reactive.function.client.WebClient$Builder; SearchStrategy: all) did not find any beans of type org.springframework.web.reactive.function.client.WebClient$Builder (OnBeanCondition)

   SpringBootAdminClientCloudFoundryAutoConfiguration:
      Did not match:
         - @ConditionalOnCloudPlatform did not find CLOUD_FOUNDRY (OnCloudPlatformCondition)
      Matched:
         - @ConditionalOnWebApplication (required) found 'session' scope (OnWebApplicationCondition)
         - matched (SpringBootAdminClientEnabledCondition)

   StackdriverMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.stackdriver.StackdriverMeterRegistry' (OnClassCondition)

   StartupEndpointAutoConfiguration:
      Did not match:
         - ApplicationStartup configured applicationStartup is of type class org.springframework.core.metrics.DefaultApplicationStartup, expected BufferingApplicationStartup. (StartupEndpointAutoConfiguration.ApplicationStartupCondition)

   StatsdMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.micrometer.statsd.StatsdMeterRegistry' (OnClassCondition)

   TaskExecutionAutoConfiguration#applicationTaskExecutor:
      Did not match:
         - @ConditionalOnMissingBean (types: java.util.concurrent.Executor; SearchStrategy: all) found beans of type 'java.util.concurrent.Executor' asyncThreadPoolTaskExecutor (OnBeanCondition)

   TaskSchedulingAutoConfiguration#taskScheduler:
      Did not match:
         - @ConditionalOnBean (names: org.springframework.context.annotation.internalScheduledAnnotationProcessor; SearchStrategy: all) did not find any beans named org.springframework.context.annotation.internalScheduledAnnotationProcessor (OnBeanCondition)

   ThymeleafAutoConfiguration.DataAttributeDialectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.github.mxab.thymeleaf.extras.dataattribute.dialect.DataAttributeDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafReactiveConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ThymeleafAutoConfiguration.ThymeleafSecurityDialectConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.thymeleaf.extras.springsecurity5.dialect.SpringSecurityDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebFluxConfiguration:
      Did not match:
         - did not find reactive web application classes (OnWebApplicationCondition)

   ThymeleafAutoConfiguration.ThymeleafWebLayoutConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'nz.net.ultraq.thymeleaf.LayoutDialect' (OnClassCondition)

   ThymeleafAutoConfiguration.ThymeleafWebMvcConfiguration#resourceUrlEncodingFilter:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)

   TransactionAutoConfiguration#transactionalOperator:
      Did not match:
         - @ConditionalOnSingleCandidate (types: org.springframework.transaction.ReactiveTransactionManager; SearchStrategy: all) did not find any beans (OnBeanCondition)

   TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration:
      Did not match:
         - @ConditionalOnProperty (spring.aop.proxy-target-class=false) did not find property 'proxy-target-class' (OnPropertyCondition)

   UserDetailsServiceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.security.authentication.AuthenticationManager' (OnClassCondition)

   ValidationAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.validation.executable.ExecutableValidator' (OnClassCondition)

   WavefrontMetricsExportAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'com.wavefront.sdk.common.WavefrontSender' (OnClassCondition)

   WebClientAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebClientMetricsConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)

   WebFluxAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)

   WebFluxEndpointManagementContextConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)

   WebFluxMetricsAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebMvcAutoConfiguration:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport; SearchStrategy: all) found beans of type 'org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport' org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'javax.servlet.Servlet', 'org.springframework.web.servlet.DispatcherServlet', 'org.springframework.web.servlet.config.annotation.WebMvcConfigurer' (OnClassCondition)
         - found 'session' scope (OnWebApplicationCondition)

   WebMvcAutoConfiguration.ResourceChainCustomizerConfiguration:
      Did not match:
         - @ConditionalOnEnabledResourceChain did not find class org.webjars.WebJarAssetLocator (OnEnabledResourceChainCondition)
         - Ancestor org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration did not match (ConditionEvaluationReport.AncestorsMatchedCondition)

   WebServiceTemplateAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.client.core.WebServiceTemplate' (OnClassCondition)

   WebServicesAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.ws.transport.http.MessageDispatcherServlet' (OnClassCondition)

   WebSocketMessagingAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer' (OnClassCondition)

   WebSocketReactiveAutoConfiguration:
      Did not match:
         - @ConditionalOnWebApplication did not find reactive web application classes (OnWebApplicationCondition)

   WebSocketServletAutoConfiguration.Jetty10WebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required classes 'org.eclipse.jetty.websocket.javax.server.internal.JavaxWebSocketServerContainer', 'org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer' (OnClassCondition)

   WebSocketServletAutoConfiguration.JettyWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'org.eclipse.jetty.websocket.jsr356.server.deploy.WebSocketServerContainerInitializer' (OnClassCondition)

   WebSocketServletAutoConfiguration.UndertowWebSocketConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'io.undertow.websockets.jsr.Bootstrap' (OnClassCondition)

   XADataSourceAutoConfiguration:
      Did not match:
         - @ConditionalOnClass did not find required class 'javax.transaction.TransactionManager' (OnClassCondition)


Exclusions:
-----------

    org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

    org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration


Unconditional classes:
----------------------

    org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration

    org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration

    org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration

    org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration

    org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration

    org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration



2022-08-30 13:47:05.418 [main] [DEBUG] o.s.b.c.p.s.ConfigurationPropertySourcesPropertyResolver$DefaultResolver - Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
2022-08-30 13:47:05.419 [main] [INFO ] com.test.springboot.SpringbootApplication - Started SpringbootApplication in 4.515 seconds (JVM running for 5.115)
2022-08-30 13:47:05.422 [main] [DEBUG] o.s.boot.availability.ApplicationAvailabilityBean - Application availability state LivenessState changed to CORRECT
2022-08-30 13:47:05.423 [main] [DEBUG] o.s.boot.availability.ApplicationAvailabilityBean - Application availability state ReadinessState changed to ACCEPTING_TRAFFIC
2022-08-30 13:47:05.435 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:47:05.436 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Cluster ID: N_qWYp0DR-CyFe0Vu-kqrw
2022-08-30 13:47:05.437 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Discovered group coordinator 110.40.220.207:9092 (id: 2147483646 rack: null)
2022-08-30 13:47:05.438 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:47:05.438 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 13:47:05.447 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:47:05.524 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] (Re-)joining group
2022-08-30 13:47:05.554 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully joined group with generation Generation{generationId=115, memberId='consumer-test-consumer-1-04975d52-7e36-4715-9697-a3a18e783695', protocol='range'}
2022-08-30 13:47:05.556 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Finished assignment for group at generation 115: {consumer-test-consumer-1-04975d52-7e36-4715-9697-a3a18e783695=Assignment(partitions=[test-0])}
2022-08-30 13:47:05.589 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.AbstractCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Successfully synced group in generation Generation{generationId=115, memberId='consumer-test-consumer-1-04975d52-7e36-4715-9697-a3a18e783695', protocol='range'}
2022-08-30 13:47:05.589 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Notifying assignor about the new Assignment(partitions=[test-0])
2022-08-30 13:47:05.591 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Adding newly assigned partitions: test-0
2022-08-30 13:47:05.653 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.a.k.c.consumer.internals.ConsumerCoordinator - [Consumer clientId=consumer-test-consumer-1, groupId=test-consumer] Setting offset for partition test-0 to the committed offset FetchPosition{offset=73, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[110.40.220.207:9092 (id: 1 rack: null)], epoch=0}}
2022-08-30 13:47:05.654 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] [INFO ] o.s.kafka.listener.KafkaMessageListenerContainer - test-consumer: partitions assigned: [test-0]
2022-08-30 13:47:05.673 [RMI TCP Connection(1)-192.168.9.100] [INFO ] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-08-30 13:47:05.674 [RMI TCP Connection(1)-192.168.9.100] [INFO ] org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2022-08-30 13:47:05.674 [RMI TCP Connection(1)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2022-08-30 13:47:05.674 [RMI TCP Connection(1)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2022-08-30 13:47:05.674 [RMI TCP Connection(1)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2022-08-30 13:47:05.685 [RMI TCP Connection(1)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@11f83bcf
2022-08-30 13:47:05.686 [RMI TCP Connection(1)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@1e3a082e
2022-08-30 13:47:05.687 [RMI TCP Connection(1)-192.168.9.100] [DEBUG] org.springframework.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2022-08-30 13:47:05.687 [RMI TCP Connection(1)-192.168.9.100] [INFO ] org.springframework.web.servlet.DispatcherServlet - Completed initialization in 13 ms
2022-08-30 13:47:05.917 [RMI TCP Connection(3)-192.168.9.100] [INFO ] com.alibaba.druid.pool.DruidDataSource - {dataSource-1,mybatis} inited
2022-08-30 13:47:06.354 [RMI TCP Connection(3)-192.168.9.100] [INFO ] com.alibaba.druid.pool.DruidDataSource - {dataSource-2,springbootdb} inited
2022-08-30 13:47:06.657 [RMI TCP Connection(3)-192.168.9.100] [INFO ] org.mongodb.driver.connection - Opened connection [connectionId{localValue:3, serverValue:125}] to localhost:27017
2022-08-30 13:47:07.489 [registrationTask1] [WARN ] d.c.b.a.client.registration.ApplicationRegistrator - Failed to register application as Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/) at spring-boot-admin ([http://localhost:9002/instances]): I/O error on POST request for "http://localhost:9002/instances": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect. Further attempts are logged on DEBUG level
2022-08-30 13:47:15.438 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:47:15.438 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:47:15.439 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:47:25.435 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:47:25.435 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:47:25.436 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:47:35.428 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:47:35.430 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:47:35.431 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:47:40.178 [http-nio-8081-exec-2] [DEBUG] org.springframework.web.servlet.DispatcherServlet - GET "/mongouser/condition?size=3&page=5", parameters={masked}
2022-08-30 13:47:40.183 [http-nio-8081-exec-2] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserByCondition(int, int, MongoUser)
2022-08-30 13:47:40.228 [http-nio-8081-exec-2] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 13:47:40.229 [http-nio-8081-exec-2] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 6 of 0 containing UNKNOWN instances]
2022-08-30 13:47:40.236 [http-nio-8081-exec-2] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 13:47:45.429 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:47:45.429 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:47:45.430 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:47:55.433 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:47:55.433 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:47:55.433 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:48:05.431 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:48:05.432 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:48:05.432 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:48:15.429 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:48:15.429 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:48:15.429 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:48:25.431 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:48:25.431 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:48:25.431 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:48:35.439 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:48:35.440 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:48:35.440 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:48:45.441 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:48:45.441 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:48:45.441 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:48:55.439 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:48:55.439 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:48:55.439 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:49:05.439 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:49:05.439 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:49:05.439 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:49:15.435 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:49:15.435 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:49:15.436 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:49:25.439 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:49:25.439 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:49:25.440 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:49:35.435 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:49:35.435 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:49:35.435 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:49:45.429 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:49:45.429 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:49:45.429 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:49:55.432 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:49:55.433 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:49:55.433 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:50:05.440 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:50:05.440 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:50:05.441 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:50:15.434 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:50:15.434 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:50:15.434 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:50:25.440 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:50:25.440 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:50:25.440 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:50:35.425 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:50:35.426 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:50:35.426 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:50:45.433 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:50:45.433 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:50:45.434 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:50:55.442 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:50:55.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:50:55.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:51:05.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:51:05.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:51:05.428 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:51:15.440 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:51:15.441 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:51:15.441 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:51:25.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:51:25.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:51:25.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:51:34.967 [http-nio-8081-exec-5] [DEBUG] org.springframework.web.servlet.DispatcherServlet - GET "/mongouser/condition?size=3&page=5", parameters={masked}
2022-08-30 13:51:34.968 [http-nio-8081-exec-5] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserByCondition(int, int, MongoUser)
2022-08-30 13:51:34.971 [http-nio-8081-exec-5] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 13:51:34.972 [http-nio-8081-exec-5] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 6 of 0 containing UNKNOWN instances]
2022-08-30 13:51:34.973 [http-nio-8081-exec-5] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 13:51:35.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:51:35.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:51:35.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:51:41.837 [http-nio-8081-exec-6] [DEBUG] org.springframework.web.servlet.DispatcherServlet - GET "/mongouser/condition?size=0&page=1", parameters={masked}
2022-08-30 13:51:41.838 [http-nio-8081-exec-6] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserByCondition(int, int, MongoUser)
2022-08-30 13:51:41.843 [http-nio-8081-exec-6] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Failed to complete request: java.lang.IllegalArgumentException: Page size must not be less than one!
2022-08-30 13:51:41.845 [http-nio-8081-exec-6] [ERROR] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.IllegalArgumentException: Page size must not be less than one!] with root cause
java.lang.IllegalArgumentException: Page size must not be less than one!
	at org.springframework.data.domain.AbstractPageRequest.<init>(AbstractPageRequest.java:48)
	at org.springframework.data.domain.PageRequest.<init>(PageRequest.java:45)
	at org.springframework.data.domain.PageRequest.of(PageRequest.java:72)
	at com.test.springboot.service.mongodb.MongoUserService.getUserByCondition(MongoUserService.java:105)
	at com.test.springboot.controller.mongodb.MongoDBController.getUserByCondition(MongoDBController.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at com.test.springboot.controller.filterInterceptor.TestFilter.doFilter(TestFilter.java:26)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1722)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-08-30 13:51:41.856 [http-nio-8081-exec-6] [DEBUG] org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/error?size=0&page=1", parameters={masked}
2022-08-30 13:51:41.858 [http-nio-8081-exec-6] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)
2022-08-30 13:51:41.859 [http-nio-8081-exec-6] [DEBUG] o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 13:51:41.859 [http-nio-8081-exec-6] [DEBUG] o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{timestamp=Tue Aug 30 13:51:41 CST 2022, status=500, error=Internal Server Error, path=/mongouser/co (truncated)...]
2022-08-30 13:51:41.861 [http-nio-8081-exec-6] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 500
2022-08-30 13:51:45.428 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:51:45.429 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:51:45.429 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:51:50.907 [http-nio-8081-exec-8] [DEBUG] org.springframework.web.servlet.DispatcherServlet - GET "/mongouser/condition?size=1&page=0", parameters={masked}
2022-08-30 13:51:50.907 [http-nio-8081-exec-8] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserByCondition(int, int, MongoUser)
2022-08-30 13:51:50.925 [http-nio-8081-exec-8] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 13:51:50.926 [http-nio-8081-exec-8] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 1 of 1 containing com.test.springboot.bean.MongoUser instances]
2022-08-30 13:51:50.927 [http-nio-8081-exec-8] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 13:51:55.437 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:51:55.437 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:51:55.437 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:52:05.433 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:52:05.433 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:52:05.434 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:52:06.062 [http-nio-8081-exec-9] [DEBUG] org.springframework.web.servlet.DispatcherServlet - GET "/mongouser/condition?size=1&page=0", parameters={masked}
2022-08-30 13:52:06.063 [http-nio-8081-exec-9] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserByCondition(int, int, MongoUser)
2022-08-30 13:52:06.067 [http-nio-8081-exec-9] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 13:52:06.068 [http-nio-8081-exec-9] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 1 of 1 containing com.test.springboot.bean.MongoUser instances]
2022-08-30 13:52:06.068 [http-nio-8081-exec-9] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 13:52:10.719 [http-nio-8081-exec-10] [DEBUG] org.springframework.web.servlet.DispatcherServlet - GET "/mongouser/condition?size=1&page=0", parameters={masked}
2022-08-30 13:52:10.720 [http-nio-8081-exec-10] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserByCondition(int, int, MongoUser)
2022-08-30 13:52:10.722 [http-nio-8081-exec-10] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 13:52:10.722 [http-nio-8081-exec-10] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 1 of 1 containing com.test.springboot.bean.MongoUser instances]
2022-08-30 13:52:10.723 [http-nio-8081-exec-10] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 13:52:11.487 [http-nio-8081-exec-1] [DEBUG] org.springframework.web.servlet.DispatcherServlet - GET "/mongouser/condition?size=1&page=0", parameters={masked}
2022-08-30 13:52:11.488 [http-nio-8081-exec-1] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserByCondition(int, int, MongoUser)
2022-08-30 13:52:11.503 [http-nio-8081-exec-1] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 13:52:11.504 [http-nio-8081-exec-1] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 1 of 1 containing com.test.springboot.bean.MongoUser instances]
2022-08-30 13:52:11.505 [http-nio-8081-exec-1] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 13:52:15.441 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:52:15.441 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:52:15.442 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:52:23.580 [http-nio-8081-exec-2] [DEBUG] org.springframework.web.servlet.DispatcherServlet - GET "/mongouser/condition?size=99&page=0", parameters={masked}
2022-08-30 13:52:23.581 [http-nio-8081-exec-2] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserByCondition(int, int, MongoUser)
2022-08-30 13:52:23.584 [http-nio-8081-exec-2] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 13:52:23.584 [http-nio-8081-exec-2] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 1 of 1 containing com.test.springboot.bean.MongoUser instances]
2022-08-30 13:52:23.585 [http-nio-8081-exec-2] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 13:52:25.431 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:52:25.431 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:52:25.431 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:52:35.442 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:52:35.442 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:52:35.442 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:52:45.435 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:52:45.435 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:52:45.435 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:52:55.431 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:52:55.431 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:52:55.431 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:53:05.438 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:53:05.438 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:53:05.438 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:53:15.439 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:53:15.439 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:53:15.439 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:53:25.433 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:53:25.433 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:53:25.433 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:53:35.439 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:53:35.439 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:53:35.439 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:53:45.430 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:53:45.430 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:53:45.431 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:53:55.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:53:55.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:53:55.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:54:05.437 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:54:05.437 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:54:05.437 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:54:11.970 [http-nio-8081-exec-5] [DEBUG] org.springframework.web.servlet.DispatcherServlet - GET "/mongouser/condition?size=99&page=0&name=kent", parameters={masked}
2022-08-30 13:54:11.970 [http-nio-8081-exec-5] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserByCondition(int, int, MongoUser)
2022-08-30 13:54:11.977 [http-nio-8081-exec-5] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 13:54:11.978 [http-nio-8081-exec-5] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 1 of 1 containing com.test.springboot.bean.MongoUser instances]
2022-08-30 13:54:11.979 [http-nio-8081-exec-5] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 13:54:15.429 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:54:15.429 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:54:15.429 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:54:19.451 [http-nio-8081-exec-6] [DEBUG] org.springframework.web.servlet.DispatcherServlet - GET "/mongouser/condition?size=99&page=0&age=40", parameters={masked}
2022-08-30 13:54:19.451 [http-nio-8081-exec-6] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserByCondition(int, int, MongoUser)
2022-08-30 13:54:19.454 [http-nio-8081-exec-6] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 13:54:19.454 [http-nio-8081-exec-6] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 1 of 1 containing com.test.springboot.bean.MongoUser instances]
2022-08-30 13:54:19.455 [http-nio-8081-exec-6] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 13:54:25.434 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:54:25.434 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:54:25.435 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:54:35.435 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:54:35.435 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:54:35.436 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:54:35.488 [http-nio-8081-exec-7] [DEBUG] org.springframework.web.servlet.DispatcherServlet - GET "/mongouser/condition?size=99&page=0&age=1", parameters={masked}
2022-08-30 13:54:35.488 [http-nio-8081-exec-7] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserByCondition(int, int, MongoUser)
2022-08-30 13:54:35.490 [http-nio-8081-exec-7] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 13:54:35.491 [http-nio-8081-exec-7] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 1 of 1 containing com.test.springboot.bean.MongoUser instances]
2022-08-30 13:54:35.491 [http-nio-8081-exec-7] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 13:54:41.988 [http-nio-8081-exec-8] [DEBUG] org.springframework.web.servlet.DispatcherServlet - GET "/mongouser/condition?size=99&page=0&age=19", parameters={masked}
2022-08-30 13:54:41.989 [http-nio-8081-exec-8] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserByCondition(int, int, MongoUser)
2022-08-30 13:54:41.991 [http-nio-8081-exec-8] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 13:54:41.991 [http-nio-8081-exec-8] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 1 of 1 containing com.test.springboot.bean.MongoUser instances]
2022-08-30 13:54:41.992 [http-nio-8081-exec-8] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 13:54:45.428 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:54:45.428 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:54:45.428 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:54:55.432 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:54:55.432 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:54:55.432 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:55:05.431 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:55:05.431 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:55:05.431 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:55:15.434 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:55:15.434 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:55:15.434 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:55:25.436 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:55:25.436 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:55:25.436 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:55:31.844 [http-nio-8081-exec-9] [DEBUG] org.springframework.web.servlet.DispatcherServlet - GET "/mongouser/condition?size=99&page=0&description=www", parameters={masked}
2022-08-30 13:55:31.845 [http-nio-8081-exec-9] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserByCondition(int, int, MongoUser)
2022-08-30 13:55:31.847 [http-nio-8081-exec-9] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 13:55:31.848 [http-nio-8081-exec-9] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 1 of 1 containing com.test.springboot.bean.MongoUser instances]
2022-08-30 13:55:31.848 [http-nio-8081-exec-9] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 13:55:35.442 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:55:35.442 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:55:35.443 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:55:44.850 [http-nio-8081-exec-10] [DEBUG] org.springframework.web.servlet.DispatcherServlet - GET "/mongouser/condition?size=99&page=0&description=www", parameters={masked}
2022-08-30 13:55:44.851 [http-nio-8081-exec-10] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserByCondition(int, int, MongoUser)
2022-08-30 13:55:44.853 [http-nio-8081-exec-10] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 13:55:44.854 [http-nio-8081-exec-10] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 1 of 1 containing com.test.springboot.bean.MongoUser instances]
2022-08-30 13:55:44.855 [http-nio-8081-exec-10] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 13:55:45.428 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:55:45.428 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:55:45.428 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:55:55.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:55:55.427 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:55:55.428 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:56:05.436 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:56:05.437 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:56:05.437 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:56:13.476 [http-nio-8081-exec-1] [DEBUG] org.springframework.web.servlet.DispatcherServlet - GET "/mongouser/condition?size=99&page=0&description=www", parameters={masked}
2022-08-30 13:56:13.476 [http-nio-8081-exec-1] [DEBUG] o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.test.springboot.controller.mongodb.MongoDBController#getUserByCondition(int, int, MongoUser)
2022-08-30 13:56:13.478 [http-nio-8081-exec-1] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json]
2022-08-30 13:56:13.479 [http-nio-8081-exec-1] [DEBUG] o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Page 1 of 1 containing com.test.springboot.bean.MongoUser instances]
2022-08-30 13:56:13.479 [http-nio-8081-exec-1] [DEBUG] org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2022-08-30 13:56:15.428 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:56:15.428 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:56:15.428 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:56:25.439 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:56:25.439 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:56:25.440 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:56:35.438 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:56:35.438 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:56:35.438 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:56:45.428 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:56:45.428 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:56:45.428 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:56:55.440 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:56:55.440 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:56:55.440 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:57:05.435 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:57:05.436 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:57:05.436 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:57:15.437 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:57:15.437 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:57:15.437 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:57:25.436 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:57:25.436 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:57:25.436 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:57:35.438 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:57:35.439 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:57:35.439 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:57:45.441 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:57:45.442 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:57:45.442 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:57:55.436 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:57:55.436 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:57:55.437 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:58:05.430 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:58:05.430 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:58:05.430 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:58:15.439 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:58:15.439 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:58:15.439 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:58:25.440 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:58:25.440 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:58:25.440 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:58:35.439 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:58:35.439 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:58:35.439 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:58:45.429 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:58:45.429 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:58:45.429 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:58:55.432 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:58:55.432 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:58:55.433 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:59:05.434 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:59:05.434 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:59:05.435 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
2022-08-30 13:59:15.432 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - HTTP POST http://localhost:9002/instances
2022-08-30 13:59:15.432 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2022-08-30 13:59:15.432 [registrationTask1] [DEBUG] org.springframework.web.client.RestTemplate - Writing [Application(name=spring-boot-application, managementUrl=http://gaofengkai.baheal.com:8081/monitor, healthUrl=http://gaofengkai.baheal.com:8081/monitor/health, serviceUrl=http://gaofengkai.baheal.com:8081/)] as "application/json"
